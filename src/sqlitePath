/home/czq/SACExpriment/sacSubmit/sqlite_Graphs/
read 2 files, 1958 Function Defs, 19840 function calls, contain  1647 unrepeat function calls
@relation 'FunctionCalls'
0,translateColumnToCopy()
1,sqlite3_result_int()
2,pagerOpenSavepoint()
3,explainSimpleCount()
4,sqlite3OsSectorSize()
5,logBadConnection()
6,readMasterJournal()
7,vdbeSorterJoinThread()
8,sqlite3ValueFromExpr()
9,sqlite3_file_control()
10,sqlite3_uri_parameter()
11,sqlite3KeyInfoOfIndex()
12,str_in_array()
13,sqlite3_sleep()
14,sqlite3ExprAttachSubtrees()
15,sqlite3MutexInit()
16,xMutexAlloc()
17,sqlite3OsAccess()
18,walIndexAppend()
19,resolveAsName()
20,sqlite3_vsnprintf()
21,compare2pow63()
22,triggerStepAllocate()
23,sqlite3_value_type()
24,sqlite3StatusDown()
25,sqlite3Error()
26,sqlite3HexToInt()
27,walChecksumBytes()
28,pagerStress()
29,dupedExprStructSize()
30,walRestartHdr()
31,pager_wait_on_lock()
32,getSafetyLevel()
33,sqlite3VtabUnlock()
34,walIteratorFree()
35,decodeFlags()
36,xSectorSize()
37,freeSpace()
38,sqlite3SelectAddColumnTypeAndCollation()
39,sqlite3CloseExtensions()
40,sqlite3Parser()
41,unixTempFileDir()
42,growVTrans()
43,sqlite3LocateCollSeq()
44,sqlite3_result_error_nomem()
45,sqlite3OpenTempDatabase()
46,computeNumericType()
47,sqlite3ExprCollSeq()
48,whereRangeScanEst()
49,sqlite3RowidConstraint()
50,databaseIsUnmoved()
51,dlclose()
52,pagerWalFrames()
53,sqlite3_backup_step()
54,sqlite3SafetyCheckOk()
55,sqlite3ExprCompare()
56,backupTruncateFile()
57,sqlite3ReadSchema()
58,xLog()
59,sqlite3IdListDup()
60,vdbeMemClearExternAndSetNull()
61,strlen()
62,sqlite3_mprintf()
63,sqlite3PagerUnrefNotNull()
64,whereScanNext()
65,sqlite3MallocInit()
66,sqlite3VdbeLoadString()
67,sqlite3VtabRollback()
68,sqlite3MemSetDefault()
69,schemaIsValid()
70,whereLoopInit()
71,sqlite3PCachePercentDirty()
72,xUnfetch()
73,unixRemapfile()
74,exprCommute()
75,xferOptimization()
76,sqlite3VdbeMemSetStr()
77,shell_exec()
78,sqlite3BtreeCheckpoint()
79,sqlite3ExprNeedsNoAffinityChange()
80,sqlite3PutVarint()
81,xFileSize()
82,sqlite3PcacheSize()
83,vdbeSorterRecordFree()
84,fsync()
85,multiSelect()
86,matchQuality()
87,pthread_mutex_unlock()
88,sqlite3BtreePayloadFetch()
89,sqlite3WhereEnd()
90,sqlite3_prepare_v2()
91,sqlite3WalUndo()
92,sqlite3_column_int()
93,assert()
94,sqlite3WalSavepoint()
95,explainIndexColumnName()
96,querySharedCacheTableLock()
97,xSleep()
98,vdbeMemFromBtreeResize()
99,robustFchown()
100,autoIncStep()
101,sqlite3PagerWalSupported()
102,setDestPgsz()
103,sqlite3ExprCode()
104,sqlite3ExprAddCollateString()
105,whereLoopOutputAdjust()
106,vdbeIncrFree()
107,sqlite3PagerPagecount()
108,balance_deeper()
109,sqlite3VdbeDb()
110,handleMovedCursor()
111,putVarint64()
112,exprSetHeight()
113,sqlite3BtreeSchema()
114,shell_callback()
115,sqlite3DecOrHexToI64()
116,transferParseError()
117,sqlite3OsUnlock()
118,sqlite3_errmsg()
119,resolveAlias()
120,sqlite3BtreeIsInReadTrans()
121,doubleToInt64()
122,walDecodeFrame()
123,xFullPathname()
124,sqlite3OpenTable()
125,sqlite3StrICmp()
126,sqlite3SrcListLookup()
127,sqlite3AddInt64()
128,invokeProfileCallback()
129,sqlite3_value_int64()
130,getpid()
131,sqlite3PcacheMakeDirty()
132,sqlite3WalCheckpoint()
133,sqlite3_value_bytes16()
134,local_getline()
135,sqlite3PagerGet()
136,sqlite3ExprCachePop()
137,clearDatabasePage()
138,pagerFreeMapHdrs()
139,whereOrInfoDelete()
140,pagerWriteLargeSector()
141,btreeDropTable()
142,createCollation()
143,whereLikeOptimizationStringFixup()
144,sqlite3ErrorMsg()
145,process_sqliterc()
146,sqlite3WalLimit()
147,sqlite3GenerateConstraintChecks()
148,isSimpleCount()
149,sqlite3ExprCodeTemp()
150,whereLoopAddBtree()
151,sqlite3Step()
152,sqlite3PagerGetJournalMode()
153,memmove()
154,sqlite3ResetOneSchema()
155,import_append_char()
156,sqlite3BtreeCursorZero()
157,out2PrereleaseWithClear()
158,releaseMemArray()
159,sqlite3ExprCacheStore()
160,sqlite3KeyInfoAlloc()
161,connectionIsBusy()
162,fprintf()
163,pageFreeArray()
164,sqlite3VdbeMemStringify()
165,sqlite3BtreeClearCursor()
166,removeFromSharingList()
167,sqlite3FindDbName()
168,storeLastErrno()
169,sqlite3BitvecSet()
170,x()
171,pager_reset()
172,sqlite3MemCompare()
173,sqlite3VtabDisconnect()
174,insertElement()
175,xDisconnect()
176,sqlite3_busy_handler()
177,sqlite3_create_function()
178,sqlite3VtabSavepoint()
179,sqlite3PageMalloc()
180,sqlite3HashInsert()
181,apiOomError()
182,sqlite3_column_text()
183,sqlite3BtreeGetMeta()
184,sqlite3_open()
185,rowSetListToTree()
186,sqlite3HeapNearlyFull()
187,sqlite3TokenInit()
188,parseHhMmSs()
189,localtime()
190,sqlite3DefaultMutex()
191,sqlite3PagerSavepoint()
192,sqlite3RowSetClear()
193,rewind()
194,ptrmapPut()
195,run_table_dump_query()
196,sqlite3ColumnType()
197,pagerUseWal()
198,sqlite3ClearTempRegCache()
199,sqlite3_wal_checkpoint()
200,setLikeOptFlag()
201,rowSetTreeToList()
202,sqlite3_create_collation_v2()
203,btreeHeapPull()
204,analyzeOneTable()
205,sqlite3VtabLock()
206,sqlite3_stmt_status()
207,pcache1ResizeHash()
208,isatty()
209,releasePage()
210,xMutexEnter()
211,getrusage()
212,vdbePmaReaderNext()
213,walNextHash()
214,sqlite3OsSync()
215,sqlite3BtreeGetReserveNoMutex()
216,sqlite3WalCallback()
217,sqlite3WhereCodeOneLoopStart()
218,sqlite3AuthCheck()
219,sqlite3GetVTable()
220,sqlite3NestedParse()
221,getAndInitPage()
222,sqlite3IsIdChar()
223,columnName()
224,invalidateTempStorage()
225,sqlite3VtabImportErrmsg()
226,sqlite3WalBeginWriteTransaction()
227,sqlite3SelectPrep()
228,sqlite3BackupRestart()
229,sqlite3MaterializeView()
230,sqlite3EndTable()
231,sqlite3BtreeCommit()
232,writeJournalHdr()
233,sqlite3PagerGetData()
234,saveAllCursors()
235,vdbeIncrPopulate()
236,rowSetEntryMerge()
237,pcache1RemoveFromHash()
238,pager_write_pagelist()
239,sqlite3VdbeChangeToNoop()
240,findIndexCol()
241,execExecSql()
242,xConstruct()
243,tableOfTrigger()
244,write32bits()
245,destroyRootPage()
246,xRecordCompare()
247,rowSetEntryAlloc()
248,dupedExprSize()
249,sqlite3RefillIndex()
250,pagerBeginReadTransaction()
251,sqlite3UniqueConstraint()
252,sqlite3WalClose()
253,walHash()
254,sqlite3PcacheOpen()
255,xRollbackCallback()
256,sqlite3Prepare()
257,computeYMD()
258,codeDistinct()
259,pcacheSortDirtyList()
260,sqlite3OsRead()
261,valueFromExpr()
262,disable_debug_trace_modes()
263,xSize()
264,fkLookupParent()
265,freePage()
266,allocVdbe()
267,sqlite3_trace_v2()
268,sqlite3PagerCheckpoint()
269,sqlite3StrAccumAppend()
270,sqlite3DeleteTable()
271,resetAccumulator()
272,addArgumentToVtab()
273,openSubJournal()
274,saveCursorPosition()
275,sqlite3BeginBenignMalloc()
276,sqlite3PcacheClearWritable()
277,autoVacuumCommit()
278,findBtree()
279,invalidateAllOverflowCache()
280,memjrnlCreateFile()
281,pclose()
282,sqlite3OsUnfetch()
283,balance()
284,sqlite3JournalOpen()
285,btreeInitPage()
286,sqlite3IdListIndex()
287,tableAndColumnIndex()
288,sqlite3AbsInt32()
289,sqlite3PagerRekey()
290,setDateTimeToCurrent()
291,wherePathSolver()
292,sqlite3SrcListDup()
293,btreeHeapInsert()
294,codeAllEqualityTerms()
295,sqlite3PcacheSetCachesize()
296,tryToClone()
297,walIteratorInit()
298,printBold()
299,sqlite3PcacheClear()
300,sqlite3PagerOpenWal()
301,callFinaliser()
302,sqlite3ExprIfFalse()
303,sqlite3Expr()
304,sqlite3FkActions()
305,sqlite3PagerSetFlags()
306,checkTreePage()
307,sqlite3_create_function_v2()
308,pcache1TruncateUnsafe()
309,whereScanInit()
310,walHashGet()
311,findReusableFd()
312,displayLinuxIoStats()
313,sqlite3VdbeHalt()
314,sqlite3PcacheRelease()
315,sqlite3WhereClauseClear()
316,vdbeMergeEngineNew()
317,sqlite3BtreeCommitPhaseOne()
318,autoIncBegin()
319,sqlite3BtreeSetCacheSize()
320,pagerAddPageToRollbackJournal()
321,sqlite3_value_blob()
322,estimateTableWidth()
323,xRead()
324,sqlite3RegisterPerConnectionBuiltinFunctions()
325,seekAndRead()
326,sqlite3CodeSubselect()
327,sqlite3ExprListFlags()
328,incrVacuumStep()
329,sqlite3_value_text16()
330,sqlite3GetTempRange()
331,isFatalError()
332,sqlite3MallocEnd()
333,moveToLeftmost()
334,xAccess()
335,sqlite3VdbeSetVarmask()
336,sqlite3_value_bytes()
337,verifyDbFile()
338,invalidateIncrblobCursors()
339,xMutexEnd()
340,sqlite3WalDbsize()
341,sqlite3BitvecTestNotNull()
342,sqlite3VdbeSetP4KeyInfo()
343,allocateIndexInfo()
344,sqlite3BinaryCompareCollSeq()
345,sqlite3WhereIsSorted()
346,sqlite3DropTriggerPtr()
347,pthread_mutex_trylock()
348,walIndexTryHdr()
349,btreeClearHasContent()
350,sqlite3VdbeIntegerAffinity()
351,sqlite3PagerMovepage()
352,sqlite3VdbeChangeEncoding()
353,sqlite3PrimaryKeyIndex()
354,sqlite3EndBenignMalloc()
355,vdbeMemClear()
356,explainIndexRange()
357,vtabCallConstructor()
358,sqlite3_wal_autocheckpoint()
359,sqlite3SetString()
360,sqlite3PagerSetPagesize()
361,sqlite3PagerWalCallback()
362,sqlite3HaltConstraint()
363,sqlite3BtreeIncrblobCursor()
364,isSetNullAction()
365,sqlite3CloseSavepoints()
366,sqlite3ExprCachePush()
367,sqlite3AllocateIndexObject()
368,lockBtree()
369,fkTriggerDelete()
370,sqlite3_result_double()
371,sqlite3VdbeJumpHere()
372,checkForMultiColumnSelectError()
373,generateOutputSubroutine()
374,sqlite3OpenTableAndIndices()
375,codeTriggerProgram()
376,main_init()
377,sqlite3VdbeAddOp3()
378,sqlite3DbFree()
379,sqlite3PcachePageRefcount()
380,sqlite3VdbeSerialGet()
381,sqlite3_realloc64()
382,btreePageFromDbPage()
383,findInodeInfo()
384,analyzeTable()
385,sqlite3WalkSelect()
386,whereNthSubterm()
387,btreePrevious()
388,__builtin_va_start()
389,fkChildIsModified()
390,updateVirtualTable()
391,sqlite3VdbeMemSetNull()
392,xCmp()
393,db_int()
394,pager_playback_one_page()
395,sqlite3PagerBegin()
396,isDistinctRedundant()
397,sqlite3MutexAlloc()
398,sqlite3ExprCodeMove()
399,sqlite3FkOldmask()
400,renderLogMsg()
401,process_input()
402,releaseInodeInfo()
403,seekAndWriteFd()
404,sqlite3BtreeSecureDelete()
405,xGetLastError()
406,sqlite3_wal_hook()
407,sqliteViewResetAll()
408,sqlite3NameFromToken()
409,findCollSeqEntry()
410,vdbeSorterRowkey()
411,sqlite3PagerFlush()
412,sqlite3VdbeGetBoundValue()
413,setOneColumnName()
414,sqlite3_db_status()
415,columnMallocFailure()
416,timeOfDay()
417,sqlite3VdbeGetOp()
418,sqlite3SchemaClear()
419,sqlite3_result_zeroblob64()
420,parseModifier()
421,sqlite3InvokeBusyHandler()
422,sqlite3CreateFunc()
423,unixShmPurge()
424,sqlite3BtreeRollback()
425,whereLoopAddOr()
426,sleep()
427,sqlite3DbMallocRawNN()
428,sqlite3ColumnOfIndex()
429,sqlite3GetToken()
430,sqlite3BtreeClose()
431,balance_quick()
432,pcacheManageDirtyList()
433,getenv()
434,termCanDriveIndex()
435,sqlite3_limit()
436,sqlite3ApiExit()
437,applyAffinity()
438,sqlite3StringToId()
439,pager_cksum()
440,pcache1FreePage()
441,getOverflowPage()
442,sqlite3_bind_null()
443,releaseAllSavepoints()
444,sqlite3_soft_heap_limit64()
445,sqlite3Get4byte()
446,sqlite3ResolveExprListNames()
447,cannotBeFunction()
448,fputc()
449,robust_open()
450,keyInfoFromExprList()
451,sqlite3KeywordCode()
452,xReiniter()
453,sqlite3CodeOnce()
454,sqlite3_value_double()
455,sqlite3VdbeSwap()
456,sqlite3ExprAnalyzeAggList()
457,sqlite3PcacheMove()
458,sqlite3WhereExplainOneScan()
459,unixGetTempname()
460,pagerLockDb()
461,open()
462,pagerPlaybackSavepoint()
463,contextMalloc()
464,sqlite3MallocAlarm()
465,sqlite3IndexAffinityOk()
466,clearCell()
467,hasHotJournal()
468,substExprList()
469,sqlite3ExprCodeLoadIndexColumn()
470,usage()
471,vdbePmaReaderInit()
472,vdbeSorterAddToTree()
473,parseYyyyMmDd()
474,sqlite3ResolveSelectNames()
475,pagerReleaseMapPage()
476,line_contains_semicolon()
477,sqlite3OsClose()
478,walIndexWriteHdr()
479,estLog()
480,pager_error()
481,S_ISDIR()
482,sqlite3OsWrite()
483,functionSearch()
484,display_scanstats()
485,enlargeAndAppend()
486,sqlite3ParseUri()
487,setChildPtrmaps()
488,sqlite3TriggerList()
489,sqlite3LogEstFromDouble()
490,seekAndWrite()
491,vdbePmaReaderIncrMergeInit()
492,sqlite3ResolveOrderGroupBy()
493,sqlite3Utf16to8()
494,sqlite3OsShmUnmap()
495,whereLoopAdjustCost()
496,vdbeMergeEngineStep()
497,createTableStmt()
498,sqlite3WhereGetMask()
499,pagerPagecount()
500,xWrite()
501,comparisonAffinity()
502,pcache1Free()
503,yy_find_shift_action()
504,sqlite3SectorSize()
505,xShmUnmap()
506,sqlite3_os_init()
507,sqlite3_status64()
508,pagerSyncHotJournal()
509,sqlite3DbReallocOrFree()
510,sqlite3_value_numeric_type()
511,sqlite3IsReadOnly()
512,indexColumnNotNull()
513,sqlite3WhereExprListUsage()
514,isSystemTable()
515,sqlite3Checkpoint()
516,sqlite3AuthContextPush()
517,pagerUnlockIfUnused()
518,sqlite3ExprCodeCopy()
519,yy_accept()
520,xDeviceCharacteristics()
521,sqlite3WhereTabFuncArgs()
522,sqlite3DbMallocRaw()
523,sqlite3_column_count()
524,indexMightHelpWithOrderBy()
525,memcpy()
526,putc()
527,xMutexInit()
528,sqlite3BlobCompare()
529,osLocaltime()
530,fillInUnixFile()
531,sqlite3CommitInternalChanges()
532,pageFindSlot()
533,vdbePmaReaderSeek()
534,isprint()
535,sqlite3ColumnsFromExprList()
536,walCkptInfo()
537,sqlite3VdbeMemClearAndResize()
538,operatorMask()
539,xUnlock()
540,strHash()
541,walUnlockExclusive()
542,exprIsConst()
543,sqlite3LogEst()
544,memcmp()
545,sqlite3_value_int()
546,sqlite3ExprCodeGetColumnToReg()
547,unlockBtreeMutex()
548,xFinalize()
549,sqlite3BtreeCursorRestore()
550,__builtin_va_arg()
551,parseDateOrTime()
552,exprStructSize()
553,sqlite3SchemaToIndex()
554,sqlite3WhereExprAnalyze()
555,pcache1PinPage()
556,vtabDisconnectAll()
557,xBenignEnd()
558,sqlite3BtreeCursorHasMoved()
559,finalizeAggFunctions()
560,sqlite3InsertBuiltinFuncs()
561,xPagecount()
562,sqlite3BtreePayloadSize()
563,save_err_msg()
564,vdbeMergeEngineFree()
565,sqlite3VdbeRecordCompareWithSkip()
566,vdbeUnbind()
567,backupUpdate()
568,sqlite3WhereIsDistinct()
569,sqlite3ExprImpliesExpr()
570,vdbePmaWriterFinish()
571,sqlite3SelectDestInit()
572,sqlite3BtreeSetPageSize()
573,sqlite3ScratchFree()
574,pagerAcquireMapPage()
575,unixOpenSharedMemory()
576,walLockExclusive()
577,sqlite3BtreeSavepoint()
578,btreeGetUnusedPage()
579,vdbePmaWriteBlob()
580,sqlite3WalFile()
581,sqlite3ExprAffinity()
582,sqlite3BtreeEnterCursor()
583,sqlite3MemJournalOpen()
584,synthCollSeq()
585,whereLoopCheaperProperSubset()
586,parseTimezone()
587,callback()
588,walIndexRecover()
589,sqlite3WalFindFrame()
590,readDbPage()
591,isLookaside()
592,sqlite3GetFuncCollSeq()
593,sqlite3IntFloatCompare()
594,cmdline_option_value()
595,exprSelectUsage()
596,sqlite3BtreeGetPageSize()
597,sqlite3OsRandomness()
598,pcache1FetchStage2()
599,sqlite3ParserFree()
600,sqlite3_step()
601,computeHMS()
602,columnMem()
603,sqlite3GetCollSeq()
604,exprAlwaysFalse()
605,ptrmapPageno()
606,exprAnalyzeOrTerm()
607,allocateTempSpace()
608,multiSelectValues()
609,sqlite3VdbeExec()
610,sqlite3ParserAlloc()
611,columnIndex()
612,sqlite3OsDlSym()
613,vtabBestIndex()
614,sqlite3MPrintf()
615,sqlite3ExprIsConstantNotJoin()
616,sqlite3AutoincrementEnd()
617,sqlite3Pcache1Mutex()
618,vdbeSorterSetupMerge()
619,sqlite3LeaveMutexAndCloseZombie()
620,sqlite3VdbeTransferError()
621,vdbeSorterGetCompare()
622,setSharedCacheTableLock()
623,sqlite3ValueSetStr()
624,sqlite3SelectNew()
625,sqlite3PagerDontWrite()
626,sqlite3PagerLockingMode()
627,reportError()
628,fread()
629,getRowTrigger()
630,sqlite3RollbackAll()
631,sqlite3FkReferences()
632,printf()
633,sqlite3VdbeGoto()
634,sqlite3ValueSetNull()
635,sqlite3ParserReset()
636,sqlite3VdbeError()
637,fgets()
638,sqlite3FkRequired()
639,xFetch()
640,sqlite3VdbeCountChanges()
641,exprTableRegister()
642,whereLoopResize()
643,yy_syntax_error()
644,walCleanupHash()
645,sqlite3_set_authorizer()
646,xDlClose()
647,moveToParent()
648,sqlite3OsCloseFree()
649,sqlite3_bind_text()
650,sqlite3SelectExprHeight()
651,btreeCreateTable()
652,vdbeIncrMergerSetThreads()
653,vacuumFinalize()
654,whereLoopAddVirtual()
655,sqlite3OsShmLock()
656,vdbeSorterTreeDepth()
657,_all_whitespace()
658,sqlite3HashInit()
659,sqlite3PcacheRefCount()
660,sqlite3MisuseError()
661,dbMallocRawFinish()
662,sqlite3OsLock()
663,sqlite3VdbeAddParseSchemaOp()
664,addToSavepointBitvecs()
665,sqlite3_realloc()
666,walIndexPage()
667,sqlite3GenerateRowDelete()
668,xCreate()
669,sqlite3VdbeAddOp0()
670,codeRowTrigger()
671,robust_close()
672,btreeParseCellAdjustSizeForOverflow()
673,sqlite3PcacheShrink()
674,btreePagecount()
675,sqlite3BtreeSharable()
676,output_reset()
677,getDigits()
678,sqlite3VdbeCurrentAddr()
679,xMutexLeave()
680,sqlite3SelectDup()
681,allowedOp()
682,sqlite3IsNaN()
683,sqlite3ExprCacheRemove()
684,tryToCloneSchema()
685,sqlite3_reset()
686,addWhereTerm()
687,Cleanup()
688,sqlite3VdbeLinkSubProgram()
689,sqlite3_config()
690,valueNew()
691,vdbeLeave()
692,sqlite3VdbeRunOnlyOnce()
693,walIteratorNext()
694,sqlite3PagerGetExtra()
695,sqlite3FixTriggerStep()
696,yy_reduce()
697,sqlite3ExprAnd()
698,checkConstraintUnchanged()
699,dupedExprNodeSize()
700,sqlite3MallocZero()
701,pagerFixMaplimit()
702,sqlite3PcacheFetchFinish()
703,sqlite3BtreeGetFilename()
704,sqlite3PagerOpenSavepoint()
705,saveCursorKey()
706,termIsEquivalence()
707,sqlite3VdbeIntValue()
708,sqlite3BtreeSetSpillSize()
709,insertCell()
710,sqlite3BtreeUpdateMeta()
711,freeTempSpace()
712,displayP4()
713,sqlite3TableLock()
714,sqlite3FkDelete()
715,fillInCell()
716,sqlite3_malloc()
717,releasePageNotNull()
718,sqlite3RunParser()
719,sqlite3Select()
720,walCheckpoint()
721,walLimitSize()
722,sqlite3FkCheck()
723,sqlite3CorruptError()
724,sqlite3WalExclusiveMode()
725,isMatchOfColumn()
726,btreeEndTransaction()
727,sqlite3MallocSize()
728,whereCombineDisjuncts()
729,pcache1AllocPage()
730,sqlite3ResolvePartIdxLabel()
731,codeTableLocks()
732,sqlite3PCacheSetDefault()
733,explainTempTable()
734,xCachesize()
735,heightOfSelect()
736,sqlite3AuthReadCol()
737,sqlite3ExprCodeAndCache()
738,xRoundup()
739,walMerge()
740,zeroJournalHdr()
741,sqlite3_result_int64()
742,sqlite3_memory_used()
743,sqlite3_load_extension()
744,hexDigitValue()
745,sqlite3_vfs_find()
746,sqlite3FkLocateIndex()
747,sqlite3CantopenError()
748,sqlite3VdbeMemHandleBom()
749,addModuleArgument()
750,sqlite3PcacheShutdown()
751,pagerUndoCallback()
752,sqlite3GetVdbe()
753,pcache1InitBulk()
754,sqlite3TempInMemory()
755,btreePageLookup()
756,sqlite3ExprDelete()
757,sqlite3_result_error_code()
758,free()
759,sqlite3WalFrames()
760,sqlite3PagerJrnlFile()
761,rehash()
762,zeroPage()
763,sqlite3StrAccumReset()
764,setvbuf()
765,sqlite3LockAndPrepare()
766,sqlite3SrcListAssignCursors()
767,sqlite3_randomness()
768,sqlite3_column_name()
769,sqlite3ExprAddCollateToken()
770,pcacheMergeDirtyList()
771,binaryCompareP5()
772,sqlite3_stricmp()
773,sqlite3VdbeSetNumCols()
774,xTruncate()
775,unixShmSystemLock()
776,findNextHostParameter()
777,timeFunc()
778,sqlite3BtreeSchemaLocked()
779,xCellSize()
780,readJournalHdr()
781,sqlite3BtreeKey()
782,isDate()
783,xUnpin()
784,xCollNeeded()
785,utimes()
786,sqlite3BtreeGetJournalname()
787,sqlite3WithPush()
788,sqlite3BitvecClear()
789,samplePushPrevious()
790,execSql()
791,sqlite3VdbeAllocUnpackedRecord()
792,sqlite3Atoi64()
793,sqlite3Reprepare()
794,sqlite3Malloc()
795,fgetc()
796,subjournalPageIfRequired()
797,sqlite3PagerOpen()
798,sqlite3ExprListDelete()
799,sqlite3PcacheClose()
800,vdbeReleaseAndSetInt64()
801,sqlite3WalkSelectFrom()
802,sqlite3_overload_function()
803,sqlite3BtreeGetOptimalReserve()
804,sqlite3VdbeReset()
805,convertToWithoutRowidTable()
806,sqlite3DeleteTriggerStep()
807,transferJoinMarkings()
808,whereLoopAddBtreeIndex()
809,vdbeFreeOpArray()
810,sqlite3VdbeEndCoroutine()
811,sqlite3BtreeEnterAll()
812,sqlite3PagerClose()
813,sqlite3PcacheRef()
814,xferCompatibleIndex()
815,sqlite3CodeDropTable()
816,pager_end_transaction()
817,sqliteAuthBadReturnCode()
818,sqlite3VdbeMemShallowCopy()
819,sqlite3CodeRowTriggerDirect()
820,sqlite3LoadExtension()
821,beginTimer()
822,moveToRightmost()
823,sqlite3PagerReadFileheader()
824,codeReal()
825,growOp3()
826,sqlite3ExprListSetName()
827,sqlite3VdbeSetSql()
828,downgradeAllSharedCacheTableLocks()
829,sqlite3Utf8CharLen()
830,sqlite3VdbeMemCast()
831,sqlite3ExprIfTrue()
832,sqlite3FindFunction()
833,balance_nonroot()
834,sqlite3ReleaseTempReg()
835,sqlite3ExprListCompare()
836,sqlite3VdbeLeave()
837,sqliteErrorFromPosixError()
838,vdbeSorterMapFile()
839,walFramePage()
840,vdbeSorterOpenTempFile()
841,ptrmapGet()
842,sqlite3DbMallocSize()
843,callStatGet()
844,markTermAsChild()
845,substExpr()
846,xDelete()
847,subjournalPage()
848,sqlite3PagerLookup()
849,xParseCell()
850,columnsInIndex()
851,pagerOpenWalIfPresent()
852,pcache1EnforceMaxPage()
853,sqlite3AutoincrementBegin()
854,xCheckReservedLock()
855,ptrmapPutOvflPtr()
856,unixCurrentTimeInt64()
857,vdbeIncrMergerNew()
858,sqlite3GetTempReg()
859,sqlite3PagerShrink()
860,sqlite3BtreeSetPagerFlags()
861,sqlite3ExprListDup()
862,sqlite3PagerVfs()
863,sqlite3BtreeCloseCursor()
864,applyNumericAffinity()
865,journalHdrOffset()
866,sqlite3BtreeTripAllCursors()
867,sqlite3_log()
868,estimateIndexWidth()
869,sqlite3PCacheBufferSetup()
870,pagerUnlockDb()
871,xBegin()
872,sqlite3VdbeMakeReady()
873,blobReadWrite()
874,sqlite3VtabEponymousTableInit()
875,closeCursorsInFrame()
876,sqlite3Prepare16()
877,set_table_name()
878,vfsUnlink()
879,sqlite3TableAffinity()
880,codeOffset()
881,heightOfExprList()
882,sqlite3VXPrintf()
883,sqlite3ExprListCheckLength()
884,open_db()
885,sqlite3_sql()
886,sqlite3ResultSetOfSelect()
887,computeCellSize()
888,sqlite3SelectWrongNumTermsError()
889,datetimeFunc()
890,functionDestroy()
891,optionMatch()
892,pagerUnlockAndRollback()
893,sqlite3ExprCachePinRegister()
894,sqlite3KeyInfoUnref()
895,sqlite3VdbeSerialTypeLen()
896,whereInfoFree()
897,sqlite3VdbeEnter()
898,sqlite3ExprSkipCollate()
899,sqlite3SelectExpand()
900,sqlite3DbStrNDup()
901,sqlite3BtreeSetVersion()
902,sqlite3IsRowid()
903,fseek()
904,moveToChild()
905,tolower()
906,sqlite3BtreeLastPage()
907,sqlite3VdbeParameterIndex()
908,sqlite3DefaultRowEst()
909,sqlite3WhereClauseInit()
910,closePendingFds()
911,strlen30()
912,sqlite3PagerSharedLock()
913,explain_data_prepare()
914,bindText()
915,fkParentIsModified()
916,constructAutomaticIndex()
917,reindexDatabases()
918,codeEqualityTerm()
919,getTempStore()
920,fileHasMoved()
921,vdbeMergeEngineCompare()
922,sqlite3BitvecTest()
923,xCallback()
924,walIndexClose()
925,sqlite3VtabUnlockList()
926,unlockBtreeIfUnused()
927,sqlite3PagerCommitPhaseOne()
928,sqlite3BtreeIsReadonly()
929,unixFileLock()
930,allocateBtreePage()
931,sqlite3WhereOkOnePass()
932,booleanValue()
933,pcacheFetchFinishWithInit()
934,sqlite3PagerUnref()
935,sqlite3VdbeAddOp4Dup8()
936,walIndexHdr()
937,sqlite3ExprIsConstant()
938,rebuildPage()
939,sqlite3PcachePagecount()
940,sqlite3ResolveSelfReference()
941,setAllColumnNames()
942,xCurrentTimeInt64()
943,sqlite3CodeRowTrigger()
944,sqlite3LocateTableItem()
945,getCellInfo()
946,sqlite3ExprIsConstantOrFunction()
947,numberOfCachePages()
948,sqlite3ExprCodeFactorable()
949,vdbeChangeP4Full()
950,sqlite3BtreeClearTable()
951,exprDup()
952,btreeGetHasContent()
953,flattenSubquery()
954,sqlite3_os_end()
955,walMergesort()
956,sqlite3StatusValue()
957,__builtin_bswap16()
958,resolveAttachExpr()
959,sqlite3VdbeCloseStatement()
960,sqlite3ExpirePreparedStatements()
961,findCreateFileMode()
962,whereLoopInsert()
963,sqlite3_wal_checkpoint_v2()
964,xMethod()
965,sqlite3VdbeMemGrow()
966,memset()
967,sqlite3Close()
968,xTrace()
969,measureAllocationSize()
970,subjRequiresPage()
971,handleDeferredMoveto()
972,exprTableColumn()
973,computeLimitRegisters()
974,sqlite3_free_table()
975,sqlite3AppendChar()
976,sqlite3SetHasNullFlag()
977,sqlite3CompleteInsertion()
978,sqlite3VdbeChangeOpcode()
979,sqlite3VdbeFrameRestore()
980,populateCellCache()
981,sqlite3OsCurrentTimeInt64()
982,decodeIntArray()
983,sqlite3VdbeSorterReset()
984,sqlite3BtreeIntegerKey()
985,sqlite3VdbeExpandSql()
986,sqlite3_mutex_alloc()
987,sqlite3VdbeDelete()
988,findElementWithHash()
989,sqlite3ExprCodeTarget()
990,pager_delmaster()
991,sqlite3_complete()
992,find_home_dir()
993,generateColumnTypes()
994,closeAllCursors()
995,rowSetEntrySort()
996,xSavepoint()
997,strncpy()
998,whereSortingCost()
999,sqlite3OsFileControl()
1000,sqlite3OsDlClose()
1001,deleteTable()
1002,display_stats()
1003,sqlite3FaultSim()
1004,sqlite3VdbeDeletePriorOpcode()
1005,sqlite3GenerateRowIndexDelete()
1006,sqlite3ThreadJoin()
1007,exit()
1008,sqlite3SrcListAppend()
1009,fkScanChildren()
1010,sqlite3WalReadFrame()
1011,sqlite3OsDlOpen()
1012,xDlOpen()
1013,vdbeCommit()
1014,whereLoopDelete()
1015,sqlite3VdbeFrameDelete()
1016,__sync_synchronize()
1017,corruptSchema()
1018,btreeMoveto()
1019,sqlite3BtreeLeaveAll()
1020,sqlite3VdbeChangeP5()
1021,createModule()
1022,sqlite3PagerJournalname()
1023,sqlite3DbRealloc()
1024,checkAppendMsg()
1025,rowSetNDeepTree()
1026,sqlite3AuthContextPop()
1027,sqlite3ValueNew()
1028,sqlite3VdbeUsesBtree()
1029,sqlite3SystemError()
1030,pager_incr_changecounter()
1031,sqlite3VtabCallConnect()
1032,newDatabase()
1033,sqlite3DeleteFrom()
1034,sqlite3_status()
1035,sqlite3VdbeMemExpandBlob()
1036,vdbeSortAllocUnpacked()
1037,sqlite3VdbeAddOpList()
1038,xOpen()
1039,resolve_backslashes()
1040,sqlite3VdbeMemNulTerminate()
1041,codeApplyAffinity()
1042,vdbeSafetyNotNull()
1043,sqlite3_strglob()
1044,pthread_create()
1045,sqlite3VdbeMemSetInt64()
1046,unixShmRegionPerMap()
1047,closeUnixFile()
1048,whereUsablePartialIndex()
1049,sqlite3PcacheSetPageSize()
1050,sqlite3_initialize()
1051,sqlite3BtreeData()
1052,pushDownWhereTerms()
1053,sqlite3ExprCoveredByIndex()
1054,openDatabase()
1055,sqlite3OomFault()
1056,sqlite3PagerWrite()
1057,sqlite3VdbeCheckFk()
1058,dotlockUnlock()
1059,walWriteOneFrame()
1060,xStress()
1061,full_fsync()
1062,vdbePmaReaderClear()
1063,sqlite3DeleteTrigger()
1064,sqlite3_enable_load_extension()
1065,sqlite3VdbeResetStepResult()
1066,yy_pop_parser_stack()
1067,sqlite3FixInit()
1068,sqlite3VdbeSetColName()
1069,sqlite3IsLikeFunction()
1070,pager_open_journal()
1071,sqlite3OsDeviceCharacteristics()
1072,sqlite3WhereOutputRowCount()
1073,whereLoopAddVirtualOne()
1074,sqlite3ExprCodeExprList()
1075,sqlite3VdbeChangeP1()
1076,sqlite3BtreeIsInBackup()
1077,sqlite3PagerDataVersion()
1078,sqlite3PcacheTruncate()
1079,sqlite3OpenMasterTable()
1080,generateSortTail()
1081,sqlite3VdbeMemMove()
1082,exprToRegister()
1083,lseek()
1084,xDlError()
1085,sqlite3OsOpen()
1086,sqlite3VdbeFreeCursor()
1087,sqlite3ResolveExprNames()
1088,pager_unlock()
1089,doWalCallbacks()
1090,unixLeaveMutex()
1091,sqlite3FindInIndex()
1092,sqlite3MutexEnd()
1093,sqlite3ExprListSetSortOrder()
1094,S_ISLNK()
1095,sqlite3PcacheClearSyncFlags()
1096,xRealloc()
1097,whereLoopFindLesser()
1098,sqlite3OomClear()
1099,readsTable()
1100,xSelectCallback()
1101,sqlite3ErrStr()
1102,sqlite3TransferBindings()
1103,sqlite3VdbeMemCopy()
1104,sqlite3_vmprintf()
1105,sqlite3RegisterBuiltinFunctions()
1106,sqlite3PcacheFetch()
1107,sqlite3VdbeChangeP4()
1108,isdigit()
1109,sqlite3FindCollSeq()
1110,sqlite3VdbeAddOp4Int()
1111,clearAllSharedCacheTableLocks()
1112,sqlite3OsFullPathname()
1113,setStrAccumError()
1114,sqlite3JournalSize()
1115,sqlite3SchemaGet()
1116,sqlite3InitOne()
1117,sqlite3_backup_init()
1118,line_is_complete()
1119,sqlite3VdbeDeleteAuxData()
1120,sqliteProcessJoin()
1121,sqlite3WithDelete()
1122,sqlite3Dequote()
1123,sqlite3ExprCodeGetColumn()
1124,sqlite3_mutex_enter()
1125,sqlite3WalBeginReadTransaction()
1126,sqlite3ExprSetHeightAndFlags()
1127,multiSelectOrderByKeyInfo()
1128,sqlite3_aggregate_context()
1129,updateAccumulator()
1130,sqlite3PcacheDrop()
1131,fkActionTrigger()
1132,dropCell()
1133,sqlite3_close()
1134,sqlite3Realloc()
1135,sqlite3BackupUpdate()
1136,sqlite3PagerMaxPageCount()
1137,sqlite3CreateColumnExpr()
1138,sqlite3_strlike()
1139,vdbeCompareMemString()
1140,defragmentPage()
1141,walBusyLock()
1142,modifyPagePointer()
1143,sqlite3ArrayAllocate()
1144,sqlite3BtreeLeave()
1145,sqlite3AlterFunctions()
1146,nameInUsingClause()
1147,sqlite3InitCallback()
1148,sqlite3VdbeRealValue()
1149,pthread_join()
1150,isspace()
1151,createMask()
1152,getPageReferenced()
1153,sqlite3MemoryBarrier()
1154,sqlite3_get_autocommit()
1155,whereRangeAdjust()
1156,vdbeSafety()
1157,explainAppendTerm()
1158,sqlite3PagerSetMmapLimit()
1159,resolveOutOfRangeError()
1160,disableTerm()
1161,sqlite3Put4byte()
1162,yy_shift()
1163,exprListDeleteNN()
1164,xExprCallback()
1165,pager_truncate()
1166,pageInsertArray()
1167,btreeSetHasContent()
1168,sqlite3_uri_boolean()
1169,allocSpace()
1170,codeAttach()
1171,sqlite3_mutex_leave()
1172,sqlite3FixSrcList()
1173,sqlite3_result_text64()
1174,sqlite3VdbeMakeLabel()
1175,strncmp()
1176,setJoinExpr()
1177,sqlite3_bind_int64()
1178,ftell()
1179,pcacheUnpin()
1180,sqlite3GetBoolean()
1181,integerValue()
1182,disconnectAllVtab()
1183,sqlite3GetVarint()
1184,sqlite3VtabSync()
1185,sqlite3_snprintf()
1186,sqlite3MallocMutex()
1187,pcache1Alloc()
1188,btreeNext()
1189,isalnum()
1190,sqlite3OpcodeName()
1191,btreeReleaseAllCursorPages()
1192,sqlite3SelectAddTypeInfo()
1193,sqlite3OsShmMap()
1194,sqlite3CodeVerifySchema()
1195,realloc()
1196,pagerRollbackWal()
1197,endTimer()
1198,sqlite3WalkExpr()
1199,btreeParseCell()
1200,sqlite3VtabEponymousTableClear()
1201,checkRef()
1202,xUndo()
1203,backupOnePage()
1204,freePage2()
1205,sqlite3_busy_timeout()
1206,reloadTableSchema()
1207,xCurrentTime()
1208,whereLoopClear()
1209,sqlite3CreateIndex()
1210,sqlite3VdbeClearObject()
1211,vdbePmaReadVarint()
1212,xFunc()
1213,sqlite3FindIndex()
1214,sqlite3VdbeFinalize()
1215,sqlite3PagerClearCache()
1216,unixUnmapfile()
1217,pagerOpentemp()
1218,xCall()
1219,sqlite3StatusUp()
1220,clearSelect()
1221,sqlite3SafetyCheckSickOrOk()
1222,sqlite3TriggerColmask()
1223,dateFunc()
1224,pcache1Destroy()
1225,sqlite3_user_data()
1226,destroyTable()
1227,allocateSpace()
1228,sqlite3ErrorWithMsg()
1229,sqlite3OsFetch()
1230,yyStackOverflow()
1231,vdbeSorterMerge()
1232,generateColumnNames()
1233,blobSeekToRow()
1234,sqlite3BtreeCommitPhaseTwo()
1235,xSync()
1236,output_file_open()
1237,vdbeMergeEngineLevel0()
1238,sqlite3GetVarint32()
1239,sqlite3SelectDelete()
1240,sqlite3VdbeMemNumerify()
1241,sqlite3WhereSplit()
1242,sqlite3_value_text()
1243,sqlite3OsOpenMalloc()
1244,xMutexFree()
1245,saveCursorsOnList()
1246,btreeInvokeBusyHandler()
1247,walRewriteChecksums()
1248,walPagesize()
1249,sqlite3FixSelect()
1250,system()
1251,sqlite3VdbeRecordUnpack()
1252,unixMapfile()
1253,walEncodeFrame()
1254,sqlite3_mutex_try()
1255,sqlite3ReleaseTempRange()
1256,sqlite3BtreeNext()
1257,sqlite3OsCheckReservedLock()
1258,sqlite3ViewGetColumnNames()
1259,sqlite3VarintLen()
1260,sqlite3ExprCacheClear()
1261,sqlite3JournalIsInMemory()
1262,xTask()
1263,xBenignBegin()
1264,sqlite3ValueApplyAffinity()
1265,access()
1266,explainComposite()
1267,sqlite3PagerRef()
1268,sqlite3CheckObjectName()
1269,sqlite3NoopMutex()
1270,gettimeofday()
1271,sqlite3_finalize()
1272,callCollNeeded()
1273,copyPayload()
1274,xWalCallback()
1275,lockBtreeMutex()
1276,vdbeIncrBgPopulate()
1277,generateWithRecursiveQuery()
1278,dlerror()
1279,xBusy()
1280,shellNomemError()
1281,relocatePage()
1282,pagerExclusiveLock()
1283,sqlite3BtreeEnter()
1284,walkExpr()
1285,minMaxQuery()
1286,columnNullValue()
1287,sqlite3ExprCacheAffinityChange()
1288,one_input_line()
1289,whereForeignKeys()
1290,sqlite3PagerBackupPtr()
1291,resolveCompoundOrderBy()
1292,vdbeRecordDecodeInt()
1293,xMutexTry()
1294,accessPayload()
1295,whereOrMove()
1296,sqlite3RegisterDateTimeFunctions()
1297,sqlite3Init()
1298,sqlite3PcacheDirtyList()
1299,run_schema_dump_query()
1300,sqlite3FixExprList()
1301,walShmBarrier()
1302,dlopen()
1303,sqlite3PagerSetCachesize()
1304,sqlite3OsInit()
1305,removeElementGivenHash()
1306,sqlite3SrcListDelete()
1307,sqlite3ErrorFinish()
1308,wherePathSatisfiesOrderBy()
1309,dbReallocFinish()
1310,sqlite3OsSleep()
1311,yy_destructor()
1312,writeMasterJournal()
1313,sqlite3Atoi()
1314,sqlite3VtabCommit()
1315,sqlite3Strlen30()
1316,sqlite3_prepare()
1317,autoIncrementEnd()
1318,vdbeSorterCompareTail()
1319,isLikeOrGlob()
1320,xCommitCallback()
1321,sqlite3VdbeRewind()
1322,exec_prepared_stmt()
1323,appendText()
1324,xShutdown()
1325,btreeRestoreCursorPosition()
1326,setSectorSize()
1327,explain_data_delete()
1328,vdbeSorterCreateThread()
1329,sqlite3PcacheInitialize()
1330,whereOrInsert()
1331,sqlite3BitvecDestroy()
1332,sqlite3WalkSelectExpr()
1333,vdbeSorterJoinAll()
1334,identPut()
1335,growOpArray()
1336,isalpha()
1337,xRandomness()
1338,vdbeSorterListToPMA()
1339,sqlite3VdbeMemTranslate()
1340,sqlite3ExprIsTableConstant()
1341,output_c_string()
1342,sqlite3ExprCanBeNull()
1343,sqlite3StrAccumEnlarge()
1344,addToVTrans()
1345,computeJD()
1346,sqlite3TwoPartName()
1347,yy_find_reduce_action()
1348,sqlite3_result_text()
1349,keywordCode()
1350,whereTempTriggers()
1351,vdbePmaReaderIncrInit()
1352,sqlite3StrAccumAppendAll()
1353,sqlite3PcacheCleanAll()
1354,xClose()
1355,sqlite3_result_blob()
1356,syncJournal()
1357,identLength()
1358,sqlite3StrAccumFinish()
1359,sqlite3BtreeCursorSize()
1360,sqlite3AtoF()
1361,sqlite3WalHeapMemory()
1362,setupLookaside()
1363,xDestroy()
1364,vdbeSorterFlushPMA()
1365,xCloser()
1366,vdbeSortSubtaskCleanup()
1367,sqlite3SrcListEnlarge()
1368,sqlite3ResetAllSchemasOfConnection()
1369,sqlite3ExprCheckHeight()
1370,xFileControl()
1371,sqlite3DbStrDup()
1372,freeIndex()
1373,sqlite3PagerSync()
1374,sqlite3VdbeMemSetDouble()
1375,sqlite3ColumnDefault()
1376,vdbeClrCopy()
1377,sqlite3PcacheSetSpillsize()
1378,sqlite3FindTable()
1379,sqlite3StatusHighwater()
1380,sqlite3VdbeTakeOpArray()
1381,sqlite3BitvecSize()
1382,shellDatabaseError()
1383,sqlite3VdbeChangeP2()
1384,fflush()
1385,walRestartLog()
1386,heightOfExpr()
1387,do_meta_command()
1388,withExpand()
1389,restore_debug_trace_modes()
1390,btreeLockCarefully()
1391,multiSelectCollSeq()
1392,xShrink()
1393,whereLoopAddAll()
1394,unixEnterMutex()
1395,btreeGetPage()
1396,sqlite3SkipAccumulatorLoad()
1397,sqlite3WalEndWriteTransaction()
1398,sqlite3ChangeCookie()
1399,sqlite3VdbeAddOp2()
1400,xForEach()
1401,sqlite3PagerRollback()
1402,returnSingleText()
1403,editPage()
1404,vdbeSorterExtendFile()
1405,sqlite3TriggersExist()
1406,multiSelectOrderBy()
1407,checkList()
1408,sqlite3CollapseDatabaseArray()
1409,sqlite3AuthRead()
1410,sqlite3InRhsIsConstant()
1411,findRightmost()
1412,sqlite3WhereOrderedInnerLoop()
1413,sqlite3VdbeList()
1414,incrAggFunctionDepth()
1415,sqlite3Utf8Read()
1416,vdbeSorterSort()
1417,sqlite3PagerIsreadonly()
1418,sqlite3_release_memory()
1419,sqlite3VdbeMemInit()
1420,sqlite3ValueText()
1421,searchWith()
1422,sqlite3DeleteColumnNames()
1423,fclose()
1424,sysconf()
1425,xCollNeeded16()
1426,fopen()
1427,sqlite3_strnicmp()
1428,sqlite3OsDelete()
1429,sqlite3_result_error()
1430,sqlite3CodeVerifyNamedSchema()
1431,invokeValueDestructor()
1432,cellSizePtr()
1433,sqlite3VMPrintf()
1434,sqlite3PagerFile()
1435,sqlite3BitvecCreate()
1436,analyzeDatabase()
1437,vdbePmaWriteVarint()
1438,sqlite3CompareAffinity()
1439,sqlite3ExprListAppend()
1440,reindexTable()
1441,xShmLock()
1442,sqlite3ValueFree()
1443,checkColumnOverlap()
1444,popen()
1445,sqlite3_result_error_toobig()
1446,sqlite3LocateTable()
1447,sqlite3VdbeChangeP3()
1448,sqlite3BtreeLeaveCursor()
1449,sqlite3ExprCodeAtInit()
1450,sqlite3WalEndReadTransaction()
1451,valueBytes()
1452,vdbePmaWriterInit()
1453,setResultStrOrError()
1454,pthread_mutex_lock()
1455,__builtin_bswap32()
1456,pager_write_changecounter()
1457,sqlite3PagerTempSpace()
1458,sqlite3WalOpen()
1459,pagerFlushOnCommit()
1460,finalDbSize()
1461,xDel()
1462,memjrnlFreeChunks()
1463,cachedCellSize()
1464,fwrite()
1465,fetchPayload()
1466,sqlite3BtreeMovetoUnpacked()
1467,whereLoopClearUnion()
1468,btreeCursor()
1469,sqlite3VdbeMemFinalize()
1470,sqlite3StartTable()
1471,pager_write()
1472,sqlite3_bind_zeroblob()
1473,columnTypeImpl()
1474,unixUnlock()
1475,checkPtrmap()
1476,output_file_close()
1477,vdbeIncrSwap()
1478,sqlite3LogEstAdd()
1479,pagerOpenWal()
1480,xFreeSchema()
1481,sqlite3VdbeResolveLabel()
1482,createAggContext()
1483,substSelect()
1484,walIndexReadHdr()
1485,sqlite3VdbeMemFromBtree()
1486,sqlite3AffinityType()
1487,sqlite3StmtCurrentTime()
1488,sqlite3ExprDup()
1489,sqlite3VdbeRecordCompare()
1490,robust_ftruncate()
1491,sqlite3PagerSetSpillsize()
1492,sqlite3OsShmBarrier()
1493,xShmMap()
1494,get4byteInt()
1495,sqlite3ExprIfFalseDup()
1496,allSpaces()
1497,sqlite3ExprDeleteNN()
1498,codeDeferredSeek()
1499,sqlite3BtreePrevious()
1500,sqlite3PagerTruncateImage()
1501,xShmBarrier()
1502,sqlite3VdbeCreate()
1503,sqlite3ExprCodeGetColumnOfTable()
1504,shell_dbinfo_command()
1505,sqlite3_free()
1506,vdbeMergeEngineInit()
1507,selectInnerLoop()
1508,walUnlockShared()
1509,sqlite3VdbeMemRelease()
1510,vdbePmaReadBlob()
1511,sqlite3_errcode()
1512,setPendingFd()
1513,xRekey()
1514,exprMightBeIndexed()
1515,sqlite3WhereBegin()
1516,sqlite3MatchSpanName()
1517,withDup()
1518,resolveP2Values()
1519,sqlite3VdbeMemMakeWriteable()
1520,sqlite3CheckCollSeq()
1521,sqlite3ClearStatTables()
1522,sqlite3_result_blob64()
1523,test_breakpoint()
1524,sqlite3IdListDelete()
1525,sqlite3_vfs_register()
1526,vdbeMemAddTerminator()
1527,sqlite3VtabMakeWritable()
1528,patternCompare()
1529,sqlite3OsGetLastError()
1530,sqlite3VdbeSetChanges()
1531,sqlite3PagerExclusiveLock()
1532,resizeIndexObject()
1533,posixUnlock()
1534,mkFullPathname()
1535,whereShortCut()
1536,freeP4()
1537,exprAnalyze()
1538,sqlite3OsDlError()
1539,sqlite3StrAccumInit()
1540,sqlite3DbNameToBtree()
1541,copyNodeContent()
1542,whereLoopXfer()
1543,checkReadTransaction()
1544,sqlite3VtabClear()
1545,sqlite3IndexedByLookup()
1546,xFree()
1547,xInit()
1548,walWriteToLog()
1549,sqlite3PExpr()
1550,unixLogErrorAtLine()
1551,sqlite3ThreadCreate()
1552,sqlite3PcacheMakeClean()
1553,openStatTable()
1554,xBusyHandler()
1555,sqlite3ValueBytes()
1556,sqlite3PagerCommitPhaseTwo()
1557,xFindFunction()
1558,sqlite3GenerateIndexKey()
1559,setPageReferenced()
1560,isCandidateForInOpt()
1561,sqlite3DeleteIndexSamples()
1562,sqlite3ExprAlloc()
1563,sqlite3OsFileSize()
1564,vdbeSorterMergeTreeBuild()
1565,pcache1UnderMemoryPressure()
1566,computeYMD_HMS()
1567,sqlite3ScratchMalloc()
1568,sqlite3BtreeBeginTrans()
1569,cacheEntryClear()
1570,sqlite3Utf16ByteLen()
1571,xMalloc()
1572,attachBackupObject()
1573,xLock()
1574,malloc()
1575,xCompare()
1576,sqlite3ExprIsInteger()
1577,whereAndInfoDelete()
1578,sqlite3ExprAnalyzeAggregates()
1579,pager_playback()
1580,sqlite3PagerFilename()
1581,strcmp()
1582,xProfile()
1583,get2byteInt()
1584,sqlite3_context_db_handle()
1585,resolveOrderByTermToExprList()
1586,sqlite3MayAbort()
1587,sqlite3_backup_finish()
1588,sqlite3PageFree()
1589,sqlite3BtreeNewDb()
1590,sqlite3FixExpr()
1591,sqlite3_malloc64()
1592,sqlite3_mutex_free()
1593,walLockShared()
1594,sqlite3_result_value()
1595,sqlite3_exec()
1596,sqlite3VdbeAddOp1()
1597,collationMatch()
1598,sqlite3_reset_auto_extension()
1599,sqlite3PagerSetBusyhandler()
1600,hasColumn()
1601,sqlite3BeginWriteOperation()
1602,sqlite3BtreeOpen()
1603,sqlite3OsTruncate()
1604,sqlite3BtreeIsInTrans()
1605,sqlite3DbMallocZero()
1606,xSelectCallback2()
1607,resolveOrderGroupBy()
1608,sqlite3_column_type()
1609,xAuth()
1610,sqlite3PagerIsMemdb()
1611,sqlite3BtreePager()
1612,sqlite3FkDropTable()
1613,xDlSym()
1614,sqlite3HashClear()
1615,sqlite3WhereExprUsage()
1616,loadAnalysis()
1617,whereClauseInsert()
1618,sqlite3WhereFindTerm()
1619,sqlite3WalkExprList()
1620,sqlite3PagerPageRefcount()
1621,sqlite3FindDb()
1622,sqlite3VdbeMemSetZeroBlob()
1623,sqlite3VdbeFindCompare()
1624,sqlite3WalSavepointUndo()
1625,walTryBeginRead()
1626,sqlite3WhereIsOrdered()
1627,line_is_command_terminator()
1628,sqlite3AutoLoadExtensions()
1629,sqlite3BtreeSetAutoVacuum()
1630,read32bits()
1631,sqlite3VdbeAddOp4()
1632,sqlite3XPrintf()
1633,sqlite3HashFind()
1634,sqlite3SrcListAppendFromTerm()
1635,getIntArg()
1636,freeEphemeralFunction()
1637,sqlite3OsFileControlHint()
1638,moveToRoot()
1639,xBestIndex()
1640,valueToText()
1641,sqlite3GetInt32()
1642,whereOrName()
1643,sqlite3RowSetInit()
1644,mallocWithAlarm()
--------------Analysis-timeOfDay-@shell.c@line: 173.....

['f_entry()', 'f_exit()', 'xCurrentTime()']
['f_entry()', 'f_exit()', 'xCurrentTimeInt64()']
['f_entry()', 'f_exit()', 'sqlite3_vfs_find()', 'xCurrentTime()']
3Paths generated!
--------------Analysis-beginTimer-@shell.c@line: 207.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'getrusage()', 'timeOfDay()']
2Paths generated!
--------------Analysis-timeDiff-@shell.c@line: 215.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-endTimer-@shell.c@line: 223.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'getrusage()', 'printf()', 'timeOfDay()']
2Paths generated!
--------------Analysis-isNumber-@shell.c@line: 433.....

['f_entry()', 'f_exit()', 'isdigit()']
1Paths generated!
--------------Analysis-shellstaticFunc-@shell.c@line: 466.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()']
1Paths generated!
--------------Analysis-strlen30-@shell.c@line: 483.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-local_getline-@shell.c@line: 498.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'fgets()']
['f_entry()', 'f_exit()', 'fgets()', 'free()']
['f_entry()', 'f_exit()', 'fgets()', 'free()', 'realloc()']
4Paths generated!
--------------Analysis-one_input_line-@shell.c@line: 560.....

['f_entry()', 'f_exit()', 'fflush()', 'local_getline()', 'printf()']
['f_entry()', 'f_exit()', 'local_getline()']
2Paths generated!
--------------Analysis-shellLog-@shell.c@line: 709.....

['f_entry()', 'f_exit()', 'fflush()', 'fprintf()']
1Paths generated!
--------------Analysis-output_hex_blob-@shell.c@line: 719.....

['f_entry()', 'f_exit()', 'fprintf()']
1Paths generated!
--------------Analysis-output_quoted_string-@shell.c@line: 730.....

['f_entry()', 'f_exit()', 'fprintf()']
1Paths generated!
--------------Analysis-output_c_string-@shell.c@line: 762.....

['f_entry()', 'f_exit()', 'fputc()']
['f_entry()', 'f_exit()', 'fputc()', 'isprint()']
['f_entry()', 'f_exit()', 'fprintf()', 'fputc()', 'isprint()']
3Paths generated!
--------------Analysis-output_html_string-@shell.c@line: 794.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'fprintf()']
2Paths generated!
--------------Analysis-output_csv-@shell.c@line: 854.....

['f_entry()', 'f_exit()', 'fprintf()', 'strlen30()']
['f_entry()', 'f_exit()', 'putc()', 'strlen30()']
['f_entry()', 'f_exit()', 'fprintf()', 'putc()', 'strlen30()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcmp()', 'strlen30()']
['f_entry()', 'f_exit()', 'fprintf()']
5Paths generated!
--------------Analysis-shellAuth-@shell.c@line: 901.....

['f_entry()', 'f_exit()', 'fprintf()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_c_string()']
2Paths generated!
--------------Analysis-shell_callback-@shell.c@line: 947.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-callback-@shell.c@line: 1258.....

['f_entry()', 'f_exit()', 'shell_callback()']
1Paths generated!
--------------Analysis-set_table_name-@shell.c@line: 1268.....

['f_entry()', 'f_exit()', 'isalpha()', 'malloc()']
['exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'isalpha()', 'malloc()']
['exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'isalnum()', 'isalpha()', 'malloc()']
['exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'isalnum()', 'isalpha()', 'malloc()']
4Paths generated!
--------------Analysis-appendText-@shell.c@line: 1309.....

['f_entry()', 'f_exit()', 'memcpy()', 'realloc()', 'strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'realloc()', 'strlen30()']
2Paths generated!
--------------Analysis-run_table_dump_query-@shell.c@line: 1357.....

['f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_column_count()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
3Paths generated!
--------------Analysis-save_err_msg-@shell.c@line: 1407.....

['f_entry()', 'f_exit()', 'sqlite3_malloc64()', 'strlen30()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3_malloc64()', 'strlen30()']
2Paths generated!
--------------Analysis-displayLinuxIoStats-@shell.c@line: 1422.....

['f_entry()', 'f_exit()', 'fclose()', 'fgets()', 'fopen()', 'sqlite3_snprintf()']
['f_entry()', 'f_exit()', 'fclose()', 'fgets()', 'fopen()', 'sqlite3_snprintf()', 'strlen()', 'strncmp()']
['f_entry()', 'f_exit()', 'fclose()', 'fgets()', 'fopen()', 'fprintf()', 'sqlite3_snprintf()', 'strlen()', 'strncmp()']
3Paths generated!
--------------Analysis-display_stats-@shell.c@line: 1458.....

['displayLinuxIoStats()', 'f_entry()', 'f_exit()']
['displayLinuxIoStats()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_stmt_status()']
['displayLinuxIoStats()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_db_status()']
['displayLinuxIoStats()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_db_status()', 'sqlite3_stmt_status()']
['displayLinuxIoStats()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_status()']
['displayLinuxIoStats()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_db_status()', 'sqlite3_status()', 'sqlite3_stmt_status()']
6Paths generated!
--------------Analysis-display_scanstats-@shell.c@line: 1589.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-str_in_array-@shell.c@line: 1640.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'strcmp()']
2Paths generated!
--------------Analysis-explain_data_prepare-@shell.c@line: 1666.....

['f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_free()', 'sqlite3_reset()', 'sqlite3_sql()', 'sqlite3_step()', 'sqlite3_strnicmp()']
['f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_column_int()', 'sqlite3_column_text()', 'sqlite3_free()', 'sqlite3_reset()', 'sqlite3_sql()', 'sqlite3_step()', 'sqlite3_strnicmp()', 'str_in_array()']
['f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_column_int()', 'sqlite3_column_text()', 'sqlite3_free()', 'sqlite3_realloc64()', 'sqlite3_reset()', 'sqlite3_sql()', 'sqlite3_step()', 'sqlite3_strnicmp()', 'str_in_array()']
['f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_column_int()', 'sqlite3_column_text()', 'sqlite3_free()', 'sqlite3_realloc64()', 'sqlite3_reset()', 'sqlite3_sql()', 'sqlite3_step()', 'sqlite3_strnicmp()', 'str_in_array()', 'strcmp()']
4Paths generated!
--------------Analysis-explain_data_delete-@shell.c@line: 1748.....

['f_entry()', 'f_exit()', 'sqlite3_free()']
1Paths generated!
--------------Analysis-disable_debug_trace_modes-@shell.c@line: 1766.....

--------------Analysis-restore_debug_trace_modes-@shell.c@line: 1776.....

--------------Analysis-exec_prepared_stmt-@shell.c@line: 1788.....

['f_entry()', 'f_exit()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_malloc64()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_step()', 'xCallback()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_column_type()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_column_text()', 'sqlite3_column_type()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_column_name()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_step()']
7Paths generated!
--------------Analysis-shell_exec-@shell.c@line: 1862.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_prepare_v2()']
['exec_prepared_stmt()', 'explain_data_delete()', 'f_entry()', 'f_exit()', 'isspace()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['exec_prepared_stmt()', 'explain_data_delete()', 'f_entry()', 'f_exit()', 'isspace()', 'save_err_msg()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['display_scanstats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'f_entry()', 'f_exit()', 'isspace()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'f_entry()', 'f_exit()', 'isspace()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['display_scanstats()', 'display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'f_entry()', 'f_exit()', 'isspace()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['display_scanstats()', 'display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'explain_data_prepare()', 'f_entry()', 'f_exit()', 'isspace()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['disable_debug_trace_modes()', 'display_scanstats()', 'display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'f_entry()', 'f_exit()', 'isspace()', 'restore_debug_trace_modes()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['disable_debug_trace_modes()', 'display_scanstats()', 'display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'explain_data_prepare()', 'f_entry()', 'f_exit()', 'isspace()', 'restore_debug_trace_modes()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_strlike()']
['disable_debug_trace_modes()', 'display_scanstats()', 'display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'explain_data_prepare()', 'f_entry()', 'f_exit()', 'isspace()', 'restore_debug_trace_modes()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_step()', 'sqlite3_strlike()']
['disable_debug_trace_modes()', 'display_scanstats()', 'display_stats()', 'exec_prepared_stmt()', 'explain_data_delete()', 'explain_data_prepare()', 'f_entry()', 'f_exit()', 'fprintf()', 'isspace()', 'restore_debug_trace_modes()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_sql()', 'sqlite3_step()', 'sqlite3_strlike()']
['f_entry()', 'f_exit()', 'save_err_msg()', 'sqlite3_prepare_v2()']
13Paths generated!
--------------Analysis-dump_callback-@shell.c@line: 1998.....

['f_entry()', 'f_exit()', 'strcmp()']
['appendText()', 'f_entry()', 'f_exit()', 'free()', 'run_table_dump_query()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strcmp()']
['appendText()', 'f_entry()', 'f_exit()', 'free()', 'run_table_dump_query()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strcmp()']
['appendText()', 'f_entry()', 'f_exit()', 'free()', 'run_table_dump_query()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strncmp()']
['appendText()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'run_table_dump_query()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strncmp()']
['appendText()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'run_table_dump_query()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strncmp()']
['appendText()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'run_table_dump_query()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()']
7Paths generated!
--------------Analysis-run_schema_dump_query-@shell.c@line: 2099.....

['f_entry()', 'f_exit()', 'sqlite3_exec()']
['f_entry()', 'f_exit()', 'fprintf()', 'free()', 'malloc()', 'sqlite3_exec()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
2Paths generated!
--------------Analysis-readfileFunc-@shell.c@line: 2240.....

['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'fread()', 'fseek()', 'ftell()', 'rewind()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'fread()', 'fseek()', 'ftell()', 'rewind()', 'sqlite3_malloc64()', 'sqlite3_result_blob()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-writefileFunc-@shell.c@line: 2273.....

['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'sqlite3_result_int64()', 'sqlite3_value_blob()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'fwrite()', 'sqlite3_result_int64()', 'sqlite3_value_blob()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-open_db-@shell.c@line: 2349.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_create_function()', 'sqlite3_enable_load_extension()', 'sqlite3_errcode()', 'sqlite3_initialize()', 'sqlite3_open()']
['exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_create_function()', 'sqlite3_enable_load_extension()', 'sqlite3_errcode()', 'sqlite3_initialize()', 'sqlite3_open()']
3Paths generated!
--------------Analysis-resolve_backslashes-@shell.c@line: 2390.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-hexDigitValue-@shell.c@line: 2438.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-integerValue-@shell.c@line: 2448.....

['f_entry()', 'f_exit()', 'isdigit()']
['f_entry()', 'f_exit()', 'isdigit()', 'sqlite3_stricmp()']
['f_entry()', 'f_exit()', 'hexDigitValue()']
3Paths generated!
--------------Analysis-booleanValue-@shell.c@line: 2495.....

['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_stricmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'integerValue()', 'sqlite3_stricmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'hexDigitValue()', 'sqlite3_stricmp()']
3Paths generated!
--------------Analysis-output_file_close-@shell.c@line: 2517.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'fclose()']
2Paths generated!
--------------Analysis-output_file_open-@shell.c@line: 2526.....

['f_entry()', 'f_exit()', 'strcmp()']
['f_entry()', 'f_exit()', 'fopen()', 'strcmp()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'strcmp()']
3Paths generated!
--------------Analysis-sql_trace_callback-@shell.c@line: 2546.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'fprintf()', 'strlen()']
2Paths generated!
--------------Analysis-test_breakpoint-@shell.c@line: 2568.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-import_append_char-@shell.c@line: 2590.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_realloc64()']
['exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_realloc64()']
3Paths generated!
--------------Analysis-csv_read_one_field-@shell.c@line: 2615.....

['f_entry()', 'f_exit()', 'fgetc()']
['f_entry()', 'f_exit()', 'fgetc()', 'import_append_char()']
['f_entry()', 'f_exit()', 'fgetc()', 'fprintf()', 'import_append_char()']
3Paths generated!
--------------Analysis-ascii_read_one_field-@shell.c@line: 2689.....

['f_entry()', 'f_exit()', 'fgetc()']
['f_entry()', 'f_exit()', 'fgetc()', 'import_append_char()']
2Paths generated!
--------------Analysis-tryToCloneData-@shell.c@line: 2716.....

['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'strlen()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_step()', 'strlen()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_step()', 'strlen()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'strlen()']
['f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'memcpy()', 'printf()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'strlen()']
['f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'memcpy()', 'printf()', 'sqlite3_column_count()', 'sqlite3_column_type()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'strlen()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'strlen()']
7Paths generated!
--------------Analysis-tryToCloneSchema-@shell.c@line: 2829.....

['f_entry()', 'f_exit()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'fflush()', 'printf()', 'sqlite3_column_text()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'fflush()', 'printf()', 'sqlite3_column_text()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xForEach()']
['f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'printf()', 'sqlite3_column_text()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'printf()', 'sqlite3_column_text()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xForEach()']
5Paths generated!
--------------Analysis-tryToClone-@shell.c@line: 2904.....

['access()', 'f_entry()', 'f_exit()', 'sqlite3_close()', 'sqlite3_exec()', 'sqlite3_open()', 'tryToCloneSchema()']
['access()', 'f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_close()', 'sqlite3_open()']
2Paths generated!
--------------Analysis-output_reset-@shell.c@line: 2929.....

['f_entry()', 'f_exit()', 'output_file_close()']
['f_entry()', 'f_exit()', 'pclose()']
2Paths generated!
--------------Analysis-db_int-@shell.c@line: 2944.....

['f_entry()', 'f_exit()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['f_entry()', 'f_exit()', 'sqlite3_column_int()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
2Paths generated!
--------------Analysis-get2byteInt-@shell.c@line: 2958.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-get4byteInt-@shell.c@line: 2961.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-shell_dbinfo_command-@shell.c@line: 2970.....

['f_entry()', 'f_exit()', 'fprintf()', 'get2byteInt()', 'open_db()', 'sqlite3_file_control()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strcmp()', 'xRead()']
['db_int()', 'f_entry()', 'f_exit()', 'fprintf()', 'get2byteInt()', 'open_db()', 'sqlite3_file_control()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strcmp()', 'xRead()']
['f_entry()', 'f_exit()', 'fprintf()', 'get2byteInt()', 'open_db()', 'sqlite3_file_control()', 'sqlite3_free()', 'sqlite3_mprintf()', 'xRead()']
['db_int()', 'f_entry()', 'f_exit()', 'fprintf()', 'get2byteInt()', 'get4byteInt()', 'open_db()', 'sqlite3_file_control()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strcmp()', 'xRead()']
['db_int()', 'f_entry()', 'f_exit()', 'fprintf()', 'get2byteInt()', 'get4byteInt()', 'open_db()', 'sqlite3_file_control()', 'sqlite3_free()', 'sqlite3_mprintf()', 'xRead()']
5Paths generated!
--------------Analysis-shellDatabaseError-@shell.c@line: 3052.....

['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_errmsg()']
1Paths generated!
--------------Analysis-shellNomemError-@shell.c@line: 3061.....

['f_entry()', 'f_exit()', 'fprintf()']
1Paths generated!
--------------Analysis-optionMatch-@shell.c@line: 3070.....

['f_entry()', 'f_exit()', 'strcmp()']
1Paths generated!
--------------Analysis-do_meta_command-@shell.c@line: 3083.....

['f_entry()', 'f_exit()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'output_reset()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'strlen30()', 'strncmp()']
['assert()', 'f_entry()', 'f_exit()', 'strlen30()', 'strncmp()']
['assert()', 'f_entry()', 'f_exit()', 'integerValue()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'sqlite3_file_control()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_file_control()', 'sqlite3_free()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'sqlite3_vfs_find()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_vfs_find()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_reset()', 'sqlite3_file_control()', 'sqlite3_vfs_find()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_file_control()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'output_file_close()', 'output_file_open()', 'sqlite3_trace_v2()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_file_close()', 'output_file_open()', 'output_reset()', 'sqlite3_trace_v2()', 'strlen30()', 'strncmp()']
['booleanValue()', 'f_entry()', 'f_exit()', 'strlen30()', 'strncmp()']
['booleanValue()', 'f_entry()', 'f_exit()', 'fprintf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'sqlite3_busy_timeout()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'integerValue()', 'open_db()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'output_reset()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'output_reset()', 'shellDatabaseError()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'shellDatabaseError()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'shellDatabaseError()', 'shellNomemError()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'shellDatabaseError()', 'shellNomemError()', 'sqlite3_bind_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_realloc64()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'shellDatabaseError()', 'shellNomemError()', 'sqlite3_bind_text()', 'sqlite3_column_text()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_realloc64()', 'sqlite3_step()', 'strcmp()', 'strlen30()', 'strncmp()']
['display_stats()', 'f_entry()', 'f_exit()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_c_string()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_c_string()', 'output_reset()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strlen30()', 'strncmp()', 'system()']
['f_entry()', 'f_exit()', 'fprintf()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strlen30()', 'strncmp()', 'system()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_reset()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strlen30()', 'strncmp()', 'system()']
['f_entry()', 'f_exit()', 'sqlite3_snprintf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'sqlite3_free()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'memcpy()', 'open_db()', 'optionMatch()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'memcpy()', 'open_db()', 'optionMatch()', 'sqlite3_exec()', 'strcmp()', 'strlen30()', 'strncmp()']
['callback()', 'f_entry()', 'f_exit()', 'memcpy()', 'open_db()', 'optionMatch()', 'strcmp()', 'strlen30()', 'strncmp()']
['callback()', 'f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'output_reset()', 'sqlite3_free()', 'strcmp()', 'strlen30()', 'strncmp()', 'tolower()']
['f_entry()', 'f_exit()', 'open_db()', 'sqlite3_backup_finish()', 'sqlite3_backup_init()', 'sqlite3_backup_step()', 'sqlite3_close()', 'sqlite3_open()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'sqlite3_backup_finish()', 'sqlite3_backup_init()', 'sqlite3_backup_step()', 'sqlite3_close()', 'sqlite3_open()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'sqlite3_backup_finish()', 'sqlite3_backup_init()', 'sqlite3_backup_step()', 'sqlite3_close()', 'sqlite3_open()', 'sqlite3_sleep()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'process_input()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'output_reset()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'strlen30()', 'strncmp()', 'strncpy()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_reset()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'output_file_open()', 'output_reset()', 'sqlite3_snprintf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'output_file_open()', 'output_reset()', 'strcmp()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_file_open()', 'output_reset()', 'strcmp()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'output_reset()', 'popen()', 'sqlite3_snprintf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'output_reset()', 'popen()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'sqlite3_free()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'sqlite3_close()', 'sqlite3_free()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'output_reset()', 'sqlite3_close()', 'sqlite3_free()', 'sqlite3_mprintf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'strlen()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'strlen()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'sqlite3_snprintf()', 'strlen()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'set_table_name()', 'strlen()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'output_file_close()', 'output_file_open()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'sqlite3_load_extension()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'sqlite3_free()', 'sqlite3_load_extension()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'sqlite3_free()', 'sqlite3_load_extension()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'printf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'output_reset()', 'printf()', 'sqlite3_limit()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'printf()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'open_db()', 'output_reset()', 'printf()', 'sqlite3_strnicmp()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'printf()', 'sqlite3_strnicmp()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'sqlite3_free()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'memcpy()', 'open_db()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fopen()', 'import_append_char()', 'memset()', 'open_db()', 'sqlite3_column_count()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()']
['f_entry()', 'f_exit()', 'fopen()', 'import_append_char()', 'memset()', 'open_db()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()']
['f_entry()', 'f_exit()', 'fopen()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()', 'xRead()']
['f_entry()', 'f_exit()', 'fopen()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_bind_text()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()', 'xRead()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_bind_text()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()', 'xRead()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_bind_null()', 'sqlite3_bind_text()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()', 'xRead()']
['f_entry()', 'f_exit()', 'fopen()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_snprintf()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()']
['f_entry()', 'f_exit()', 'fopen()', 'fprintf()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'sqlite3_bind_null()', 'sqlite3_bind_text()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()', 'xRead()']
['f_entry()', 'f_exit()', 'fprintf()', 'import_append_char()', 'memset()', 'open_db()', 'output_reset()', 'popen()', 'sqlite3_bind_null()', 'sqlite3_bind_text()', 'sqlite3_column_count()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_free()', 'sqlite3_get_autocommit()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_prepare_v2()', 'sqlite3_reset()', 'sqlite3_snprintf()', 'sqlite3_step()', 'sqlite3_strglob()', 'strcmp()', 'strlen30()', 'strncmp()', 'xCloser()', 'xRead()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'shell_exec()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'output_reset()', 'shell_exec()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'optionMatch()', 'output_reset()', 'sqlite3_exec()', 'sqlite3_finalize()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'strcmp()', 'strlen30()', 'strncmp()']
['booleanValue()', 'f_entry()', 'f_exit()', 'strcmp()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'integerValue()', 'strlen30()', 'strncmp()']
['exit()', 'f_entry()', 'f_exit()', 'integerValue()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'run_schema_dump_query()', 'run_table_dump_query()', 'sqlite3_exec()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'shell_dbinfo_command()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'fprintf()', 'memcpy()', 'open_db()', 'sqlite3_exec()', 'sqlite3_free()', 'strlen30()', 'strncmp()']
['f_entry()', 'f_exit()', 'strlen30()', 'strncmp()', 'tryToClone()']
['f_entry()', 'f_exit()', 'strlen30()', 'strncmp()', 'test_breakpoint()']
['booleanValue()', 'f_entry()', 'f_exit()', 'open_db()', 'sqlite3_set_authorizer()', 'strlen30()', 'strncmp()']
['booleanValue()', 'f_entry()', 'f_exit()', 'fprintf()', 'open_db()', 'output_reset()', 'sqlite3_set_authorizer()', 'strlen30()', 'strncmp()']
['booleanValue()', 'f_entry()', 'f_exit()', 'fprintf()', 'isspace()', 'open_db()', 'output_reset()', 'sqlite3_set_authorizer()', 'strlen30()', 'strncmp()']
['booleanValue()', 'f_entry()', 'f_exit()', 'fprintf()', 'isspace()', 'open_db()', 'output_reset()', 'resolve_backslashes()', 'sqlite3_set_authorizer()', 'strlen30()', 'strncmp()']
102Paths generated!
--------------Analysis-line_contains_semicolon-@shell.c@line: 4820.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-_all_whitespace-@shell.c@line: 4829.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'isspace()']
2Paths generated!
--------------Analysis-line_is_command_terminator-@shell.c@line: 4855.....

['_all_whitespace()', 'f_entry()', 'f_exit()', 'isspace()', 'tolower()']
1Paths generated!
--------------Analysis-line_is_complete-@shell.c@line: 4871.....

['f_entry()', 'f_exit()', 'sqlite3_complete()']
1Paths generated!
--------------Analysis-process_input-@shell.c@line: 4890.....

['f_entry()', 'f_exit()', 'free()']
['_all_whitespace()', 'f_entry()', 'f_exit()', 'free()']
['_all_whitespace()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()']
['_all_whitespace()', 'f_entry()', 'f_exit()', 'fflush()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'sqlite3_complete()', 'strlen30()']
['_all_whitespace()', 'f_entry()', 'f_exit()', 'fflush()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'printf()', 'sqlite3_complete()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'shell_exec()', 'sqlite3_complete()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'shell_exec()', 'sqlite3_complete()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'shell_exec()', 'sqlite3_complete()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'assert()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'isspace()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'realloc()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'beginTimer()', 'endTimer()', 'exit()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'realloc()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'assert()', 'beginTimer()', 'endTimer()', 'exit()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'isspace()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'realloc()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'assert()', 'beginTimer()', 'do_meta_command()', 'endTimer()', 'exit()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'isspace()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'realloc()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'assert()', 'beginTimer()', 'do_meta_command()', 'endTimer()', 'exit()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'isspace()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'printf()', 'realloc()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
['_all_whitespace()', 'assert()', 'beginTimer()', 'endTimer()', 'exit()', 'f_entry()', 'f_exit()', 'fflush()', 'fprintf()', 'free()', 'isspace()', 'line_contains_semicolon()', 'line_is_command_terminator()', 'line_is_complete()', 'memcpy()', 'one_input_line()', 'open_db()', 'output_reset()', 'printf()', 'realloc()', 'resolve_backslashes()', 'shell_exec()', 'sqlite3_complete()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strlen30()']
19Paths generated!
--------------Analysis-find_home_dir-@shell.c@line: 5008.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'malloc()', 'strlen30()']
['f_entry()', 'f_exit()', 'malloc()', 'memcpy()', 'strlen30()']
['f_entry()', 'f_exit()', 'getenv()']
4Paths generated!
--------------Analysis-process_sqliterc-@shell.c@line: 5074.....

['f_entry()', 'f_exit()', 'fopen()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'process_input()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'fclose()', 'fopen()', 'fprintf()', 'process_input()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'fclose()', 'find_home_dir()', 'fopen()', 'fprintf()', 'process_input()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mprintf()']
4Paths generated!
--------------Analysis-usage-@shell.c@line: 5143.....

['exit()', 'f_entry()', 'f_exit()', 'fprintf()']
1Paths generated!
--------------Analysis-main_init-@shell.c@line: 5159.....

['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3_config()', 'sqlite3_snprintf()']
1Paths generated!
--------------Analysis-printBold-@shell.c@line: 5189.....

['f_entry()', 'f_exit()', 'printf()']
1Paths generated!
--------------Analysis-cmdline_option_value-@shell.c@line: 5198.....

['f_entry()', 'f_exit()']
['exit()', 'f_entry()', 'f_exit()', 'fprintf()']
2Paths generated!
--------------Analysis-main-@shell.c@line: 5216.....

['access()', 'assert()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'find_home_dir()', 'isatty()', 'main_init()', 'printf()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'find_home_dir()', 'free()', 'isatty()', 'main_init()', 'printf()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'find_home_dir()', 'free()', 'isatty()', 'main_init()', 'malloc()', 'printf()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()', 'strlen30()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'find_home_dir()', 'free()', 'isatty()', 'main_init()', 'malloc()', 'printf()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strcmp()', 'strlen30()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'find_home_dir()', 'free()', 'isatty()', 'main_init()', 'malloc()', 'printBold()', 'printf()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strcmp()', 'strlen30()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'shell_exec()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'isatty()', 'main_init()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'shell_exec()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'fprintf()', 'isatty()', 'main_init()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'cmdline_option_value()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'open_db()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'shell_exec()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'cmdline_option_value()', 'f_entry()', 'f_exit()', 'fprintf()', 'isatty()', 'main_init()', 'open_db()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'shell_exec()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'cmdline_option_value()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()', 'usage()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'printf()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'sqlite3_snprintf()', 'strcmp()']
['access()', 'assert()', 'f_entry()', 'f_exit()', 'isatty()', 'main_init()', 'memcpy()', 'process_input()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'do_meta_command()', 'exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'sqlite3_vfs_find()', 'strcmp()']
['access()', 'assert()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'sqlite3_vfs_find()', 'sqlite3_vfs_register()', 'strcmp()']
['access()', 'assert()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'free()', 'integerValue()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_config()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'cmdline_option_value()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'cmdline_option_value()', 'do_meta_command()', 'f_entry()', 'f_exit()', 'free()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'realloc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
['access()', 'assert()', 'cmdline_option_value()', 'do_meta_command()', 'exit()', 'f_entry()', 'f_exit()', 'fprintf()', 'free()', 'isatty()', 'main_init()', 'memcpy()', 'open_db()', 'process_sqliterc()', 'realloc()', 'set_table_name()', 'setvbuf()', 'sqlite3_close()', 'sqlite3_free()', 'strcmp()']
26Paths generated!
--------------Analysis-sqlite3_compileoption_used-@sqlite3.c@line: 17566.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['f_entry()', 'f_exit()', 'sqlite3IsIdChar()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
2Paths generated!
--------------Analysis-sqlite3_compileoption_get-@sqlite3.c@line: 17594.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3StatusValue-@sqlite3.c@line: 18238.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3StatusUp-@sqlite3.c@line: 18258.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3StatusDown-@sqlite3.c@line: 18269.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3StatusHighwater-@sqlite3.c@line: 18283.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_status64-@sqlite3.c@line: 18304.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3MallocMutex()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3Pcache1Mutex()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3MisuseError()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
4Paths generated!
--------------Analysis-sqlite3_status-@sqlite3.c@line: 18329.....

['f_entry()', 'f_exit()', 'sqlite3_status64()']
1Paths generated!
--------------Analysis-sqlite3_db_status-@sqlite3.c@line: 18346.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-getDigits-@sqlite3.c@line: 18631.....

['__builtin_va_arg()', '__builtin_va_start()', 'assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-parseTimezone-@sqlite3.c@line: 18685.....

['f_entry()', 'f_exit()', 'getDigits()']
1Paths generated!
--------------Analysis-parseHhMmSs-@sqlite3.c@line: 18721.....

['f_entry()', 'f_exit()', 'getDigits()', 'parseTimezone()']
1Paths generated!
--------------Analysis-computeJD-@sqlite3.c@line: 18763.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-parseYyyyMmDd-@sqlite3.c@line: 18809.....

['f_entry()', 'f_exit()', 'getDigits()', 'parseHhMmSs()']
['computeJD()', 'f_entry()', 'f_exit()', 'getDigits()', 'parseHhMmSs()']
2Paths generated!
--------------Analysis-setDateTimeToCurrent-@sqlite3.c@line: 18846.....

['f_entry()', 'f_exit()', 'sqlite3StmtCurrentTime()']
1Paths generated!
--------------Analysis-parseDateOrTime-@sqlite3.c@line: 18872.....

['f_entry()', 'f_exit()', 'parseYyyyMmDd()']
['f_entry()', 'f_exit()', 'parseHhMmSs()', 'parseYyyyMmDd()']
['f_entry()', 'f_exit()', 'parseHhMmSs()', 'parseYyyyMmDd()', 'sqlite3AtoF()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'parseHhMmSs()', 'parseYyyyMmDd()', 'setDateTimeToCurrent()', 'sqlite3StrICmp()']
4Paths generated!
--------------Analysis-computeYMD-@sqlite3.c@line: 18895.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-computeHMS-@sqlite3.c@line: 18921.....

['computeJD()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-computeYMD_HMS-@sqlite3.c@line: 18939.....

['computeHMS()', 'computeYMD()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-clearYMD_HMS_TZ-@sqlite3.c@line: 18947.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-osLocaltime-@sqlite3.c@line: 18985.....

['f_entry()', 'f_exit()', 'localtime()', 'sqlite3MutexAlloc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-localtimeOffset-@sqlite3.c@line: 19024.....

['computeJD()', 'computeYMD_HMS()', 'f_entry()', 'f_exit()', 'memset()', 'osLocaltime()']
['computeJD()', 'computeYMD_HMS()', 'f_entry()', 'f_exit()', 'memset()', 'osLocaltime()', 'sqlite3_result_error()']
2Paths generated!
--------------Analysis-parseModifier-@sqlite3.c@line: 19103.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-isDate-@sqlite3.c@line: 19313.....

['f_entry()', 'f_exit()', 'memset()', 'parseDateOrTime()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'memset()', 'parseDateOrTime()', 'parseModifier()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3_value_double()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'memset()', 'parseModifier()', 'setDateTimeToCurrent()', 'sqlite3_value_double()', 'sqlite3_value_text()', 'sqlite3_value_type()']
4Paths generated!
--------------Analysis-juliandayFunc-@sqlite3.c@line: 19354.....

['f_entry()', 'f_exit()', 'isDate()']
['computeJD()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3_result_double()']
2Paths generated!
--------------Analysis-datetimeFunc-@sqlite3.c@line: 19371.....

['f_entry()', 'f_exit()', 'isDate()']
['computeYMD_HMS()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3_result_text()', 'sqlite3_snprintf()']
2Paths generated!
--------------Analysis-timeFunc-@sqlite3.c@line: 19391.....

['f_entry()', 'f_exit()', 'isDate()']
['computeHMS()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3_result_text()', 'sqlite3_snprintf()']
2Paths generated!
--------------Analysis-dateFunc-@sqlite3.c@line: 19410.....

['f_entry()', 'f_exit()', 'isDate()']
['computeYMD()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3_result_text()', 'sqlite3_snprintf()']
2Paths generated!
--------------Analysis-strftimeFunc-@sqlite3.c@line: 19443.....

['computeJD()', 'computeYMD_HMS()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3_context_db_handle()', 'sqlite3_result_text()', 'sqlite3_value_text()']
['computeJD()', 'computeYMD_HMS()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3DbMallocRawNN()', 'sqlite3_context_db_handle()', 'sqlite3_result_text()', 'sqlite3_value_text()']
['computeJD()', 'computeYMD_HMS()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3DbMallocRawNN()', 'sqlite3_context_db_handle()', 'sqlite3_result_error_nomem()', 'sqlite3_result_text()', 'sqlite3_value_text()']
['computeJD()', 'computeYMD_HMS()', 'f_entry()', 'f_exit()', 'isDate()', 'sqlite3_context_db_handle()', 'sqlite3_result_error_toobig()', 'sqlite3_result_text()', 'sqlite3_value_text()']
4Paths generated!
--------------Analysis-ctimeFunc-@sqlite3.c@line: 19581.....

['f_entry()', 'f_exit()', 'timeFunc()']
1Paths generated!
--------------Analysis-cdateFunc-@sqlite3.c@line: 19595.....

['dateFunc()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-ctimestampFunc-@sqlite3.c@line: 19609.....

['datetimeFunc()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3RegisterDateTimeFunctions-@sqlite3.c@line: 19669.....

['f_entry()', 'f_exit()', 'sqlite3InsertBuiltinFuncs()']
1Paths generated!
--------------Analysis-sqlite3OsClose-@sqlite3.c@line: 19772.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xClose()']
2Paths generated!
--------------Analysis-sqlite3OsRead-@sqlite3.c@line: 19778.....

['f_entry()', 'f_exit()', 'xRead()']
1Paths generated!
--------------Analysis-sqlite3OsWrite-@sqlite3.c@line: 19782.....

['f_entry()', 'f_exit()', 'xWrite()']
1Paths generated!
--------------Analysis-sqlite3OsTruncate-@sqlite3.c@line: 19786.....

['f_entry()', 'f_exit()', 'xTruncate()']
1Paths generated!
--------------Analysis-sqlite3OsSync-@sqlite3.c@line: 19789.....

['f_entry()', 'f_exit()', 'xSync()']
1Paths generated!
--------------Analysis-sqlite3OsFileSize-@sqlite3.c@line: 19793.....

['f_entry()', 'f_exit()', 'xFileSize()']
1Paths generated!
--------------Analysis-sqlite3OsLock-@sqlite3.c@line: 19797.....

['f_entry()', 'f_exit()', 'xLock()']
1Paths generated!
--------------Analysis-sqlite3OsUnlock-@sqlite3.c@line: 19801.....

['f_entry()', 'f_exit()', 'xUnlock()']
1Paths generated!
--------------Analysis-sqlite3OsCheckReservedLock-@sqlite3.c@line: 19804.....

['f_entry()', 'f_exit()', 'xCheckReservedLock()']
1Paths generated!
--------------Analysis-sqlite3OsFileControl-@sqlite3.c@line: 19817.....

['f_entry()', 'f_exit()', 'xFileControl()']
1Paths generated!
--------------Analysis-sqlite3OsFileControlHint-@sqlite3.c@line: 19835.....

['f_entry()', 'f_exit()', 'xFileControl()']
1Paths generated!
--------------Analysis-sqlite3OsSectorSize-@sqlite3.c@line: 19839.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xSectorSize()']
2Paths generated!
--------------Analysis-sqlite3OsDeviceCharacteristics-@sqlite3.c@line: 19843.....

['f_entry()', 'f_exit()', 'xDeviceCharacteristics()']
1Paths generated!
--------------Analysis-sqlite3OsShmLock-@sqlite3.c@line: 19846.....

['f_entry()', 'f_exit()', 'xShmLock()']
1Paths generated!
--------------Analysis-sqlite3OsShmBarrier-@sqlite3.c@line: 19849.....

['f_entry()', 'f_exit()', 'xShmBarrier()']
1Paths generated!
--------------Analysis-sqlite3OsShmUnmap-@sqlite3.c@line: 19852.....

['f_entry()', 'f_exit()', 'xShmUnmap()']
1Paths generated!
--------------Analysis-sqlite3OsShmMap-@sqlite3.c@line: 19855.....

['f_entry()', 'f_exit()', 'xShmMap()']
1Paths generated!
--------------Analysis-sqlite3OsFetch-@sqlite3.c@line: 19868.....

['f_entry()', 'f_exit()', 'xFetch()']
1Paths generated!
--------------Analysis-sqlite3OsUnfetch-@sqlite3.c@line: 19872.....

['f_entry()', 'f_exit()', 'xUnfetch()']
1Paths generated!
--------------Analysis-sqlite3OsOpen-@sqlite3.c@line: 19890.....

['assert()', 'f_entry()', 'f_exit()', 'xOpen()']
1Paths generated!
--------------Analysis-sqlite3OsDelete-@sqlite3.c@line: 19907.....

['assert()', 'f_entry()', 'f_exit()', 'xDelete()']
1Paths generated!
--------------Analysis-sqlite3OsAccess-@sqlite3.c@line: 19912.....

['f_entry()', 'f_exit()', 'xAccess()']
1Paths generated!
--------------Analysis-sqlite3OsFullPathname-@sqlite3.c@line: 19921.....

['f_entry()', 'f_exit()', 'xFullPathname()']
1Paths generated!
--------------Analysis-sqlite3OsDlOpen-@sqlite3.c@line: 19932.....

['f_entry()', 'f_exit()', 'xDlOpen()']
1Paths generated!
--------------Analysis-sqlite3OsDlError-@sqlite3.c@line: 19935.....

['f_entry()', 'f_exit()', 'xDlError()']
1Paths generated!
--------------Analysis-sqlite3OsDlSym-@sqlite3.c@line: 19938.....

['f_entry()', 'f_exit()', 'xDlSym()']
1Paths generated!
--------------Analysis-sqlite3OsDlClose-@sqlite3.c@line: 19941.....

['f_entry()', 'f_exit()', 'xDlClose()']
1Paths generated!
--------------Analysis-sqlite3OsRandomness-@sqlite3.c@line: 19945.....

['f_entry()', 'f_exit()', 'xRandomness()']
1Paths generated!
--------------Analysis-sqlite3OsSleep-@sqlite3.c@line: 19948.....

['f_entry()', 'f_exit()', 'xSleep()']
1Paths generated!
--------------Analysis-sqlite3OsGetLastError-@sqlite3.c@line: 19951.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xGetLastError()']
2Paths generated!
--------------Analysis-sqlite3OsCurrentTimeInt64-@sqlite3.c@line: 19954.....

['f_entry()', 'f_exit()', 'xCurrentTime()']
['f_entry()', 'f_exit()', 'xCurrentTimeInt64()']
2Paths generated!
--------------Analysis-sqlite3OsOpenMalloc-@sqlite3.c@line: 19972.....

['f_entry()', 'f_exit()', 'sqlite3MallocZero()']
['f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3OsOpen()']
['f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3OsOpen()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-sqlite3OsCloseFree-@sqlite3.c@line: 19994.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsClose()', 'sqlite3_free()']
1Paths generated!
--------------Analysis-sqlite3OsInit-@sqlite3.c@line: 20006.....

['f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_malloc()', 'sqlite3_os_init()']
1Paths generated!
--------------Analysis-sqlite3_vfs_find-@sqlite3.c@line: 20023.....

['f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
2Paths generated!
--------------Analysis-vfsUnlink-@sqlite3.c@line: 20047.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_vfs_register-@sqlite3.c@line: 20069.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'vfsUnlink()']
1Paths generated!
--------------Analysis-sqlite3_vfs_unregister-@sqlite3.c@line: 20097.....

['f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'vfsUnlink()']
1Paths generated!
--------------Analysis-sqlite3BenignMallocHooks-@sqlite3.c@line: 20168.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BeginBenignMalloc-@sqlite3.c@line: 20182.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xBenignBegin()']
2Paths generated!
--------------Analysis-sqlite3EndBenignMalloc-@sqlite3.c@line: 20188.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xBenignEnd()']
2Paths generated!
--------------Analysis-sqlite3MemMalloc-@sqlite3.c@line: 20386.....

['assert()', 'f_entry()', 'f_exit()', 'malloc()']
['assert()', 'f_entry()', 'f_exit()', 'malloc()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-sqlite3MemFree-@sqlite3.c@line: 20418.....

['assert()', 'f_entry()', 'f_exit()', 'free()']
1Paths generated!
--------------Analysis-sqlite3MemSize-@sqlite3.c@line: 20433.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MemRealloc-@sqlite3.c@line: 20456.....

['assert()', 'f_entry()', 'f_exit()', 'realloc()']
['assert()', 'f_entry()', 'f_exit()', 'realloc()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-sqlite3MemRoundup-@sqlite3.c@line: 20488.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MemInit-@sqlite3.c@line: 20495.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MemShutdown-@sqlite3.c@line: 20531.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MemSetDefault-@sqlite3.c@line: 20542.....

['f_entry()', 'f_exit()', 'sqlite3_config()']
1Paths generated!
--------------Analysis-sqlite3MutexInit-@sqlite3.c@line: 22391.....

['assert()', 'f_entry()', 'f_exit()', 'xMutexInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MemoryBarrier()', 'sqlite3NoopMutex()', 'xMutexInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DefaultMutex()', 'sqlite3MemoryBarrier()', 'xMutexInit()']
3Paths generated!
--------------Analysis-sqlite3MutexEnd-@sqlite3.c@line: 22432.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xMutexEnd()']
2Paths generated!
--------------Analysis-sqlite3_mutex_alloc-@sqlite3.c@line: 22448.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexInit()', 'sqlite3_initialize()', 'xMutexAlloc()']
1Paths generated!
--------------Analysis-sqlite3MutexAlloc-@sqlite3.c@line: 22457.....

['assert()', 'f_entry()', 'f_exit()', 'xMutexAlloc()']
1Paths generated!
--------------Analysis-sqlite3_mutex_free-@sqlite3.c@line: 22469.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xMutexFree()']
2Paths generated!
--------------Analysis-sqlite3_mutex_enter-@sqlite3.c@line: 22480.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xMutexEnter()']
2Paths generated!
--------------Analysis-sqlite3_mutex_try-@sqlite3.c@line: 22491.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xMutexTry()']
2Paths generated!
--------------Analysis-sqlite3_mutex_leave-@sqlite3.c@line: 22506.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xMutexLeave()']
2Paths generated!
--------------Analysis-noopMutexInit-@sqlite3.c@line: 22569.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-noopMutexEnd-@sqlite3.c@line: 22570.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-noopMutexAlloc-@sqlite3.c@line: 22571.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-noopMutexFree-@sqlite3.c@line: 22575.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-noopMutexEnter-@sqlite3.c@line: 22576.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-noopMutexTry-@sqlite3.c@line: 22577.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-noopMutexLeave-@sqlite3.c@line: 22581.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3NoopMutex-@sqlite3.c@line: 22583.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MemoryBarrier-@sqlite3.c@line: 22839.....

['__sync_synchronize()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pthreadMutexInit-@sqlite3.c@line: 22850.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pthreadMutexEnd-@sqlite3.c@line: 22851.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pthreadMutexAlloc-@sqlite3.c@line: 22901.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pthreadMutexFree-@sqlite3.c@line: 22966.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pthreadMutexEnter-@sqlite3.c@line: 22993.....

['assert()', 'f_entry()', 'f_exit()', 'pthread_mutex_lock()']
1Paths generated!
--------------Analysis-pthreadMutexTry-@sqlite3.c@line: 23035.....

['assert()', 'f_entry()', 'f_exit()', 'pthread_mutex_trylock()']
1Paths generated!
--------------Analysis-pthreadMutexLeave-@sqlite3.c@line: 23092.....

['assert()', 'f_entry()', 'f_exit()', 'pthread_mutex_unlock()']
1Paths generated!
--------------Analysis-sqlite3DefaultMutex-@sqlite3.c@line: 23115.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_release_memory-@sqlite3.c@line: 23855.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MallocMutex-@sqlite3.c@line: 23904.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_memory_alarm-@sqlite3.c@line: 23914.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_soft_heap_limit64-@sqlite3.c@line: 23930.....

['f_entry()', 'f_exit()', 'sqlite3StatusValue()', 'sqlite3_initialize()', 'sqlite3_memory_used()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3StatusValue()', 'sqlite3_initialize()', 'sqlite3_memory_used()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_release_memory()']
2Paths generated!
--------------Analysis-sqlite3_soft_heap_limit-@sqlite3.c@line: 23952.....

['f_entry()', 'f_exit()', 'sqlite3_soft_heap_limit64()']
1Paths generated!
--------------Analysis-sqlite3MallocInit-@sqlite3.c@line: 23960.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()', 'xInit()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3MemSetDefault()', 'sqlite3MutexAlloc()', 'xInit()']
2Paths generated!
--------------Analysis-sqlite3HeapNearlyFull-@sqlite3.c@line: 24004.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MallocEnd-@sqlite3.c@line: 24011.....

['f_entry()', 'f_exit()', 'memset()']
['f_entry()', 'f_exit()', 'memset()', 'xShutdown()']
2Paths generated!
--------------Analysis-sqlite3_memory_used-@sqlite3.c@line: 24021.....

['f_entry()', 'f_exit()', 'sqlite3_status64()']
1Paths generated!
--------------Analysis-sqlite3_memory_highwater-@sqlite3.c@line: 24032.....

['f_entry()', 'f_exit()', 'sqlite3_status64()']
1Paths generated!
--------------Analysis-sqlite3MallocAlarm-@sqlite3.c@line: 24041.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_release_memory()']
1Paths generated!
--------------Analysis-mallocWithAlarm-@sqlite3.c@line: 24052.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3StatusHighwater()', 'xMalloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'xMalloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3StatusValue()', 'xMalloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocAlarm()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3StatusValue()', 'xMalloc()', 'xRoundup()']
4Paths generated!
--------------Analysis-sqlite3Malloc-@sqlite3.c@line: 24087.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xMalloc()']
['assert()', 'f_entry()', 'f_exit()', 'mallocWithAlarm()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3_malloc-@sqlite3.c@line: 24112.....

['f_entry()', 'f_exit()', 'sqlite3_initialize()']
['f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3_initialize()']
2Paths generated!
--------------Analysis-sqlite3_malloc64-@sqlite3.c@line: 24118.....

['f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3_initialize()']
1Paths generated!
--------------Analysis-sqlite3ScratchMalloc-@sqlite3.c@line: 24144.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3StatusHighwater()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3ScratchFree-@sqlite3.c@line: 24181.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'sqlite3StatusDown()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StatusDown()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
4Paths generated!
--------------Analysis-isLookaside-@sqlite3.c@line: 24228.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MallocSize-@sqlite3.c@line: 24239.....

['assert()', 'f_entry()', 'f_exit()', 'xSize()']
1Paths generated!
--------------Analysis-sqlite3DbMallocSize-@sqlite3.c@line: 24243.....

['assert()', 'f_entry()', 'f_exit()', 'isLookaside()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'xSize()']
2Paths generated!
--------------Analysis-sqlite3_msize-@sqlite3.c@line: 24261.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xSize()']
2Paths generated!
--------------Analysis-sqlite3_free-@sqlite3.c@line: 24270.....

['assert()', 'f_entry()', 'f_exit()', 'xFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StatusDown()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xFree()']
2Paths generated!
--------------Analysis-measureAllocationSize-@sqlite3.c@line: 24289.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocSize()']
1Paths generated!
--------------Analysis-sqlite3DbFree-@sqlite3.c@line: 24297.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'measureAllocationSize()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-sqlite3Realloc-@sqlite3.c@line: 24327.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'xRealloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusValue()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xRealloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3StatusValue()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xRealloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocAlarm()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusValue()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xRealloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocAlarm()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3StatusValue()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xRealloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocAlarm()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3StatusValue()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xRealloc()', 'xRoundup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3MallocAlarm()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3StatusValue()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xRealloc()', 'xRoundup()']
8Paths generated!
--------------Analysis-sqlite3_realloc-@sqlite3.c@line: 24379.....

['f_entry()', 'f_exit()', 'sqlite3Realloc()', 'sqlite3_initialize()']
1Paths generated!
--------------Analysis-sqlite3_realloc64-@sqlite3.c@line: 24386.....

['f_entry()', 'f_exit()', 'sqlite3Realloc()', 'sqlite3_initialize()']
1Paths generated!
--------------Analysis-sqlite3MallocZero-@sqlite3.c@line: 24397.....

['f_entry()', 'f_exit()', 'sqlite3Malloc()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3Malloc()']
2Paths generated!
--------------Analysis-sqlite3DbMallocZero-@sqlite3.c@line: 24409.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRaw()']
2Paths generated!
--------------Analysis-dbMallocRawFinish-@sqlite3.c@line: 24421.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3OomFault()']
2Paths generated!
--------------Analysis-sqlite3DbMallocRaw-@sqlite3.c@line: 24453.....

['f_entry()', 'f_exit()', 'sqlite3Malloc()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3Malloc()']
2Paths generated!
--------------Analysis-sqlite3DbMallocRawNN-@sqlite3.c@line: 24460.....

['assert()', 'dbMallocRawFinish()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3DbRealloc-@sqlite3.c@line: 24502.....

['assert()', 'dbReallocFinish()', 'f_entry()', 'f_exit()', 'isLookaside()']
['assert()', 'dbReallocFinish()', 'f_entry()', 'f_exit()', 'isLookaside()', 'sqlite3DbMallocRawNN()']
2Paths generated!
--------------Analysis-dbReallocFinish-@sqlite3.c@line: 24509.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'sqlite3OomFault()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'isLookaside()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()']
5Paths generated!
--------------Analysis-sqlite3DbReallocOrFree-@sqlite3.c@line: 24539.....

['f_entry()', 'f_exit()', 'sqlite3DbRealloc()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbRealloc()']
2Paths generated!
--------------Analysis-sqlite3DbStrDup-@sqlite3.c@line: 24555.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocRaw()', 'sqlite3Strlen30()']
2Paths generated!
--------------Analysis-sqlite3DbStrNDup-@sqlite3.c@line: 24569.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocRawNN()']
2Paths generated!
--------------Analysis-sqlite3SetString-@sqlite3.c@line: 24587.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()']
1Paths generated!
--------------Analysis-sqlite3OomFault-@sqlite3.c@line: 24598.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3OomClear-@sqlite3.c@line: 24615.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-apiOomError-@sqlite3.c@line: 24627.....

['f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3OomClear()']
1Paths generated!
--------------Analysis-sqlite3ApiExit-@sqlite3.c@line: 24645.....

['assert()', 'f_entry()', 'f_exit()']
['apiOomError()', 'assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-et_getdigit-@sqlite3.c@line: 24780.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-setStrAccumError-@sqlite3.c@line: 24796.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-getIntArg-@sqlite3.c@line: 24805.....

['f_entry()', 'f_exit()', 'sqlite3_value_int64()']
1Paths generated!
--------------Analysis-getDoubleArg-@sqlite3.c@line: 24809.....

['f_entry()', 'f_exit()', 'sqlite3_value_double()']
1Paths generated!
--------------Analysis-getTextArg-@sqlite3.c@line: 24813.....

['f_entry()', 'f_exit()', 'sqlite3_value_text()']
1Paths generated!
--------------Analysis-sqlite3VXPrintf-@sqlite3.c@line: 24831.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3StrAccumAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AppendChar()', 'sqlite3StrAccumAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AppendChar()', 'sqlite3DbFree()', 'sqlite3StrAccumAppend()']
['__builtin_va_arg()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3AppendChar()', 'sqlite3DbFree()', 'sqlite3StrAccumAppend()']
['assert()', 'f_entry()', 'f_exit()', 'getIntArg()', 'sqlite3AppendChar()', 'sqlite3DbFree()', 'sqlite3StrAccumAppend()']
['__builtin_va_arg()', 'assert()', 'f_entry()', 'f_exit()', 'getIntArg()', 'sqlite3AppendChar()', 'sqlite3DbFree()', 'sqlite3StrAccumAppend()']
['__builtin_va_arg()', 'f_entry()', 'f_exit()']
9Paths generated!
--------------Analysis-sqlite3StrAccumEnlarge-@sqlite3.c@line: 25414.....

['assert()', 'f_entry()', 'f_exit()', 'setStrAccumError()', 'sqlite3StrAccumReset()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocSize()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocSize()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'setStrAccumError()', 'sqlite3DbRealloc()', 'sqlite3StrAccumReset()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'setStrAccumError()', 'sqlite3DbMallocSize()', 'sqlite3StrAccumReset()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'setStrAccumError()']
6Paths generated!
--------------Analysis-sqlite3AppendChar-@sqlite3.c@line: 25466.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumEnlarge()']
1Paths generated!
--------------Analysis-enlargeAndAppend-@sqlite3.c@line: 25483.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumEnlarge()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3StrAccumEnlarge()']
2Paths generated!
--------------Analysis-sqlite3StrAccumAppend-@sqlite3.c@line: 25496.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'enlargeAndAppend()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3StrAccumAppendAll-@sqlite3.c@line: 25513.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()']
1Paths generated!
--------------Analysis-sqlite3StrAccumFinish-@sqlite3.c@line: 25523.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'setStrAccumError()', 'sqlite3DbMallocRaw()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocRaw()']
4Paths generated!
--------------Analysis-sqlite3StrAccumReset-@sqlite3.c@line: 25543.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-sqlite3StrAccumInit-@sqlite3.c@line: 25566.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VMPrintf-@sqlite3.c@line: 25580.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VXPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomFault()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VXPrintf()']
2Paths generated!
--------------Analysis-sqlite3MPrintf-@sqlite3.c@line: 25600.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3VMPrintf()']
1Paths generated!
--------------Analysis-sqlite3_vmprintf-@sqlite3.c@line: 25613.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VXPrintf()', 'sqlite3_initialize()']
1Paths generated!
--------------Analysis-sqlite3_mprintf-@sqlite3.c@line: 25637.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3_initialize()', 'sqlite3_vmprintf()']
1Paths generated!
--------------Analysis-sqlite3_vsnprintf-@sqlite3.c@line: 25662.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VXPrintf()']
1Paths generated!
--------------Analysis-sqlite3_snprintf-@sqlite3.c@line: 25676.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3_vsnprintf()']
1Paths generated!
--------------Analysis-renderLogMsg-@sqlite3.c@line: 25699.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumInit()', 'sqlite3VXPrintf()', 'xLog()']
1Paths generated!
--------------Analysis-sqlite3_log-@sqlite3.c@line: 25712.....

['f_entry()', 'f_exit()']
['__builtin_va_start()', 'f_entry()', 'f_exit()', 'renderLogMsg()']
2Paths generated!
--------------Analysis-sqlite3XPrintf-@sqlite3.c@line: 25746.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3VXPrintf()']
1Paths generated!
--------------Analysis-sqlite3_randomness-@sqlite3.c@line: 26289.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3OsRandomness()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3PrngSaveState-@sqlite3.c@line: 26376.....

['f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-sqlite3PrngRestoreState-@sqlite3.c@line: 26383.....

['f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-sqlite3ThreadCreate-@sqlite3.c@line: 26444.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3FaultSim()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3FaultSim()', 'sqlite3Malloc()', 'xTask()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'pthread_create()', 'sqlite3FaultSim()', 'sqlite3Malloc()']
3Paths generated!
--------------Analysis-sqlite3ThreadJoin-@sqlite3.c@line: 26481.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'pthread_join()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3Utf8Read-@sqlite3.c@line: 26836.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemTranslate-@sqlite3.c@line: 26872.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocSize()', 'sqlite3VdbeMemRelease()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocSize()', 'sqlite3VdbeMemMakeWriteable()', 'sqlite3VdbeMemRelease()']
2Paths generated!
--------------Analysis-sqlite3VdbeMemHandleBom-@sqlite3.c@line: 27015.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemMakeWriteable()']
['assert()', 'f_entry()', 'f_exit()', 'memmove()', 'sqlite3VdbeMemMakeWriteable()']
3Paths generated!
--------------Analysis-sqlite3Utf8CharLen-@sqlite3.c@line: 27053.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Utf16to8-@sqlite3.c@line: 27107.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemSetStr()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeMemSetStr()']
2Paths generated!
--------------Analysis-sqlite3Utf16ByteLen-@sqlite3.c@line: 27128.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3FaultSim-@sqlite3.c@line: 27249.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xCallback()']
2Paths generated!
--------------Analysis-sqlite3IsNaN-@sqlite3.c@line: 27262.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Strlen30-@sqlite3.c@line: 27310.....

['f_entry()', 'f_exit()', 'strlen()']
1Paths generated!
--------------Analysis-sqlite3ColumnType-@sqlite3.c@line: 27322.....

['f_entry()', 'f_exit()', 'strlen()']
1Paths generated!
--------------Analysis-sqlite3ErrorFinish-@sqlite3.c@line: 27332.....

['f_entry()', 'f_exit()', 'sqlite3SystemError()']
['f_entry()', 'f_exit()', 'sqlite3SystemError()', 'sqlite3ValueSetNull()']
2Paths generated!
--------------Analysis-sqlite3Error-@sqlite3.c@line: 27342.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorFinish()']
2Paths generated!
--------------Analysis-sqlite3SystemError-@sqlite3.c@line: 27352.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsGetLastError()']
2Paths generated!
--------------Analysis-sqlite3ErrorWithMsg-@sqlite3.c@line: 27381.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3SystemError()', 'sqlite3ValueNew()']
['__builtin_va_start()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3SystemError()', 'sqlite3VMPrintf()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3SystemError()']
3Paths generated!
--------------Analysis-sqlite3ErrorMsg-@sqlite3.c@line: 27414.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VMPrintf()']
1Paths generated!
--------------Analysis-sqlite3Dequote-@sqlite3.c@line: 27448.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3TokenInit-@sqlite3.c@line: 27474.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()']
1Paths generated!
--------------Analysis-sqlite3_stricmp-@sqlite3.c@line: 27492.....

['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
1Paths generated!
--------------Analysis-sqlite3StrICmp-@sqlite3.c@line: 27500.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_strnicmp-@sqlite3.c@line: 27513.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3AtoF-@sqlite3.c@line: 27548.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-compare2pow63-@sqlite3.c@line: 27738.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Atoi64-@sqlite3.c@line: 27774.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'compare2pow63()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3DecOrHexToI64-@sqlite3.c@line: 27860.....

['f_entry()', 'f_exit()', 'sqlite3Atoi64()']
['f_entry()', 'f_exit()', 'memcpy()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3HexToInt()']
3Paths generated!
--------------Analysis-sqlite3GetInt32-@sqlite3.c@line: 27890.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memcpy()']
['f_entry()', 'f_exit()', 'sqlite3HexToInt()']
3Paths generated!
--------------Analysis-sqlite3Atoi-@sqlite3.c@line: 27948.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3GetInt32()']
2Paths generated!
--------------Analysis-putVarint64-@sqlite3.c@line: 27983.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PutVarint-@sqlite3.c@line: 28007.....

['f_entry()', 'f_exit()', 'putVarint64()']
1Paths generated!
--------------Analysis-sqlite3GetVarint-@sqlite3.c@line: 28037.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3GetVarint32-@sqlite3.c@line: 28208.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VarintLen-@sqlite3.c@line: 28331.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3Get4byte-@sqlite3.c@line: 28341.....

['__builtin_bswap32()', 'f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-sqlite3Put4byte-@sqlite3.c@line: 28361.....

['__builtin_bswap32()', 'f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-sqlite3HexToInt-@sqlite3.c@line: 28387.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3HexToBlob-@sqlite3.c@line: 28405.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3HexToInt()']
2Paths generated!
--------------Analysis-logBadConnection-@sqlite3.c@line: 28426.....

['f_entry()', 'f_exit()', 'sqlite3_log()']
1Paths generated!
--------------Analysis-sqlite3SafetyCheckOk-@sqlite3.c@line: 28447.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3SafetyCheckSickOrOk()']
['f_entry()', 'f_exit()', 'logBadConnection()', 'sqlite3SafetyCheckSickOrOk()']
['f_entry()', 'f_exit()', 'logBadConnection()']
4Paths generated!
--------------Analysis-sqlite3SafetyCheckSickOrOk-@sqlite3.c@line: 28464.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'logBadConnection()']
2Paths generated!
--------------Analysis-sqlite3AddInt64-@sqlite3.c@line: 28484.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3SubInt64-@sqlite3.c@line: 28500.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3AddInt64()']
2Paths generated!
--------------Analysis-sqlite3MulInt64-@sqlite3.c@line: 28513.....

['f_entry()', 'f_exit()', 'sqlite3AddInt64()']
1Paths generated!
--------------Analysis-sqlite3AbsInt32-@sqlite3.c@line: 28548.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3LogEstAdd-@sqlite3.c@line: 28591.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3LogEst-@sqlite3.c@line: 28618.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3LogEstFromDouble-@sqlite3.c@line: 28636.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3LogEst()']
2Paths generated!
--------------Analysis-sqlite3HashInit-@sqlite3.c@line: 28699.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3HashClear-@sqlite3.c@line: 28711.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
1Paths generated!
--------------Analysis-strHash-@sqlite3.c@line: 28731.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-insertElement-@sqlite3.c@line: 28744.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-rehash-@sqlite3.c@line: 28778.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3Malloc()', 'sqlite3MallocSize()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'insertElement()', 'memset()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3Malloc()', 'sqlite3MallocSize()', 'sqlite3_free()', 'strHash()']
2Paths generated!
--------------Analysis-findElementWithHash-@sqlite3.c@line: 28818.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'strHash()']
3Paths generated!
--------------Analysis-removeElementGivenHash-@sqlite3.c@line: 28852.....

['f_entry()', 'f_exit()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3HashClear()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3HashFind-@sqlite3.c@line: 28887.....

['assert()', 'f_entry()', 'f_exit()', 'findElementWithHash()']
1Paths generated!
--------------Analysis-sqlite3HashInsert-@sqlite3.c@line: 28911.....

['assert()', 'f_entry()', 'f_exit()', 'findElementWithHash()', 'insertElement()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'findElementWithHash()', 'insertElement()', 'rehash()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'findElementWithHash()', 'insertElement()', 'rehash()', 'sqlite3Malloc()', 'strHash()']
['assert()', 'f_entry()', 'f_exit()', 'findElementWithHash()', 'insertElement()', 'rehash()', 'removeElementGivenHash()', 'sqlite3Malloc()', 'strHash()']
4Paths generated!
--------------Analysis-sqlite3OpcodeName-@sqlite3.c@line: 28957.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-posixOpen-@sqlite3.c@line: 29664.....

['f_entry()', 'f_exit()', 'open()']
1Paths generated!
--------------Analysis-robustFchown-@sqlite3.c@line: 29836.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixSetSystemCall-@sqlite3.c@line: 29850.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'strcmp()']
2Paths generated!
--------------Analysis-unixGetSystemCall-@sqlite3.c@line: 29893.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'strcmp()']
2Paths generated!
--------------Analysis-unixNextSystemCall-@sqlite3.c@line: 29912.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'strcmp()']
2Paths generated!
--------------Analysis-robust_open-@sqlite3.c@line: 29953.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-unixEnterMutex-@sqlite3.c@line: 30004.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()']
1Paths generated!
--------------Analysis-unixLeaveMutex-@sqlite3.c@line: 30007.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-robust_ftruncate-@sqlite3.c@line: 30102.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqliteErrorFromPosixError-@sqlite3.c@line: 30127.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixLogErrorAtLine-@sqlite3.c@line: 30444.....

['f_entry()', 'f_exit()', 'sqlite3_log()']
1Paths generated!
--------------Analysis-robust_close-@sqlite3.c@line: 30509.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'unixLogErrorAtLine()']
2Paths generated!
--------------Analysis-storeLastErrno-@sqlite3.c@line: 30520.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-closePendingFds-@sqlite3.c@line: 30527.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'robust_close()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-releaseInodeInfo-@sqlite3.c@line: 30545.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'closePendingFds()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-findInodeInfo-@sqlite3.c@line: 30579.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'memset()', 'sqlite3_malloc64()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'memset()', 'sqlite3_malloc64()', 'storeLastErrno()']
3Paths generated!
--------------Analysis-fileHasMoved-@sqlite3.c@line: 30662.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-verifyDbFile-@sqlite3.c@line: 30682.....

['f_entry()', 'f_exit()', 'fileHasMoved()']
['f_entry()', 'f_exit()', 'fileHasMoved()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-unixCheckReservedLock-@sqlite3.c@line: 30715.....

['assert()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'storeLastErrno()', 'unixEnterMutex()', 'unixLeaveMutex()']
2Paths generated!
--------------Analysis-unixFileLock-@sqlite3.c@line: 30775.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixLock-@sqlite3.c@line: 30825.....

['assert()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'sqliteErrorFromPosixError()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'sqliteErrorFromPosixError()', 'storeLastErrno()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'storeLastErrno()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
5Paths generated!
--------------Analysis-setPendingFd-@sqlite3.c@line: 31052.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-posixUnlock-@sqlite3.c@line: 31074.....

['assert()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixLeaveMutex()']
['assert()', 'closePendingFds()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixLeaveMutex()']
['assert()', 'closePendingFds()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
['assert()', 'closePendingFds()', 'f_entry()', 'f_exit()', 'storeLastErrno()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'storeLastErrno()', 'unixEnterMutex()', 'unixFileLock()', 'unixLeaveMutex()']
6Paths generated!
--------------Analysis-unixUnlock-@sqlite3.c@line: 31234.....

['assert()', 'f_entry()', 'f_exit()', 'posixUnlock()']
1Paths generated!
--------------Analysis-closeUnixFile-@sqlite3.c@line: 31256.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'unixUnmapfile()']
['f_entry()', 'f_exit()', 'memset()', 'robust_close()', 'sqlite3_free()', 'unixUnmapfile()']
2Paths generated!
--------------Analysis-unixClose-@sqlite3.c@line: 31291.....

['assert()', 'closeUnixFile()', 'f_entry()', 'f_exit()', 'releaseInodeInfo()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixUnlock()', 'verifyDbFile()']
['assert()', 'closeUnixFile()', 'f_entry()', 'f_exit()', 'releaseInodeInfo()', 'setPendingFd()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixUnlock()', 'verifyDbFile()']
2Paths generated!
--------------Analysis-nolockCheckReservedLock-@sqlite3.c@line: 31336.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-nolockLock-@sqlite3.c@line: 31341.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-nolockUnlock-@sqlite3.c@line: 31345.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-nolockClose-@sqlite3.c@line: 31353.....

['closeUnixFile()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-dotlockCheckReservedLock-@sqlite3.c@line: 31398.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-dotlockLock-@sqlite3.c@line: 31439.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqliteErrorFromPosixError()']
['f_entry()', 'f_exit()', 'sqliteErrorFromPosixError()', 'storeLastErrno()']
['f_entry()', 'f_exit()', 'utimes()']
4Paths generated!
--------------Analysis-dotlockUnlock-@sqlite3.c@line: 31489.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'storeLastErrno()']
2Paths generated!
--------------Analysis-dotlockClose-@sqlite3.c@line: 31532.....

['assert()', 'closeUnixFile()', 'dotlockUnlock()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
1Paths generated!
--------------Analysis-seekAndRead-@sqlite3.c@line: 32440.....

['assert()', 'f_entry()', 'f_exit()', 'lseek()']
['assert()', 'f_entry()', 'f_exit()', 'lseek()', 'storeLastErrno()']
2Paths generated!
--------------Analysis-unixRead-@sqlite3.c@line: 32489.....

['assert()', 'f_entry()', 'f_exit()', 'seekAndRead()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'seekAndRead()', 'storeLastErrno()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'seekAndRead()', 'storeLastErrno()']
3Paths generated!
--------------Analysis-seekAndWriteFd-@sqlite3.c@line: 32548.....

['assert()', 'f_entry()', 'f_exit()', 'lseek()']
1Paths generated!
--------------Analysis-seekAndWrite-@sqlite3.c@line: 32594.....

['f_entry()', 'f_exit()', 'seekAndWriteFd()']
1Paths generated!
--------------Analysis-unixWrite-@sqlite3.c@line: 32603.....

['assert()', 'f_entry()', 'f_exit()', 'seekAndWrite()']
['assert()', 'f_entry()', 'f_exit()', 'seekAndWrite()', 'storeLastErrno()']
2Paths generated!
--------------Analysis-full_fsync-@sqlite3.c@line: 32738.....

['f_entry()', 'f_exit()', 'fsync()']
1Paths generated!
--------------Analysis-openDirectory-@sqlite3.c@line: 32834.....

['f_entry()', 'f_exit()', 'robust_open()', 'sqlite3_snprintf()', 'strlen()', 'unixLogErrorAtLine()']
1Paths generated!
--------------Analysis-unixSync-@sqlite3.c@line: 32871.....

['assert()', 'f_entry()', 'f_exit()', 'full_fsync()']
['assert()', 'f_entry()', 'f_exit()', 'full_fsync()', 'robust_close()']
['assert()', 'f_entry()', 'f_exit()', 'full_fsync()', 'storeLastErrno()', 'unixLogErrorAtLine()']
3Paths generated!
--------------Analysis-unixTruncate-@sqlite3.c@line: 32921.....

['assert()', 'f_entry()', 'f_exit()', 'robust_ftruncate()']
['assert()', 'f_entry()', 'f_exit()', 'robust_ftruncate()', 'storeLastErrno()', 'unixLogErrorAtLine()']
2Paths generated!
--------------Analysis-unixFileSize-@sqlite3.c@line: 32971.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'storeLastErrno()']
2Paths generated!
--------------Analysis-fcntlSizeHint-@sqlite3.c@line: 33009.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'unixMapfile()']
['f_entry()', 'f_exit()', 'robust_ftruncate()', 'unixMapfile()']
['f_entry()', 'f_exit()', 'robust_ftruncate()', 'storeLastErrno()', 'unixLogErrorAtLine()', 'unixMapfile()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'seekAndWrite()']
6Paths generated!
--------------Analysis-unixModeBit-@sqlite3.c@line: 33078.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixFileControl-@sqlite3.c@line: 33094.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixSectorSize-@sqlite3.c@line: 33190.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixDeviceCharacteristics-@sqlite3.c@line: 33289.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixGetpagesize-@sqlite3.c@line: 33310.....

['f_entry()', 'f_exit()', 'sysconf()']
1Paths generated!
--------------Analysis-unixShmSystemLock-@sqlite3.c@line: 33405.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()']
2Paths generated!
--------------Analysis-unixShmRegionPerMap-@sqlite3.c@line: 33484.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixShmPurge-@sqlite3.c@line: 33498.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'unixShmRegionPerMap()']
['assert()', 'f_entry()', 'f_exit()', 'robust_close()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'unixShmRegionPerMap()']
3Paths generated!
--------------Analysis-unixOpenSharedMemory-@sqlite3.c@line: 33558.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixShmPurge()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_snprintf()', 'strlen()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixShmPurge()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'robustFchown()', 'robust_open()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_snprintf()', 'sqlite3_uri_boolean()', 'strlen()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixShmPurge()', 'unixShmSystemLock()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'robustFchown()', 'robust_ftruncate()', 'robust_open()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_snprintf()', 'sqlite3_uri_boolean()', 'strlen()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixShmPurge()', 'unixShmSystemLock()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'robustFchown()', 'robust_ftruncate()', 'robust_open()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_snprintf()', 'sqlite3_uri_boolean()', 'strlen()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixLogErrorAtLine()', 'unixShmPurge()', 'unixShmSystemLock()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mutex_alloc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_snprintf()', 'strlen()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixShmPurge()']
6Paths generated!
--------------Analysis-unixShmMap-@sqlite3.c@line: 33707.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'unixShmRegionPerMap()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_realloc()', 'unixShmRegionPerMap()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_malloc64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_realloc()', 'unixShmRegionPerMap()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_realloc()', 'unixLogErrorAtLine()', 'unixShmRegionPerMap()']
['assert()', 'f_entry()', 'f_exit()', 'seekAndWriteFd()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_realloc()', 'unixLogErrorAtLine()', 'unixShmRegionPerMap()']
['assert()', 'f_entry()', 'f_exit()', 'seekAndWriteFd()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_realloc()', 'unixLogErrorAtLine()', 'unixOpenSharedMemory()', 'unixShmRegionPerMap()']
6Paths generated!
--------------Analysis-unixShmLock-@sqlite3.c@line: 33845.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'unixShmSystemLock()']
2Paths generated!
--------------Analysis-unixShmBarrier-@sqlite3.c@line: 33957.....

['f_entry()', 'f_exit()', 'sqlite3MemoryBarrier()', 'unixEnterMutex()', 'unixLeaveMutex()']
1Paths generated!
--------------Analysis-unixShmUnmap-@sqlite3.c@line: 33973.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'unixEnterMutex()', 'unixLeaveMutex()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'unixEnterMutex()', 'unixLeaveMutex()', 'unixShmPurge()']
2Paths generated!
--------------Analysis-unixUnmapfile-@sqlite3.c@line: 34029.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixRemapfile-@sqlite3.c@line: 34054.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'unixLogErrorAtLine()']
2Paths generated!
--------------Analysis-unixMapfile-@sqlite3.c@line: 34146.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'unixRemapfile()']
2Paths generated!
--------------Analysis-unixFetch-@sqlite3.c@line: 34183.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'unixMapfile()']
2Paths generated!
--------------Analysis-unixUnfetch-@sqlite3.c@line: 34214.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'unixUnmapfile()']
2Paths generated!
--------------Analysis-posixIoFinderImpl-@sqlite3.c@line: 34316.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-nolockIoFinderImpl-@sqlite3.c@line: 34326.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-dotlockIoFinderImpl-@sqlite3.c@line: 34336.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-fillInUnixFile-@sqlite3.c@line: 34544.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_uri_boolean()', 'storeLastErrno()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_uri_boolean()', 'storeLastErrno()', 'strcmp()', 'verifyDbFile()']
['assert()', 'f_entry()', 'f_exit()', 'robust_close()', 'sqlite3_uri_boolean()', 'storeLastErrno()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'robust_close()', 'sqlite3_malloc64()', 'sqlite3_uri_boolean()', 'storeLastErrno()', 'strcmp()', 'strlen()']
['assert()', 'f_entry()', 'f_exit()', 'robust_close()', 'sqlite3_malloc64()', 'sqlite3_snprintf()', 'sqlite3_uri_boolean()', 'storeLastErrno()', 'strcmp()', 'strlen()']
['assert()', 'f_entry()', 'f_exit()', 'findInodeInfo()', 'robust_close()', 'sqlite3_uri_boolean()', 'storeLastErrno()', 'strcmp()', 'unixEnterMutex()', 'unixLeaveMutex()']
6Paths generated!
--------------Analysis-unixTempFileDir-@sqlite3.c@line: 34731.....

['f_entry()', 'f_exit()']
['S_ISDIR()', 'f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'getenv()']
3Paths generated!
--------------Analysis-unixGetTempname-@sqlite3.c@line: 34765.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_randomness()', 'sqlite3_snprintf()', 'unixTempFileDir()']
1Paths generated!
--------------Analysis-findReusableFd-@sqlite3.c@line: 34815.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixLeaveMutex()']
2Paths generated!
--------------Analysis-findCreateFileMode-@sqlite3.c@line: 34878.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Strlen30()']
3Paths generated!
--------------Analysis-unixOpen-@sqlite3.c@line: 34958.....

['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'getpid()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'getpid()', 'memset()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findCreateFileMode()', 'getpid()', 'memset()', 'robust_open()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findCreateFileMode()', 'getpid()', 'memset()', 'robustFchown()', 'robust_open()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findCreateFileMode()', 'getpid()', 'memset()', 'robust_open()', 'sqlite3_free()', 'unixLogErrorAtLine()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findCreateFileMode()', 'getpid()', 'memset()', 'robustFchown()', 'robust_open()', 'sqlite3_free()', 'unixLogErrorAtLine()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'getpid()', 'memset()', 'sqlite3_free()', 'unixGetTempname()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findReusableFd()', 'getpid()', 'memset()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findCreateFileMode()', 'findReusableFd()', 'getpid()', 'memset()', 'robustFchown()', 'robust_open()', 'sqlite3_free()', 'sqlite3_malloc64()', 'unixLogErrorAtLine()']
['assert()', 'f_entry()', 'f_exit()', 'fillInUnixFile()', 'findCreateFileMode()', 'findReusableFd()', 'getpid()', 'memset()', 'robustFchown()', 'robust_open()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_randomness()', 'unixLogErrorAtLine()']
10Paths generated!
--------------Analysis-unixDelete-@sqlite3.c@line: 35214.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'full_fsync()', 'robust_close()']
['f_entry()', 'f_exit()', 'full_fsync()', 'robust_close()', 'unixLogErrorAtLine()']
['f_entry()', 'f_exit()', 'unixLogErrorAtLine()']
5Paths generated!
--------------Analysis-unixAccess-@sqlite3.c@line: 35262.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-mkFullPathname-@sqlite3.c@line: 35288.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3_snprintf()']
['f_entry()', 'f_exit()', 'sqlite3CantopenError()', 'sqlite3Strlen30()', 'sqlite3_snprintf()']
['f_entry()', 'f_exit()', 'sqlite3CantopenError()', 'sqlite3Strlen30()', 'sqlite3_snprintf()', 'unixLogErrorAtLine()']
3Paths generated!
--------------Analysis-unixFullPathname-@sqlite3.c@line: 35321.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'mkFullPathname()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memmove()', 'mkFullPathname()', 'sqlite3Strlen30()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'mkFullPathname()', 'sqlite3CantopenError()', 'sqlite3Strlen30()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'mkFullPathname()', 'sqlite3_free()', 'unixLogErrorAtLine()']
['assert()', 'f_entry()', 'f_exit()', 'mkFullPathname()', 'sqlite3CantopenError()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'mkFullPathname()', 'sqlite3_free()', 'sqlite3_malloc()']
['S_ISLNK()', 'assert()', 'f_entry()', 'f_exit()', 'mkFullPathname()', 'sqlite3_free()']
8Paths generated!
--------------Analysis-unixDlOpen-@sqlite3.c@line: 35411.....

['dlopen()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixDlError-@sqlite3.c@line: 35423.....

['dlerror()', 'f_entry()', 'f_exit()', 'unixEnterMutex()', 'unixLeaveMutex()']
['dlerror()', 'f_entry()', 'f_exit()', 'sqlite3_snprintf()', 'unixEnterMutex()', 'unixLeaveMutex()']
2Paths generated!
--------------Analysis-unixDlSym-@sqlite3.c@line: 35433.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixDlClose-@sqlite3.c@line: 35456.....

['dlclose()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-unixRandomness-@sqlite3.c@line: 35470.....

['assert()', 'f_entry()', 'f_exit()', 'getpid()', 'memset()']
1Paths generated!
--------------Analysis-unixSleep-@sqlite3.c@line: 35517.....

['f_entry()', 'f_exit()', 'sleep()']
1Paths generated!
--------------Analysis-unixCurrentTimeInt64-@sqlite3.c@line: 35557.....

['f_entry()', 'f_exit()', 'gettimeofday()']
1Paths generated!
--------------Analysis-unixCurrentTime-@sqlite3.c@line: 35589.....

['f_entry()', 'f_exit()', 'unixCurrentTimeInt64()']
1Paths generated!
--------------Analysis-unixGetLastError-@sqlite3.c@line: 35607.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_os_init-@sqlite3.c@line: 36812.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_vfs_register()']
2Paths generated!
--------------Analysis-sqlite3_os_end-@sqlite3.c@line: 36911.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BitvecCreate-@sqlite3.c@line: 43191.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()']
1Paths generated!
--------------Analysis-sqlite3BitvecTestNotNull-@sqlite3.c@line: 43206.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BitvecTest-@sqlite3.c@line: 43229.....

['f_entry()', 'f_exit()', 'sqlite3BitvecTestNotNull()']
1Paths generated!
--------------Analysis-sqlite3BitvecSet-@sqlite3.c@line: 43245.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3BitvecSet()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecCreate()']
4Paths generated!
--------------Analysis-sqlite3BitvecClear-@sqlite3.c@line: 43316.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()']
2Paths generated!
--------------Analysis-sqlite3BitvecDestroy-@sqlite3.c@line: 43353.....

['f_entry()', 'f_exit()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'sqlite3BitvecDestroy()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3BitvecSize-@sqlite3.c@line: 43368.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BitvecBuiltinTest-@sqlite3.c@line: 43413.....

['f_entry()', 'f_exit()', 'sqlite3BitvecClear()', 'sqlite3BitvecCreate()', 'sqlite3BitvecDestroy()', 'sqlite3BitvecSet()', 'sqlite3BitvecSize()', 'sqlite3BitvecTest()', 'sqlite3MallocZero()', 'sqlite3_free()', 'sqlite3_malloc64()']
1Paths generated!
--------------Analysis-pcacheManageDirtyList-@sqlite3.c@line: 43648.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-pcacheUnpin-@sqlite3.c@line: 43721.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xUnpin()']
2Paths generated!
--------------Analysis-numberOfCachePages-@sqlite3.c@line: 43733.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcacheInitialize-@sqlite3.c@line: 43751.....

['f_entry()', 'f_exit()', 'xInit()']
['f_entry()', 'f_exit()', 'sqlite3PCacheSetDefault()', 'xInit()']
2Paths generated!
--------------Analysis-sqlite3PcacheShutdown-@sqlite3.c@line: 43760.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xShutdown()']
2Paths generated!
--------------Analysis-sqlite3PcacheSize-@sqlite3.c@line: 43770.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcacheOpen-@sqlite3.c@line: 43778.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3PcacheSetPageSize()']
1Paths generated!
--------------Analysis-sqlite3PcacheSetPageSize-@sqlite3.c@line: 43803.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xCachesize()', 'xCreate()']
['assert()', 'f_entry()', 'f_exit()', 'xCachesize()', 'xCreate()', 'xDestroy()']
3Paths generated!
--------------Analysis-sqlite3PcacheFetch-@sqlite3.c@line: 43847.....

['assert()', 'f_entry()', 'f_exit()', 'xFetch()']
1Paths generated!
--------------Analysis-sqlite3PcacheFetchStress-@sqlite3.c@line: 43889.....

['f_entry()', 'f_exit()', 'sqlite3PcachePagecount()', 'xFetch()']
['f_entry()', 'f_exit()', 'sqlite3PcachePagecount()', 'xFetch()', 'xStress()']
2Paths generated!
--------------Analysis-pcacheFetchFinishWithInit-@sqlite3.c@line: 43945.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3PcacheFetchFinish()']
1Paths generated!
--------------Analysis-sqlite3PcacheFetchFinish-@sqlite3.c@line: 43971.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheFetchFinishWithInit()']
2Paths generated!
--------------Analysis-sqlite3PcacheRelease-@sqlite3.c@line: 43994.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheManageDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheUnpin()']
3Paths generated!
--------------Analysis-sqlite3PcacheRef-@sqlite3.c@line: 44013.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcacheDrop-@sqlite3.c@line: 44025.....

['assert()', 'f_entry()', 'f_exit()', 'xUnpin()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheManageDirtyList()', 'xUnpin()']
2Paths generated!
--------------Analysis-sqlite3PcacheMakeDirty-@sqlite3.c@line: 44039.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheManageDirtyList()']
2Paths generated!
--------------Analysis-sqlite3PcacheMakeClean-@sqlite3.c@line: 44058.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheManageDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheManageDirtyList()', 'pcacheUnpin()']
3Paths generated!
--------------Analysis-sqlite3PcacheCleanAll-@sqlite3.c@line: 44076.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3PcacheMakeClean()']
2Paths generated!
--------------Analysis-sqlite3PcacheClearWritable-@sqlite3.c@line: 44087.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcacheClearSyncFlags-@sqlite3.c@line: 44099.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcacheMove-@sqlite3.c@line: 44110.....

['assert()', 'f_entry()', 'f_exit()', 'xRekey()']
['assert()', 'f_entry()', 'f_exit()', 'pcacheManageDirtyList()', 'xRekey()']
2Paths generated!
--------------Analysis-sqlite3PcacheTruncate-@sqlite3.c@line: 44132.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'xTruncate()']
['f_entry()', 'f_exit()', 'xFetch()', 'xTruncate()']
['f_entry()', 'f_exit()', 'memset()', 'xFetch()', 'xTruncate()']
['assert()', 'f_entry()', 'f_exit()', 'xTruncate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PcacheMakeClean()', 'xTruncate()']
6Paths generated!
--------------Analysis-sqlite3PcacheClose-@sqlite3.c@line: 44165.....

['assert()', 'f_entry()', 'f_exit()', 'xDestroy()']
1Paths generated!
--------------Analysis-sqlite3PcacheClear-@sqlite3.c@line: 44174.....

['f_entry()', 'f_exit()', 'sqlite3PcacheTruncate()']
1Paths generated!
--------------Analysis-pcacheMergeDirtyList-@sqlite3.c@line: 44182.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pcacheSortDirtyList-@sqlite3.c@line: 44219.....

['f_entry()', 'f_exit()', 'memset()']
['f_entry()', 'f_exit()', 'memset()', 'pcacheMergeDirtyList()']
2Paths generated!
--------------Analysis-sqlite3PcacheDirtyList-@sqlite3.c@line: 44254.....

['f_entry()', 'f_exit()', 'pcacheSortDirtyList()']
1Paths generated!
--------------Analysis-sqlite3PcacheRefCount-@sqlite3.c@line: 44268.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcachePageRefcount-@sqlite3.c@line: 44275.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PcachePagecount-@sqlite3.c@line: 44282.....

['assert()', 'f_entry()', 'f_exit()', 'xPagecount()']
1Paths generated!
--------------Analysis-sqlite3PcacheSetCachesize-@sqlite3.c@line: 44299.....

['assert()', 'f_entry()', 'f_exit()', 'xCachesize()']
1Paths generated!
--------------Analysis-sqlite3PcacheSetSpillsize-@sqlite3.c@line: 44311.....

['assert()', 'f_entry()', 'f_exit()', 'numberOfCachePages()']
1Paths generated!
--------------Analysis-sqlite3PcacheShrink-@sqlite3.c@line: 44328.....

['assert()', 'f_entry()', 'f_exit()', 'xShrink()']
1Paths generated!
--------------Analysis-sqlite3HeaderSizePcache-@sqlite3.c@line: 44337.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PCachePercentDirty-@sqlite3.c@line: 44343.....

['f_entry()', 'f_exit()', 'numberOfCachePages()']
1Paths generated!
--------------Analysis-sqlite3PCacheBufferSetup-@sqlite3.c@line: 44610.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pcache1InitBulk-@sqlite3.c@line: 44635.....

['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3Malloc()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3Malloc()', 'sqlite3MallocSize()']
2Paths generated!
--------------Analysis-pcache1Alloc-@sqlite3.c@line: 44678.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3MallocSize()', 'sqlite3StatusHighwater()', 'sqlite3StatusUp()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
4Paths generated!
--------------Analysis-pcache1Free-@sqlite3.c@line: 44716.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StatusDown()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-pcache1AllocPage-@sqlite3.c@line: 44766.....

['assert()', 'f_entry()', 'f_exit()', 'pcache1InitBulk()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1Alloc()', 'pcache1InitBulk()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1Alloc()', 'pcache1InitBulk()', 'sqlite3EndBenignMalloc()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1Alloc()', 'pcache1InitBulk()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()']
4Paths generated!
--------------Analysis-pcache1FreePage-@sqlite3.c@line: 44816.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1Free()']
2Paths generated!
--------------Analysis-sqlite3PageMalloc-@sqlite3.c@line: 44840.....

['f_entry()', 'f_exit()', 'pcache1Alloc()']
1Paths generated!
--------------Analysis-sqlite3PageFree-@sqlite3.c@line: 44847.....

['f_entry()', 'f_exit()', 'pcache1Free()']
1Paths generated!
--------------Analysis-pcache1UnderMemoryPressure-@sqlite3.c@line: 44868.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3HeapNearlyFull()']
2Paths generated!
--------------Analysis-pcache1ResizeHash-@sqlite3.c@line: 44885.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3EndBenignMalloc()', 'sqlite3MallocZero()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3MallocZero()', 'sqlite3_free()']
4Paths generated!
--------------Analysis-pcache1PinPage-@sqlite3.c@line: 44926.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pcache1RemoveFromHash-@sqlite3.c@line: 44954.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1FreePage()']
2Paths generated!
--------------Analysis-pcache1EnforceMaxPage-@sqlite3.c@line: 44972.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1PinPage()', 'pcache1RemoveFromHash()']
3Paths generated!
--------------Analysis-pcache1TruncateUnsafe-@sqlite3.c@line: 44997.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1FreePage()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1FreePage()', 'pcache1PinPage()']
3Paths generated!
--------------Analysis-pcache1Init-@sqlite3.c@line: 45048.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()']
2Paths generated!
--------------Analysis-pcache1Shutdown-@sqlite3.c@line: 45101.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
1Paths generated!
--------------Analysis-pcache1Create-@sqlite3.c@line: 45115.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1ResizeHash()', 'sqlite3MallocZero()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1Destroy()', 'pcache1ResizeHash()', 'sqlite3MallocZero()']
3Paths generated!
--------------Analysis-pcache1Cachesize-@sqlite3.c@line: 45162.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1EnforceMaxPage()']
2Paths generated!
--------------Analysis-pcache1Shrink-@sqlite3.c@line: 45181.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1EnforceMaxPage()']
2Paths generated!
--------------Analysis-pcache1Pagecount-@sqlite3.c@line: 45198.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pcache1FetchStage2-@sqlite3.c@line: 45216.....

['assert()', 'f_entry()', 'f_exit()', 'pcache1UnderMemoryPressure()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1AllocPage()', 'pcache1UnderMemoryPressure()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1PinPage()', 'pcache1RemoveFromHash()', 'pcache1UnderMemoryPressure()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1FreePage()', 'pcache1PinPage()', 'pcache1RemoveFromHash()', 'pcache1UnderMemoryPressure()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1AllocPage()', 'pcache1FreePage()', 'pcache1PinPage()', 'pcache1RemoveFromHash()', 'pcache1ResizeHash()', 'pcache1UnderMemoryPressure()']
5Paths generated!
--------------Analysis-pcache1FetchNoMutex-@sqlite3.c@line: 45344.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'pcache1FetchStage2()']
['f_entry()', 'f_exit()', 'pcache1PinPage()']
3Paths generated!
--------------Analysis-pcache1Fetch-@sqlite3.c@line: 45389.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pcache1Unpin-@sqlite3.c@line: 45420.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1RemoveFromHash()']
2Paths generated!
--------------Analysis-pcache1Rekey-@sqlite3.c@line: 45456.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pcache1Truncate-@sqlite3.c@line: 45496.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1TruncateUnsafe()']
2Paths generated!
--------------Analysis-pcache1Destroy-@sqlite3.c@line: 45511.....

['assert()', 'f_entry()', 'f_exit()', 'pcache1EnforceMaxPage()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'pcache1EnforceMaxPage()', 'pcache1TruncateUnsafe()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3PCacheSetDefault-@sqlite3.c@line: 45534.....

['f_entry()', 'f_exit()', 'sqlite3_config()']
1Paths generated!
--------------Analysis-sqlite3HeaderSizePcache1-@sqlite3.c@line: 45556.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Pcache1Mutex-@sqlite3.c@line: 45562.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3RowSetInit-@sqlite3.c@line: 45764.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3RowSetClear-@sqlite3.c@line: 45785.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-rowSetEntryAlloc-@sqlite3.c@line: 45807.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
2Paths generated!
--------------Analysis-sqlite3RowSetInsert-@sqlite3.c@line: 45832.....

['assert()', 'f_entry()', 'f_exit()', 'rowSetEntryAlloc()']
1Paths generated!
--------------Analysis-rowSetEntryMerge-@sqlite3.c@line: 45863.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-rowSetEntrySort-@sqlite3.c@line: 45898.....

['f_entry()', 'f_exit()', 'memset()']
['f_entry()', 'f_exit()', 'memset()', 'rowSetEntryMerge()']
2Paths generated!
--------------Analysis-rowSetTreeToList-@sqlite3.c@line: 45927.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetTreeToList()']
2Paths generated!
--------------Analysis-rowSetNDeepTree-@sqlite3.c@line: 45962.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'rowSetNDeepTree()']
2Paths generated!
--------------Analysis-rowSetListToTree-@sqlite3.c@line: 45998.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetNDeepTree()']
2Paths generated!
--------------Analysis-sqlite3RowSetNext-@sqlite3.c@line: 46030.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3RowSetClear()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetEntrySort()']
3Paths generated!
--------------Analysis-sqlite3RowSetTest-@sqlite3.c@line: 46064.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetEntryAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetEntryAlloc()', 'rowSetListToTree()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetEntryMerge()', 'rowSetTreeToList()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetListToTree()']
['assert()', 'f_entry()', 'f_exit()', 'rowSetEntrySort()']
6Paths generated!
--------------Analysis-pagerUseWal-@sqlite3.c@line: 47097.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-subjRequiresPage-@sqlite3.c@line: 47307.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BitvecTestNotNull()']
2Paths generated!
--------------Analysis-read32bits-@sqlite3.c@line: 47337.....

['f_entry()', 'f_exit()', 'sqlite3OsRead()']
['f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3OsRead()']
2Paths generated!
--------------Analysis-write32bits-@sqlite3.c@line: 47356.....

['f_entry()', 'f_exit()', 'sqlite3OsWrite()', 'sqlite3Put4byte()']
1Paths generated!
--------------Analysis-pagerUnlockDb-@sqlite3.c@line: 47371.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsUnlock()']
2Paths generated!
--------------Analysis-pagerLockDb-@sqlite3.c@line: 47398.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsLock()']
2Paths generated!
--------------Analysis-readMasterJournal-@sqlite3.c@line: 47523.....

['f_entry()', 'f_exit()', 'memcmp()', 'read32bits()', 'sqlite3OsFileSize()', 'sqlite3OsRead()']
1Paths generated!
--------------Analysis-journalHdrOffset-@sqlite3.c@line: 47577.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-zeroJournalHdr-@sqlite3.c@line: 47610.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsSync()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsTruncate()']
6Paths generated!
--------------Analysis-writeJournalHdr-@sqlite3.c@line: 47660.....

['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'memset()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3Put4byte()', 'sqlite3_randomness()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'memset()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsWrite()', 'sqlite3Put4byte()', 'sqlite3_randomness()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'memcpy()', 'memset()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsWrite()', 'sqlite3Put4byte()', 'sqlite3_randomness()']
3Paths generated!
--------------Analysis-readJournalHdr-@sqlite3.c@line: 47778.....

['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'read32bits()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'read32bits()', 'sqlite3PagerSetPagesize()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'memcmp()', 'read32bits()', 'sqlite3OsRead()', 'sqlite3PagerSetPagesize()']
3Paths generated!
--------------Analysis-writeMasterJournal-@sqlite3.c@line: 47903.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsWrite()', 'write32bits()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()', 'write32bits()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'sqlite3OsFileSize()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()', 'write32bits()']
3Paths generated!
--------------Analysis-pager_reset-@sqlite3.c@line: 47971.....

['f_entry()', 'f_exit()', 'sqlite3BackupRestart()', 'sqlite3PcacheClear()']
1Paths generated!
--------------Analysis-sqlite3PagerDataVersion-@sqlite3.c@line: 47980.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-releaseAllSavepoints-@sqlite3.c@line: 47990.....

['f_entry()', 'f_exit()', 'sqlite3JournalIsInMemory()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'sqlite3JournalIsInMemory()', 'sqlite3OsClose()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsClose()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-addToSavepointBitvecs-@sqlite3.c@line: 48009.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecSet()']
2Paths generated!
--------------Analysis-pager_unlock-@sqlite3.c@line: 48041.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_reset()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'pager_reset()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'pager_reset()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsClose()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'pager_reset()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsClose()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_reset()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsUnfetch()', 'sqlite3WalEndReadTransaction()']
7Paths generated!
--------------Analysis-pager_error-@sqlite3.c@line: 48138.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pagerFlushOnCommit-@sqlite3.c@line: 48171.....

['f_entry()', 'f_exit()', 'sqlite3PCachePercentDirty()']
1Paths generated!
--------------Analysis-pager_end_transaction-@sqlite3.c@line: 48231.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsFileControl()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'pager_truncate()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsFileControl()', 'sqlite3PcacheClearWritable()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3OsFileControl()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsFileControl()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsClose()', 'sqlite3OsFileControl()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileControl()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsFileControl()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()', 'zeroJournalHdr()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsFileControl()', 'sqlite3OsTruncate()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUnlockDb()', 'pagerUseWal()', 'releaseAllSavepoints()', 'sqlite3BitvecDestroy()', 'sqlite3JournalIsInMemory()', 'sqlite3OsFileControl()', 'sqlite3OsSync()', 'sqlite3OsTruncate()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheTruncate()', 'sqlite3WalEndWriteTransaction()', 'sqlite3WalExclusiveMode()']
13Paths generated!
--------------Analysis-pagerUnlockAndRollback-@sqlite3.c@line: 48377.....

['f_entry()', 'f_exit()', 'pager_unlock()']
['assert()', 'f_entry()', 'f_exit()', 'pager_unlock()']
['assert()', 'f_entry()', 'f_exit()', 'pager_end_transaction()', 'pager_unlock()']
['assert()', 'f_entry()', 'f_exit()', 'pager_unlock()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3PagerRollback()']
4Paths generated!
--------------Analysis-pager_cksum-@sqlite3.c@line: 48411.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pager_playback_one_page-@sqlite3.c@line: 48487.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'read32bits()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'pagerUseWal()', 'read32bits()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()', 'sqlite3PcacheRelease()', 'xReiniter()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'read32bits()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()', 'sqlite3PagerGet()', 'sqlite3PcacheMakeDirty()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'read32bits()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'read32bits()', 'sqlite3BackupUpdate()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'pagerUseWal()', 'read32bits()', 'sqlite3BackupUpdate()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()', 'sqlite3OsWrite()', 'sqlite3PagerLookup()', 'sqlite3PcacheRelease()', 'xReiniter()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'pagerUseWal()', 'pager_cksum()', 'read32bits()', 'sqlite3BackupUpdate()', 'sqlite3BitvecSet()', 'sqlite3BitvecTest()', 'sqlite3OsRead()', 'sqlite3OsWrite()', 'sqlite3PagerLookup()', 'sqlite3PcacheRelease()', 'xReiniter()']
7Paths generated!
--------------Analysis-pager_delmaster-@sqlite3.c@line: 48732.....

['f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3OsAccess()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3Strlen30()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'readMasterJournal()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3OsAccess()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileSize()', 'sqlite3OsOpen()', 'sqlite3OsRead()', 'sqlite3Strlen30()', 'sqlite3_free()', 'strcmp()']
4Paths generated!
--------------Analysis-pager_truncate-@sqlite3.c@line: 48842.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3OsFileSize()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsTruncate()']
4Paths generated!
--------------Analysis-sqlite3SectorSize-@sqlite3.c@line: 48878.....

['f_entry()', 'f_exit()', 'sqlite3OsSectorSize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsSectorSize()']
2Paths generated!
--------------Analysis-setSectorSize-@sqlite3.c@line: 48912.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsDeviceCharacteristics()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3SectorSize()']
2Paths generated!
--------------Analysis-pager_playback-@sqlite3.c@line: 48985.....

['assert()', 'f_entry()', 'f_exit()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()']
['assert()', 'f_entry()', 'f_exit()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'pager_delmaster()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()']
['assert()', 'f_entry()', 'f_exit()', 'pager_end_transaction()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()']
['assert()', 'f_entry()', 'f_exit()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()', 'sqlite3PagerSync()']
['assert()', 'f_entry()', 'f_exit()', 'pager_delmaster()', 'pager_end_transaction()', 'readJournalHdr()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()', 'sqlite3PagerSync()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'pager_delmaster()', 'pager_end_transaction()', 'pager_playback_one_page()', 'readJournalHdr()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()', 'sqlite3PagerSync()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'pager_delmaster()', 'pager_end_transaction()', 'pager_playback_one_page()', 'pager_reset()', 'readJournalHdr()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()', 'sqlite3PagerSync()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'pager_delmaster()', 'pager_end_transaction()', 'pager_truncate()', 'readJournalHdr()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsFileSize()', 'sqlite3PagerSync()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'pager_delmaster()', 'pager_end_transaction()', 'readMasterJournal()', 'setSectorSize()', 'sqlite3OsAccess()', 'sqlite3OsFileSize()', 'sqlite3PagerSync()', 'sqlite3_log()']
10Paths generated!
--------------Analysis-readDbPage-@sqlite3.c@line: 49193.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsRead()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3OsRead()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3OsRead()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalReadFrame()']
4Paths generated!
--------------Analysis-pager_write_changecounter-@sqlite3.c@line: 49255.....

['f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3Put4byte()']
1Paths generated!
--------------Analysis-pagerUndoCallback-@sqlite3.c@line: 49282.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BackupRestart()', 'sqlite3PagerLookup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BackupRestart()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcachePageRefcount()', 'sqlite3WalFindFrame()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BackupRestart()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcachePageRefcount()', 'sqlite3WalFindFrame()', 'xReiniter()']
['assert()', 'f_entry()', 'f_exit()', 'readDbPage()', 'sqlite3BackupRestart()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcachePageRefcount()', 'sqlite3WalFindFrame()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BackupRestart()', 'sqlite3PagerLookup()', 'sqlite3PcacheDrop()', 'sqlite3PcachePageRefcount()']
5Paths generated!
--------------Analysis-pagerRollbackWal-@sqlite3.c@line: 49321.....

['f_entry()', 'f_exit()', 'sqlite3PcacheDirtyList()', 'sqlite3WalUndo()']
['f_entry()', 'f_exit()', 'pagerUndoCallback()', 'sqlite3PcacheDirtyList()', 'sqlite3WalUndo()']
2Paths generated!
--------------Analysis-pagerWalFrames-@sqlite3.c@line: 49353.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalFrames()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BackupUpdate()', 'sqlite3WalFrames()']
['assert()', 'f_entry()', 'f_exit()', 'pager_write_changecounter()', 'sqlite3BackupUpdate()', 'sqlite3WalFrames()']
3Paths generated!
--------------Analysis-pagerBeginReadTransaction-@sqlite3.c@line: 49420.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalBeginReadTransaction()', 'sqlite3WalEndReadTransaction()']
['assert()', 'f_entry()', 'f_exit()', 'pager_reset()', 'sqlite3WalBeginReadTransaction()', 'sqlite3WalEndReadTransaction()']
['assert()', 'f_entry()', 'f_exit()', 'pager_reset()', 'sqlite3OsUnfetch()', 'sqlite3WalBeginReadTransaction()', 'sqlite3WalEndReadTransaction()']
3Paths generated!
--------------Analysis-pagerPagecount-@sqlite3.c@line: 49453.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalDbsize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3WalDbsize()']
2Paths generated!
--------------Analysis-pagerOpenWalIfPresent-@sqlite3.c@line: 49513.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsAccess()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsAccess()', 'sqlite3PagerOpenWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsDelete()']
4Paths generated!
--------------Analysis-pagerPlaybackSavepoint-@sqlite3.c@line: 49582.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_playback_one_page()', 'sqlite3BitvecDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecDestroy()', 'sqlite3WalSavepointUndo()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_playback_one_page()', 'readJournalHdr()', 'sqlite3BitvecDestroy()', 'sqlite3WalSavepointUndo()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_playback_one_page()', 'sqlite3BitvecDestroy()', 'sqlite3WalSavepointUndo()']
['assert()', 'f_entry()', 'f_exit()', 'pagerRollbackWal()', 'pagerUseWal()', 'pager_playback_one_page()', 'readJournalHdr()', 'sqlite3BitvecDestroy()', 'sqlite3WalSavepointUndo()']
['assert()', 'f_entry()', 'f_exit()', 'pagerRollbackWal()', 'pagerUseWal()', 'pager_playback_one_page()', 'readJournalHdr()', 'sqlite3BitvecCreate()', 'sqlite3BitvecDestroy()', 'sqlite3WalSavepointUndo()']
7Paths generated!
--------------Analysis-sqlite3PagerSetCachesize-@sqlite3.c@line: 49694.....

['f_entry()', 'f_exit()', 'sqlite3PcacheSetCachesize()']
1Paths generated!
--------------Analysis-sqlite3PagerSetSpillsize-@sqlite3.c@line: 49702.....

['f_entry()', 'f_exit()', 'sqlite3PcacheSetSpillsize()']
1Paths generated!
--------------Analysis-pagerFixMaplimit-@sqlite3.c@line: 49709.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsFileControlHint()']
2Paths generated!
--------------Analysis-sqlite3PagerSetMmapLimit-@sqlite3.c@line: 49724.....

['f_entry()', 'f_exit()', 'pagerFixMaplimit()']
1Paths generated!
--------------Analysis-sqlite3PagerShrink-@sqlite3.c@line: 49732.....

['f_entry()', 'f_exit()', 'sqlite3PcacheShrink()']
1Paths generated!
--------------Analysis-sqlite3PagerSetFlags-@sqlite3.c@line: 49788.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pagerOpentemp-@sqlite3.c@line: 49851.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsOpen()']
1Paths generated!
--------------Analysis-sqlite3PagerSetBusyhandler-@sqlite3.c@line: 49890.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileControlHint()']
2Paths generated!
--------------Analysis-sqlite3PagerSetPagesize-@sqlite3.c@line: 49936.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PcacheRefCount()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFixMaplimit()', 'sqlite3PcacheRefCount()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PageFree()', 'sqlite3PcacheRefCount()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFixMaplimit()', 'pager_reset()', 'sqlite3PageFree()', 'sqlite3PcacheRefCount()', 'sqlite3PcacheSetPageSize()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFixMaplimit()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3PcacheRefCount()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFixMaplimit()', 'sqlite3OsFileSize()', 'sqlite3PageFree()', 'sqlite3PcacheRefCount()']
6Paths generated!
--------------Analysis-sqlite3PagerTempSpace-@sqlite3.c@line: 49999.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerMaxPageCount-@sqlite3.c@line: 50010.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerReadFileheader-@sqlite3.c@line: 50057.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3OsRead()']
2Paths generated!
--------------Analysis-sqlite3PagerPagecount-@sqlite3.c@line: 50085.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pager_wait_on_lock-@sqlite3.c@line: 50106.....

['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'xBusyHandler()']
1Paths generated!
--------------Analysis-sqlite3PagerTruncateImage-@sqlite3.c@line: 50170.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pagerSyncHotJournal-@sqlite3.c@line: 50201.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsFileSize()']
['f_entry()', 'f_exit()', 'sqlite3OsSync()']
3Paths generated!
--------------Analysis-pagerAcquireMapPage-@sqlite3.c@line: 50222.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memset()']
3Paths generated!
--------------Analysis-pagerReleaseMapPage-@sqlite3.c@line: 50264.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsUnfetch()']
1Paths generated!
--------------Analysis-pagerFreeMapHdrs-@sqlite3.c@line: 50277.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3PagerClose-@sqlite3.c@line: 50301.....

['assert()', 'f_entry()', 'f_exit()', 'pagerFreeMapHdrs()', 'pagerUnlockAndRollback()', 'pager_reset()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3PageFree()', 'sqlite3PcacheClose()', 'sqlite3WalClose()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFreeMapHdrs()', 'pagerUnlockAndRollback()', 'pager_error()', 'pager_reset()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3PageFree()', 'sqlite3PcacheClose()', 'sqlite3WalClose()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFreeMapHdrs()', 'pager_reset()', 'pager_unlock()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3PageFree()', 'sqlite3PcacheClose()', 'sqlite3WalClose()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-sqlite3PagerRef-@sqlite3.c@line: 50366.....

['f_entry()', 'f_exit()', 'sqlite3PcacheRef()']
1Paths generated!
--------------Analysis-syncJournal-@sqlite3.c@line: 50405.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerExclusiveLock()', 'sqlite3PcacheClearSyncFlags()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3PagerExclusiveLock()', 'sqlite3PcacheClearSyncFlags()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3PagerExclusiveLock()', 'sqlite3PcacheClearSyncFlags()', 'writeJournalHdr()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsSync()', 'sqlite3PagerExclusiveLock()', 'sqlite3PcacheClearSyncFlags()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'memcmp()', 'memcpy()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsRead()', 'sqlite3OsWrite()', 'sqlite3PagerExclusiveLock()', 'sqlite3PcacheClearSyncFlags()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()', 'journalHdrOffset()', 'memcmp()', 'memcpy()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsRead()', 'sqlite3OsSync()', 'sqlite3OsWrite()', 'sqlite3PagerExclusiveLock()', 'sqlite3PcacheClearSyncFlags()', 'sqlite3Put4byte()', 'writeJournalHdr()']
6Paths generated!
--------------Analysis-pager_write_pagelist-@sqlite3.c@line: 50548.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BackupUpdate()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3BackupUpdate()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'pager_write_changecounter()', 'sqlite3BackupUpdate()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileControlHint()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'pagerOpentemp()', 'pager_write_changecounter()', 'sqlite3BackupUpdate()', 'sqlite3OsFileControlHint()', 'sqlite3OsWrite()']
6Paths generated!
--------------Analysis-openSubJournal-@sqlite3.c@line: 50640.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3JournalOpen()']
2Paths generated!
--------------Analysis-subjournalPage-@sqlite3.c@line: 50666.....

['f_entry()', 'f_exit()']
['addToSavepointBitvecs()', 'assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'openSubJournal()']
['assert()', 'f_entry()', 'f_exit()', 'openSubJournal()', 'write32bits()']
['assert()', 'f_entry()', 'f_exit()', 'openSubJournal()', 'sqlite3OsWrite()', 'write32bits()']
5Paths generated!
--------------Analysis-subjournalPageIfRequired-@sqlite3.c@line: 50703.....

['f_entry()', 'f_exit()', 'subjRequiresPage()']
['f_entry()', 'f_exit()', 'subjRequiresPage()', 'subjournalPage()']
2Paths generated!
--------------Analysis-pagerStress-@sqlite3.c@line: 50730.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_error()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_error()', 'sqlite3PcacheMakeClean()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_error()', 'pager_write_pagelist()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_error()', 'syncJournal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_error()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pagerWalFrames()', 'pager_error()', 'subjournalPageIfRequired()']
6Paths generated!
--------------Analysis-sqlite3PagerFlush-@sqlite3.c@line: 50799.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PcacheDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pagerStress()', 'sqlite3PcacheDirtyList()']
3Paths generated!
--------------Analysis-sqlite3PagerOpen-@sqlite3.c@line: 50846.....

['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3PcacheSize()']
['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3PageFree()', 'sqlite3PcacheSize()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3PcacheOpen()', 'sqlite3PcacheSize()']
['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3PagerSetPagesize()', 'sqlite3PcacheSize()']
['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsOpen()', 'sqlite3PcacheSize()']
['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpen()', 'sqlite3PcacheSize()', 'sqlite3_uri_boolean()']
['assert()', 'f_entry()', 'f_exit()', 'setSectorSize()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpen()', 'sqlite3PageFree()', 'sqlite3PagerSetPagesize()', 'sqlite3PcacheOpen()', 'sqlite3PcacheSize()', 'sqlite3_free()', 'sqlite3_uri_boolean()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'setSectorSize()', 'sqlite3DbFree()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3PcacheSize()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'setSectorSize()', 'sqlite3DbFree()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpen()', 'sqlite3PageFree()', 'sqlite3PagerSetPagesize()', 'sqlite3PcacheOpen()', 'sqlite3PcacheSize()', 'sqlite3_free()', 'sqlite3_uri_boolean()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'setSectorSize()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsFullPathname()', 'sqlite3OsOpen()', 'sqlite3PageFree()', 'sqlite3PagerSetPagesize()', 'sqlite3PcacheOpen()', 'sqlite3PcacheSize()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_uri_boolean()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'setSectorSize()', 'sqlite3CantopenError()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsFullPathname()', 'sqlite3OsOpen()', 'sqlite3PageFree()', 'sqlite3PagerSetPagesize()', 'sqlite3PcacheOpen()', 'sqlite3PcacheSize()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_uri_boolean()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'setSectorSize()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3JournalSize()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpen()', 'sqlite3PageFree()', 'sqlite3PagerSetPagesize()', 'sqlite3PcacheOpen()', 'sqlite3PcacheSize()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_uri_boolean()']
12Paths generated!
--------------Analysis-databaseIsUnmoved-@sqlite3.c@line: 51139.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileControl()']
1Paths generated!
--------------Analysis-hasHotJournal-@sqlite3.c@line: 51190.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsCheckReservedLock()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsCheckReservedLock()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsCheckReservedLock()', 'sqlite3OsRead()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsCheckReservedLock()', 'sqlite3OsClose()', 'sqlite3OsRead()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'sqlite3OsCheckReservedLock()', 'sqlite3OsOpen()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerPagecount()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsCheckReservedLock()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerPagecount()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsCheckReservedLock()', 'sqlite3OsDelete()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerPagecount()', 'pagerUnlockDb()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsCheckReservedLock()', 'sqlite3OsDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsAccess()']
10Paths generated!
--------------Analysis-sqlite3PagerSharedLock-@sqlite3.c@line: 51310.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_unlock()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPagecount()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerBeginReadTransaction()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerBeginReadTransaction()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_unlock()', 'pager_wait_on_lock()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memset()', 'pagerBeginReadTransaction()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_unlock()', 'pager_wait_on_lock()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memset()', 'pagerBeginReadTransaction()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memset()', 'pagerBeginReadTransaction()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_unlock()', 'pager_wait_on_lock()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_error()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUnlockDb()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerSyncHotJournal()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerSyncHotJournal()', 'pagerUseWal()', 'pager_playback()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsAccess()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3OsAccess()', 'sqlite3OsOpen()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'pagerBeginReadTransaction()', 'pagerLockDb()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_reset()', 'pager_unlock()', 'pager_wait_on_lock()', 'sqlite3CantopenError()', 'sqlite3OsAccess()', 'sqlite3OsClose()', 'sqlite3OsOpen()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()']
['assert()', 'f_entry()', 'f_exit()', 'hasHotJournal()', 'pagerBeginReadTransaction()', 'pagerOpenWalIfPresent()', 'pagerPagecount()', 'pagerUseWal()', 'pager_unlock()', 'pager_wait_on_lock()']
18Paths generated!
--------------Analysis-pagerUnlockIfUnused-@sqlite3.c@line: 51532.....

['f_entry()', 'f_exit()', 'sqlite3PcacheRefCount()']
['f_entry()', 'f_exit()', 'pagerUnlockAndRollback()', 'sqlite3PcacheRefCount()']
2Paths generated!
--------------Analysis-sqlite3PagerGet-@sqlite3.c@line: 51588.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'readDbPage()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'readDbPage()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'readDbPage()', 'sqlite3PcacheDrop()', 'sqlite3WalFindFrame()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'pagerUnlockIfUnused()', 'sqlite3PcacheDrop()']
['addToSavepointBitvecs()', 'assert()', 'f_entry()', 'f_exit()', 'memset()', 'pagerUnlockIfUnused()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3PcacheDrop()']
['addToSavepointBitvecs()', 'assert()', 'f_entry()', 'f_exit()', 'memset()', 'pagerUnlockIfUnused()', 'sqlite3BeginBenignMalloc()', 'sqlite3BitvecSet()', 'sqlite3EndBenignMalloc()', 'sqlite3PcacheDrop()']
['addToSavepointBitvecs()', 'assert()', 'f_entry()', 'f_exit()', 'memset()', 'pagerUnlockIfUnused()', 'sqlite3BeginBenignMalloc()', 'sqlite3BitvecSet()', 'sqlite3CorruptError()', 'sqlite3EndBenignMalloc()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3OsFetch()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3OsFetch()', 'sqlite3OsUnfetch()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerAcquireMapPage()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3OsFetch()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3OsFetch()', 'sqlite3OsUnfetch()', 'sqlite3PagerLookup()', 'sqlite3PcacheDrop()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3PcacheDrop()', 'sqlite3WalFindFrame()']
['assert()', 'f_entry()', 'f_exit()', 'pagerAcquireMapPage()', 'pagerUnlockIfUnused()', 'pagerUseWal()', 'sqlite3CorruptError()', 'sqlite3OsFetch()', 'sqlite3PagerLookup()', 'sqlite3PcacheDrop()', 'sqlite3WalFindFrame()']
15Paths generated!
--------------Analysis-sqlite3PagerLookup-@sqlite3.c@line: 51771.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PcacheFetch()', 'sqlite3PcacheFetchFinish()']
1Paths generated!
--------------Analysis-sqlite3PagerUnrefNotNull-@sqlite3.c@line: 51790.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockIfUnused()', 'sqlite3PcacheRelease()']
['assert()', 'f_entry()', 'f_exit()', 'pagerReleaseMapPage()', 'pagerUnlockIfUnused()']
2Paths generated!
--------------Analysis-sqlite3PagerUnref-@sqlite3.c@line: 51801.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3PagerUnrefNotNull()']
2Paths generated!
--------------Analysis-pager_open_journal-@sqlite3.c@line: 51827.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecCreate()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecCreate()', 'writeJournalHdr()']
['assert()', 'databaseIsUnmoved()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecCreate()']
['assert()', 'databaseIsUnmoved()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecCreate()', 'sqlite3BitvecDestroy()', 'sqlite3JournalOpen()', 'writeJournalHdr()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3BitvecCreate()', 'sqlite3BitvecDestroy()', 'sqlite3MemJournalOpen()', 'writeJournalHdr()']
7Paths generated!
--------------Analysis-sqlite3PagerBegin-@sqlite3.c@line: 51916.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerUseWal()', 'pager_wait_on_lock()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'sqlite3WalBeginWriteTransaction()', 'sqlite3WalExclusiveMode()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerUseWal()', 'sqlite3WalBeginWriteTransaction()', 'sqlite3WalExclusiveMode()']
5Paths generated!
--------------Analysis-pagerAddPageToRollbackJournal-@sqlite3.c@line: 51985.....

['addToSavepointBitvecs()', 'assert()', 'f_entry()', 'f_exit()', 'pager_cksum()', 'sqlite3BitvecSet()', 'sqlite3OsWrite()', 'write32bits()']
1Paths generated!
--------------Analysis-pager_write-@sqlite3.c@line: 52042.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecTestNotNull()', 'sqlite3PcacheMakeDirty()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecTestNotNull()', 'sqlite3PcacheMakeDirty()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'pagerAddPageToRollbackJournal()', 'sqlite3BitvecTestNotNull()', 'sqlite3PcacheMakeDirty()']
['assert()', 'f_entry()', 'f_exit()', 'pagerAddPageToRollbackJournal()', 'pager_open_journal()', 'sqlite3BitvecTestNotNull()', 'sqlite3PcacheMakeDirty()', 'subjournalPageIfRequired()']
4Paths generated!
--------------Analysis-pagerWriteLargeSector-@sqlite3.c@line: 52134.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerLookup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecTest()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecTest()', 'sqlite3PagerLookup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecTest()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecTest()', 'sqlite3PagerGet()']
['assert()', 'f_entry()', 'f_exit()', 'pager_write()', 'sqlite3BitvecTest()', 'sqlite3PagerGet()', 'sqlite3PagerUnrefNotNull()']
8Paths generated!
--------------Analysis-sqlite3PagerWrite-@sqlite3.c@line: 52228.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pager_write()']
['assert()', 'f_entry()', 'f_exit()', 'pagerWriteLargeSector()']
['assert()', 'f_entry()', 'f_exit()', 'subjournalPageIfRequired()']
4Paths generated!
--------------Analysis-sqlite3PagerDontWrite-@sqlite3.c@line: 52277.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pager_incr_changecounter-@sqlite3.c@line: 52311.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGet()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'pager_write_changecounter()', 'sqlite3PagerGet()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'pager_write_changecounter()', 'sqlite3PagerGet()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'pager_write_changecounter()', 'sqlite3OsWrite()', 'sqlite3PagerGet()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGet()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()']
6Paths generated!
--------------Analysis-sqlite3PagerSync-@sqlite3.c@line: 52394.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsSync()']
['f_entry()', 'f_exit()', 'sqlite3OsFileControl()']
3Paths generated!
--------------Analysis-sqlite3PagerExclusiveLock-@sqlite3.c@line: 52420.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_wait_on_lock()']
3Paths generated!
--------------Analysis-sqlite3PagerCommitPhaseOne-@sqlite3.c@line: 52462.....

['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'pager_incr_changecounter()', 'pager_write_pagelist()', 'sqlite3FaultSim()', 'sqlite3PcacheCleanAll()', 'syncJournal()', 'writeMasterJournal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'pager_incr_changecounter()', 'pager_write_pagelist()', 'sqlite3FaultSim()', 'sqlite3PagerSync()', 'sqlite3PcacheCleanAll()', 'syncJournal()', 'writeMasterJournal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'pager_incr_changecounter()', 'pager_truncate()', 'pager_write_pagelist()', 'sqlite3FaultSim()', 'sqlite3PcacheCleanAll()', 'syncJournal()', 'writeMasterJournal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'pager_incr_changecounter()', 'pager_truncate()', 'pager_write_pagelist()', 'sqlite3FaultSim()', 'sqlite3PagerSync()', 'sqlite3PcacheCleanAll()', 'syncJournal()', 'writeMasterJournal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'sqlite3FaultSim()', 'sqlite3PagerUnref()', 'sqlite3PcacheDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'sqlite3FaultSim()', 'sqlite3PagerUnref()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'pagerWalFrames()', 'sqlite3FaultSim()', 'sqlite3PagerUnref()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'pagerWalFrames()', 'sqlite3FaultSim()', 'sqlite3PagerGet()', 'sqlite3PagerUnref()', 'sqlite3PcacheCleanAll()', 'sqlite3PcacheDirtyList()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFlushOnCommit()', 'pagerUseWal()', 'sqlite3BackupRestart()', 'sqlite3FaultSim()']
9Paths generated!
--------------Analysis-sqlite3PagerCommitPhaseTwo-@sqlite3.c@line: 52639.....

['assert()', 'f_entry()', 'f_exit()', 'pager_end_transaction()', 'pager_error()']
1Paths generated!
--------------Analysis-sqlite3PagerRollback-@sqlite3.c@line: 52705.....

['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_error()', 'pager_playback()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_end_transaction()', 'pager_error()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()', 'pager_end_transaction()', 'pager_error()', 'sqlite3PagerSavepoint()']
3Paths generated!
--------------Analysis-sqlite3PagerIsreadonly-@sqlite3.c@line: 52754.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerMemUsed-@sqlite3.c@line: 52771.....

['f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'sqlite3PcachePagecount()']
1Paths generated!
--------------Analysis-sqlite3PagerPageRefcount-@sqlite3.c@line: 52782.....

['f_entry()', 'f_exit()', 'sqlite3PcachePageRefcount()']
1Paths generated!
--------------Analysis-sqlite3PagerCacheStat-@sqlite3.c@line: 52814.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerIsMemdb-@sqlite3.c@line: 52834.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pagerOpenSavepoint-@sqlite3.c@line: 52848.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3Realloc()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'pagerUseWal()', 'sqlite3BitvecCreate()', 'sqlite3Realloc()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'pagerUseWal()', 'sqlite3BitvecCreate()', 'sqlite3Realloc()', 'sqlite3WalSavepoint()']
3Paths generated!
--------------Analysis-sqlite3PagerOpenSavepoint-@sqlite3.c@line: 52893.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerOpenSavepoint()']
2Paths generated!
--------------Analysis-sqlite3PagerSavepoint-@sqlite3.c@line: 52935.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerPlaybackSavepoint()', 'pagerUseWal()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3JournalIsInMemory()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3JournalIsInMemory()', 'sqlite3OsTruncate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecDestroy()']
6Paths generated!
--------------Analysis-sqlite3PagerFilename-@sqlite3.c@line: 52992.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerVfs-@sqlite3.c@line: 52999.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerFile-@sqlite3.c@line: 53008.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerJrnlFile-@sqlite3.c@line: 53016.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WalFile()']
2Paths generated!
--------------Analysis-sqlite3PagerJournalname-@sqlite3.c@line: 53027.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerMovepage-@sqlite3.c@line: 53100.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerLookup()', 'sqlite3PcacheMakeDirty()', 'sqlite3PcacheMove()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGet()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcacheMakeDirty()', 'sqlite3PcacheMove()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecClear()', 'sqlite3PagerGet()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcacheMakeDirty()', 'sqlite3PcacheMove()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcacheMakeDirty()', 'sqlite3PcacheMove()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecClear()', 'sqlite3PagerGet()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PcacheDrop()', 'sqlite3PcacheMakeDirty()', 'sqlite3PcacheMove()', 'subjournalPageIfRequired()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecClear()', 'sqlite3PagerGet()', 'sqlite3PagerLookup()', 'sqlite3PagerUnrefNotNull()', 'sqlite3PagerWrite()', 'sqlite3PcacheMakeDirty()', 'sqlite3PcacheMove()', 'subjournalPageIfRequired()']
6Paths generated!
--------------Analysis-sqlite3PagerRekey-@sqlite3.c@line: 53234.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PcacheMove()']
1Paths generated!
--------------Analysis-sqlite3PagerGetData-@sqlite3.c@line: 53243.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerGetExtra-@sqlite3.c@line: 53252.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerLockingMode-@sqlite3.c@line: 53266.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalHeapMemory()']
1Paths generated!
--------------Analysis-sqlite3PagerSetJournalMode-@sqlite3.c@line: 53299.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsClose()']
['assert()', 'f_entry()', 'f_exit()', 'pager_unlock()', 'sqlite3OsClose()']
['assert()', 'f_entry()', 'f_exit()', 'pagerUnlockDb()', 'sqlite3OsClose()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsClose()', 'sqlite3OsDelete()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'sqlite3OsClose()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsClose()', 'sqlite3PagerSharedLock()']
7Paths generated!
--------------Analysis-sqlite3PagerGetJournalMode-@sqlite3.c@line: 53397.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerOkToChangeJournalMode-@sqlite3.c@line: 53406.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerJournalSizeLimit-@sqlite3.c@line: 53419.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WalLimit()']
2Paths generated!
--------------Analysis-sqlite3PagerBackupPtr-@sqlite3.c@line: 53433.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3PagerClearCache-@sqlite3.c@line: 53441.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pager_reset()']
2Paths generated!
--------------Analysis-sqlite3PagerCheckpoint-@sqlite3.c@line: 53456.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WalCheckpoint()']
2Paths generated!
--------------Analysis-sqlite3PagerWalCallback-@sqlite3.c@line: 53469.....

['f_entry()', 'f_exit()', 'sqlite3WalCallback()']
1Paths generated!
--------------Analysis-sqlite3PagerWalSupported-@sqlite3.c@line: 53477.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-pagerExclusiveLock-@sqlite3.c@line: 53487.....

['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerUnlockDb()']
2Paths generated!
--------------Analysis-pagerOpenWal-@sqlite3.c@line: 53507.....

['assert()', 'f_entry()', 'f_exit()', 'pagerFixMaplimit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerFixMaplimit()', 'sqlite3WalOpen()']
['assert()', 'f_entry()', 'f_exit()', 'pagerExclusiveLock()', 'pagerFixMaplimit()']
3Paths generated!
--------------Analysis-sqlite3PagerOpenWal-@sqlite3.c@line: 53552.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerOpenWal()', 'sqlite3OsClose()', 'sqlite3PagerWalSupported()']
2Paths generated!
--------------Analysis-sqlite3PagerCloseWal-@sqlite3.c@line: 53591.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pagerExclusiveLock()']
['assert()', 'f_entry()', 'f_exit()', 'pagerExclusiveLock()', 'pagerFixMaplimit()', 'sqlite3WalClose()']
['assert()', 'f_entry()', 'f_exit()', 'pagerExclusiveLock()', 'pagerFixMaplimit()', 'pagerUnlockDb()', 'sqlite3WalClose()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'pagerOpenWal()']
['assert()', 'f_entry()', 'f_exit()', 'pagerLockDb()', 'sqlite3OsAccess()']
7Paths generated!
--------------Analysis-walIndexPage-@sqlite3.c@line: 54215.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsShmMap()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_realloc64()']
4Paths generated!
--------------Analysis-walCkptInfo-@sqlite3.c@line: 54257.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walIndexHdr-@sqlite3.c@line: 54265.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walChecksumBytes-@sqlite3.c@line: 54291.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walShmBarrier-@sqlite3.c@line: 54329.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsShmBarrier()']
2Paths generated!
--------------Analysis-walIndexWriteHdr-@sqlite3.c@line: 54340.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'walChecksumBytes()', 'walIndexHdr()', 'walShmBarrier()']
1Paths generated!
--------------Analysis-walEncodeFrame-@sqlite3.c@line: 54366.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Put4byte()', 'walChecksumBytes()']
2Paths generated!
--------------Analysis-walDecodeFrame-@sqlite3.c@line: 54397.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3Get4byte()', 'walChecksumBytes()']
1Paths generated!
--------------Analysis-walLockShared-@sqlite3.c@line: 54476.....

['f_entry()', 'f_exit()', 'sqlite3OsShmLock()']
1Paths generated!
--------------Analysis-walUnlockShared-@sqlite3.c@line: 54486.....

['f_entry()', 'f_exit()', 'sqlite3OsShmLock()']
1Paths generated!
--------------Analysis-walLockExclusive-@sqlite3.c@line: 54492.....

['f_entry()', 'f_exit()', 'sqlite3OsShmLock()']
1Paths generated!
--------------Analysis-walUnlockExclusive-@sqlite3.c@line: 54502.....

['f_entry()', 'f_exit()', 'sqlite3OsShmLock()']
1Paths generated!
--------------Analysis-walHash-@sqlite3.c@line: 54515.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walNextHash-@sqlite3.c@line: 54520.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walHashGet-@sqlite3.c@line: 54538.....

['assert()', 'f_entry()', 'f_exit()', 'walIndexPage()']
1Paths generated!
--------------Analysis-walFramePage-@sqlite3.c@line: 54576.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walFramePgno-@sqlite3.c@line: 54590.....

['f_entry()', 'f_exit()', 'walFramePage()']
1Paths generated!
--------------Analysis-walCleanupHash-@sqlite3.c@line: 54610.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'walHashGet()']
1Paths generated!
--------------Analysis-walIndexAppend-@sqlite3.c@line: 54672.....

['f_entry()', 'f_exit()', 'walHashGet()']
['assert()', 'f_entry()', 'f_exit()', 'walHash()', 'walHashGet()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'walHash()', 'walHashGet()']
['assert()', 'f_entry()', 'f_exit()', 'walHash()', 'walHashGet()', 'walNextHash()']
['assert()', 'f_entry()', 'f_exit()', 'walCleanupHash()', 'walHash()', 'walHashGet()', 'walNextHash()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'walHash()', 'walHashGet()', 'walNextHash()']
6Paths generated!
--------------Analysis-walIndexRecover-@sqlite3.c@line: 54761.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3OsFileSize()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3OsFileSize()', 'walCkptInfo()', 'walIndexWriteHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3OsFileSize()', 'sqlite3_log()', 'walCkptInfo()', 'walIndexWriteHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3Get4byte()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3_free()', 'sqlite3_malloc64()', 'walChecksumBytes()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3Get4byte()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3_free()', 'sqlite3_log()', 'sqlite3_malloc64()', 'walChecksumBytes()', 'walCkptInfo()', 'walDecodeFrame()', 'walIndexAppend()', 'walIndexWriteHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3CantopenError()', 'sqlite3Get4byte()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3_free()', 'sqlite3_log()', 'sqlite3_malloc64()', 'walChecksumBytes()', 'walCkptInfo()', 'walDecodeFrame()', 'walIndexAppend()', 'walIndexWriteHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
6Paths generated!
--------------Analysis-walIndexClose-@sqlite3.c@line: 54928.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsShmUnmap()']
['f_entry()', 'f_exit()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-sqlite3WalOpen-@sqlite3.c@line: 54955.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3OsClose()', 'sqlite3OsOpen()', 'sqlite3_free()', 'walIndexClose()']
2Paths generated!
--------------Analysis-sqlite3WalLimit-@sqlite3.c@line: 55029.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walIteratorNext-@sqlite3.c@line: 55043.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walMerge-@sqlite3.c@line: 55096.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-walMergesort-@sqlite3.c@line: 55153.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'walMerge()']
2Paths generated!
--------------Analysis-walIteratorFree-@sqlite3.c@line: 55216.....

['f_entry()', 'f_exit()', 'sqlite3_free()']
1Paths generated!
--------------Analysis-walIteratorInit-@sqlite3.c@line: 55232.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'walFramePage()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'walFramePage()', 'walIteratorFree()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'walFramePage()', 'walHashGet()', 'walIteratorFree()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'sqlite3_malloc64()', 'walFramePage()', 'walHashGet()', 'walIteratorFree()', 'walMergesort()']
4Paths generated!
--------------Analysis-walBusyLock-@sqlite3.c@line: 55314.....

['f_entry()', 'f_exit()', 'walLockExclusive()', 'xBusy()']
1Paths generated!
--------------Analysis-walPagesize-@sqlite3.c@line: 55332.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walRestartHdr-@sqlite3.c@line: 55353.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Put4byte()', 'walCkptInfo()', 'walIndexWriteHdr()']
1Paths generated!
--------------Analysis-walCheckpoint-@sqlite3.c@line: 55400.....

['f_entry()', 'f_exit()', 'walCkptInfo()', 'walIteratorFree()', 'walPagesize()']
['assert()', 'f_entry()', 'f_exit()', 'walCkptInfo()', 'walIteratorFree()', 'walPagesize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIteratorFree()', 'walPagesize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIteratorFree()', 'walPagesize()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsTruncate()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIteratorFree()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'walBusyLock()', 'walCkptInfo()', 'walIteratorFree()', 'walIteratorInit()', 'walPagesize()']
['assert()', 'f_entry()', 'f_exit()', 'walBusyLock()', 'walCkptInfo()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsTruncate()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIndexHdr()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsSync()', 'sqlite3OsTruncate()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIndexHdr()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsRead()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3OsSync()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIndexHdr()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsFileControlHint()', 'sqlite3OsFileSize()', 'sqlite3OsRead()', 'sqlite3OsSync()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIndexHdr()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsRead()', 'sqlite3OsSync()', 'sqlite3OsTruncate()', 'sqlite3OsWrite()', 'sqlite3_randomness()', 'walBusyLock()', 'walCkptInfo()', 'walIndexHdr()', 'walIteratorFree()', 'walIteratorInit()', 'walIteratorNext()', 'walPagesize()', 'walRestartHdr()', 'walUnlockExclusive()']
13Paths generated!
--------------Analysis-walLimitSize-@sqlite3.c@line: 55581.....

['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsFileSize()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsFileSize()', 'sqlite3_log()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsFileSize()', 'sqlite3OsTruncate()', 'sqlite3_log()']
3Paths generated!
--------------Analysis-sqlite3WalClose-@sqlite3.c@line: 55598.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsClose()', 'sqlite3OsLock()', 'sqlite3_free()', 'walIndexClose()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsLock()', 'sqlite3_free()', 'walIndexClose()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsLock()', 'sqlite3WalCheckpoint()', 'sqlite3_free()', 'walIndexClose()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileControlHint()', 'sqlite3OsLock()', 'sqlite3WalCheckpoint()', 'sqlite3_free()', 'walIndexClose()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3OsClose()', 'sqlite3OsDelete()', 'sqlite3OsFileControlHint()', 'sqlite3OsLock()', 'sqlite3WalCheckpoint()', 'sqlite3_free()', 'walIndexClose()', 'walLimitSize()']
6Paths generated!
--------------Analysis-walIndexTryHdr-@sqlite3.c@line: 55677.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'walChecksumBytes()', 'walIndexHdr()', 'walShmBarrier()']
1Paths generated!
--------------Analysis-walIndexReadHdr-@sqlite3.c@line: 55735.....

['assert()', 'f_entry()', 'f_exit()', 'walIndexPage()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CantopenError()', 'walIndexPage()']
['assert()', 'f_entry()', 'f_exit()', 'walIndexPage()', 'walLockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'walIndexPage()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CantopenError()', 'walIndexPage()', 'walIndexTryHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CantopenError()', 'walIndexPage()', 'walIndexRecover()', 'walIndexTryHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'walIndexPage()', 'walLockShared()']
['assert()', 'f_entry()', 'f_exit()', 'walIndexPage()', 'walLockShared()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CantopenError()', 'walIndexPage()', 'walIndexTryHdr()', 'walLockShared()', 'walUnlockShared()']
9Paths generated!
--------------Analysis-walTryBeginRead-@sqlite3.c@line: 55852.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walCkptInfo()', 'walLockShared()', 'walShmBarrier()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walCkptInfo()', 'walLockShared()', 'walShmBarrier()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walCkptInfo()', 'walLockExclusive()', 'walLockShared()', 'walShmBarrier()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walCkptInfo()', 'walLockExclusive()', 'walLockShared()', 'walShmBarrier()', 'walUnlockExclusive()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walCkptInfo()', 'walIndexReadHdr()', 'walLockExclusive()', 'walLockShared()', 'walShmBarrier()', 'walUnlockExclusive()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3OsSleep()', 'walCkptInfo()', 'walLockExclusive()', 'walLockShared()', 'walShmBarrier()', 'walUnlockExclusive()', 'walUnlockShared()']
6Paths generated!
--------------Analysis-sqlite3WalBeginReadTransaction-@sqlite3.c@line: 56065.....

['f_entry()', 'f_exit()', 'walTryBeginRead()']
1Paths generated!
--------------Analysis-sqlite3WalEndReadTransaction-@sqlite3.c@line: 56151.....

['f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()']
['f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()', 'walUnlockShared()']
2Paths generated!
--------------Analysis-sqlite3WalFindFrame-@sqlite3.c@line: 56167.....

['assert()', 'f_entry()', 'f_exit()', 'walFramePage()']
['assert()', 'f_entry()', 'f_exit()', 'walFramePage()', 'walHash()', 'walHashGet()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'walFramePage()', 'walHash()', 'walHashGet()']
['assert()', 'f_entry()', 'f_exit()', 'walFramePage()', 'walHash()', 'walHashGet()', 'walNextHash()']
4Paths generated!
--------------Analysis-sqlite3WalReadFrame-@sqlite3.c@line: 56269.....

['f_entry()', 'f_exit()', 'sqlite3OsRead()']
1Paths generated!
--------------Analysis-sqlite3WalDbsize-@sqlite3.c@line: 56289.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WalBeginWriteTransaction-@sqlite3.c@line: 56310.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walLockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walLockExclusive()', 'walUnlockExclusive()']
2Paths generated!
--------------Analysis-sqlite3WalEndWriteTransaction-@sqlite3.c@line: 56348.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'walUnlockExclusive()']
2Paths generated!
--------------Analysis-sqlite3WalUndo-@sqlite3.c@line: 56370.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memcpy()']
['f_entry()', 'f_exit()', 'memcpy()', 'walCleanupHash()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'xUndo()']
4Paths generated!
--------------Analysis-sqlite3WalSavepoint-@sqlite3.c@line: 56410.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WalSavepointUndo-@sqlite3.c@line: 56424.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'walCleanupHash()']
2Paths generated!
--------------Analysis-walRestartLog-@sqlite3.c@line: 56461.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'walCkptInfo()', 'walTryBeginRead()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_randomness()', 'walCkptInfo()', 'walLockExclusive()', 'walTryBeginRead()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_randomness()', 'walCkptInfo()', 'walLockExclusive()', 'walRestartHdr()', 'walTryBeginRead()', 'walUnlockExclusive()', 'walUnlockShared()']
4Paths generated!
--------------Analysis-walWriteToLog-@sqlite3.c@line: 56524.....

['f_entry()', 'f_exit()', 'sqlite3OsWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsSync()', 'sqlite3OsWrite()']
2Paths generated!
--------------Analysis-walWriteOneFrame-@sqlite3.c@line: 56549.....

['f_entry()', 'f_exit()', 'walEncodeFrame()', 'walWriteToLog()']
1Paths generated!
--------------Analysis-walRewriteChecksums-@sqlite3.c@line: 56579.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3OsRead()', 'sqlite3_free()', 'sqlite3_malloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3OsRead()', 'sqlite3OsWrite()', 'sqlite3_free()', 'sqlite3_malloc()', 'walEncodeFrame()']
2Paths generated!
--------------Analysis-sqlite3WalFrames-@sqlite3.c@line: 56628.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walIndexHdr()', 'walRestartLog()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walIndexHdr()', 'walIndexWriteHdr()', 'walRestartLog()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walIndexAppend()', 'walIndexHdr()', 'walRestartLog()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walIndexHdr()', 'walLimitSize()', 'walRestartLog()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3OsSync()', 'walIndexHdr()', 'walRestartLog()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3SectorSize()', 'walIndexHdr()', 'walRestartLog()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3SectorSize()', 'walIndexHdr()', 'walRestartLog()', 'walWriteOneFrame()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walIndexHdr()', 'walRestartLog()', 'walRewriteChecksums()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'walIndexHdr()', 'walRestartLog()', 'walWriteOneFrame()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3OsSync()', 'sqlite3SectorSize()', 'sqlite3WalFindFrame()', 'walIndexAppend()', 'walIndexHdr()', 'walIndexWriteHdr()', 'walLimitSize()', 'walRestartLog()', 'walRewriteChecksums()', 'walWriteOneFrame()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3OsSync()', 'sqlite3OsWrite()', 'sqlite3SectorSize()', 'sqlite3WalFindFrame()', 'walIndexAppend()', 'walIndexHdr()', 'walIndexWriteHdr()', 'walLimitSize()', 'walRestartLog()', 'walRewriteChecksums()', 'walWriteOneFrame()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3OsSync()', 'sqlite3OsWrite()', 'sqlite3Put4byte()', 'sqlite3SectorSize()', 'sqlite3WalFindFrame()', 'walChecksumBytes()', 'walIndexAppend()', 'walIndexHdr()', 'walIndexWriteHdr()', 'walLimitSize()', 'walRestartLog()', 'walRewriteChecksums()', 'walWriteOneFrame()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3OsSync()', 'sqlite3OsWrite()', 'sqlite3Put4byte()', 'sqlite3SectorSize()', 'sqlite3WalFindFrame()', 'sqlite3_randomness()', 'walChecksumBytes()', 'walIndexAppend()', 'walIndexHdr()', 'walIndexWriteHdr()', 'walLimitSize()', 'walRestartLog()', 'walRewriteChecksums()', 'walWriteOneFrame()']
13Paths generated!
--------------Analysis-sqlite3WalCheckpoint-@sqlite3.c@line: 56868.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3WalEndWriteTransaction()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()', 'walCheckpoint()', 'walLockExclusive()', 'walPagesize()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()', 'walCheckpoint()', 'walCkptInfo()', 'walLockExclusive()', 'walPagesize()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3WalEndWriteTransaction()', 'walLockExclusive()', 'walPagesize()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()', 'walIndexReadHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsUnfetch()', 'sqlite3WalEndWriteTransaction()', 'walIndexReadHdr()', 'walLockExclusive()', 'walUnlockExclusive()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3WalEndWriteTransaction()', 'walBusyLock()', 'walLockExclusive()', 'walUnlockExclusive()']
8Paths generated!
--------------Analysis-sqlite3WalCallback-@sqlite3.c@line: 56977.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WalExclusiveMode-@sqlite3.c@line: 57010.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'walUnlockShared()']
['assert()', 'f_entry()', 'f_exit()', 'walLockShared()']
3Paths generated!
--------------Analysis-sqlite3WalHeapMemory-@sqlite3.c@line: 57052.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WalFile-@sqlite3.c@line: 57116.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-lockBtreeMutex-@sqlite3.c@line: 57863.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()']
1Paths generated!
--------------Analysis-unlockBtreeMutex-@sqlite3.c@line: 57877.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3BtreeEnter-@sqlite3.c@line: 57907.....

['assert()', 'btreeLockCarefully()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-btreeLockCarefully-@sqlite3.c@line: 57941.....

['f_entry()', 'f_exit()', 'lockBtreeMutex()', 'sqlite3_mutex_try()']
['assert()', 'f_entry()', 'f_exit()', 'lockBtreeMutex()', 'sqlite3_mutex_try()']
['assert()', 'f_entry()', 'f_exit()', 'lockBtreeMutex()', 'sqlite3_mutex_try()', 'unlockBtreeMutex()']
3Paths generated!
--------------Analysis-sqlite3BtreeLeave-@sqlite3.c@line: 57979.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'unlockBtreeMutex()']
2Paths generated!
--------------Analysis-sqlite3BtreeEnterAll-@sqlite3.c@line: 58022.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()']
2Paths generated!
--------------Analysis-sqlite3BtreeLeaveAll-@sqlite3.c@line: 58031.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeLeave()']
2Paths generated!
--------------Analysis-sqlite3BtreeEnterCursor-@sqlite3.c@line: 58123.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()']
1Paths generated!
--------------Analysis-sqlite3BtreeLeaveCursor-@sqlite3.c@line: 58127.....

['f_entry()', 'f_exit()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3_enable_shared_cache-@sqlite3.c@line: 58225.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-querySharedCacheTableLock-@sqlite3.c@line: 58383.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-setSharedCacheTableLock-@sqlite3.c@line: 58455.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()']
2Paths generated!
--------------Analysis-clearAllSharedCacheTableLocks-@sqlite3.c@line: 58519.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-downgradeAllSharedCacheTableLocks-@sqlite3.c@line: 58563.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-invalidateAllOverflowCache-@sqlite3.c@line: 58614.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-invalidateIncrblobCursors-@sqlite3.c@line: 58636.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-btreeSetHasContent-@sqlite3.c@line: 58695.....

['f_entry()', 'f_exit()', 'sqlite3BitvecSize()']
['f_entry()', 'f_exit()', 'sqlite3BitvecSet()', 'sqlite3BitvecSize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BitvecCreate()', 'sqlite3BitvecSet()', 'sqlite3BitvecSize()']
3Paths generated!
--------------Analysis-btreeGetHasContent-@sqlite3.c@line: 58717.....

['f_entry()', 'f_exit()', 'sqlite3BitvecSize()', 'sqlite3BitvecTest()']
1Paths generated!
--------------Analysis-btreeClearHasContent-@sqlite3.c@line: 58726.....

['f_entry()', 'f_exit()', 'sqlite3BitvecDestroy()']
1Paths generated!
--------------Analysis-btreeReleaseAllCursorPages-@sqlite3.c@line: 58734.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'releasePage()']
2Paths generated!
--------------Analysis-saveCursorKey-@sqlite3.c@line: 58756.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadSize()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeKey()', 'sqlite3BtreePayloadSize()', 'sqlite3Malloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeKey()', 'sqlite3BtreePayloadSize()', 'sqlite3Malloc()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeIntegerKey()']
4Paths generated!
--------------Analysis-saveCursorPosition-@sqlite3.c@line: 58792.....

['assert()', 'f_entry()', 'f_exit()', 'saveCursorKey()']
['assert()', 'btreeReleaseAllCursorPages()', 'f_entry()', 'f_exit()', 'saveCursorKey()']
2Paths generated!
--------------Analysis-saveAllCursors-@sqlite3.c@line: 58839.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'saveCursorsOnList()']
2Paths generated!
--------------Analysis-saveCursorsOnList-@sqlite3.c@line: 58856.....

['f_entry()', 'f_exit()']
['btreeReleaseAllCursorPages()', 'f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'saveCursorPosition()']
3Paths generated!
--------------Analysis-sqlite3BtreeClearCursor-@sqlite3.c@line: 58881.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
1Paths generated!
--------------Analysis-btreeMoveto-@sqlite3.c@line: 58893.....

['f_entry()', 'f_exit()', 'sqlite3BtreeMovetoUnpacked()']
['f_entry()', 'f_exit()', 'sqlite3BtreeMovetoUnpacked()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeMovetoUnpacked()', 'sqlite3DbFree()', 'sqlite3VdbeAllocUnpackedRecord()', 'sqlite3VdbeRecordUnpack()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeMovetoUnpacked()', 'sqlite3CorruptError()', 'sqlite3DbFree()', 'sqlite3VdbeAllocUnpackedRecord()', 'sqlite3VdbeRecordUnpack()']
4Paths generated!
--------------Analysis-btreeRestoreCursorPosition-@sqlite3.c@line: 58933.....

['assert()', 'btreeMoveto()', 'f_entry()', 'f_exit()']
['assert()', 'btreeMoveto()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3BtreeCursorHasMoved-@sqlite3.c@line: 58972.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeCursorRestore-@sqlite3.c@line: 58989.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'btreeRestoreCursorPosition()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3BtreeCursorHintFlags-@sqlite3.c@line: 59022.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-ptrmapPageno-@sqlite3.c@line: 59038.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-ptrmapPut-@sqlite3.c@line: 59062.....

['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
4Paths generated!
--------------Analysis-ptrmapGet-@sqlite3.c@line: 59114.....

['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3CorruptError()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
3Paths generated!
--------------Analysis-btreeParseCellAdjustSizeForOverflow-@sqlite3.c@line: 59173.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-btreeParseCellPtrNoPayload-@sqlite3.c@line: 59218.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVarint()']
1Paths generated!
--------------Analysis-btreeParseCellPtr-@sqlite3.c@line: 59235.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'btreeParseCellAdjustSizeForOverflow()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-btreeParseCellPtrIndex-@sqlite3.c@line: 59303.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'btreeParseCellAdjustSizeForOverflow()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-btreeParseCell-@sqlite3.c@line: 59340.....

['f_entry()', 'f_exit()', 'xParseCell()']
1Paths generated!
--------------Analysis-cellSizePtr-@sqlite3.c@line: 59360.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-cellSizePtrNoPayload-@sqlite3.c@line: 59408.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-ptrmapPutOvflPtr-@sqlite3.c@line: 59445.....

['assert()', 'f_entry()', 'f_exit()', 'xParseCell()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPut()', 'sqlite3Get4byte()', 'xParseCell()']
2Paths generated!
--------------Analysis-defragmentPage-@sqlite3.c@line: 59469.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3CorruptError()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3CorruptError()', 'xCellSize()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3CorruptError()', 'sqlite3PagerTempSpace()', 'xCellSize()']
4Paths generated!
--------------Analysis-pageFindSlot-@sqlite3.c@line: 59559.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()']
3Paths generated!
--------------Analysis-allocateSpace-@sqlite3.c@line: 59622.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'defragmentPage()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'pageFindSlot()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()']
4Paths generated!
--------------Analysis-freeSpace-@sqlite3.c@line: 59712.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()']
['assert()', 'f_entry()', 'f_exit()', 'memset()']
3Paths generated!
--------------Analysis-decodeFlags-@sqlite3.c@line: 59811.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-btreeInitPage-@sqlite3.c@line: 59869.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'decodeFlags()', 'f_entry()', 'f_exit()']
['assert()', 'decodeFlags()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()']
['__builtin_bswap16()', 'assert()', 'decodeFlags()', 'f_entry()', 'f_exit()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'decodeFlags()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'xCellSize()']
5Paths generated!
--------------Analysis-zeroPage-@sqlite3.c@line: 60000.....

['assert()', 'decodeFlags()', 'f_entry()', 'f_exit()', 'memset()']
1Paths generated!
--------------Analysis-btreePageFromDbPage-@sqlite3.c@line: 60037.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGetExtra()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGetData()', 'sqlite3PagerGetExtra()']
2Paths generated!
--------------Analysis-btreeGetPage-@sqlite3.c@line: 60061.....

['assert()', 'btreePageFromDbPage()', 'f_entry()', 'f_exit()', 'sqlite3PagerGet()']
1Paths generated!
--------------Analysis-btreePageLookup-@sqlite3.c@line: 60083.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerLookup()']
['assert()', 'btreePageFromDbPage()', 'f_entry()', 'f_exit()', 'sqlite3PagerLookup()']
2Paths generated!
--------------Analysis-btreePagecount-@sqlite3.c@line: 60097.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeLastPage-@sqlite3.c@line: 60100.....

['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-getAndInitPage-@sqlite3.c@line: 60119.....

['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'sqlite3PagerGet()', 'sqlite3PagerGetExtra()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerGet()', 'sqlite3PagerGetExtra()']
['assert()', 'btreeInitPage()', 'btreePageFromDbPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerGet()', 'sqlite3PagerGetExtra()']
3Paths generated!
--------------Analysis-releasePageNotNull-@sqlite3.c@line: 60173.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerUnrefNotNull()']
1Paths generated!
--------------Analysis-releasePage-@sqlite3.c@line: 60182.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'releasePageNotNull()']
2Paths generated!
--------------Analysis-btreeGetUnusedPage-@sqlite3.c@line: 60195.....

['btreeGetPage()', 'f_entry()', 'f_exit()']
['btreeGetPage()', 'f_entry()', 'f_exit()', 'sqlite3PagerPageRefcount()']
['btreeGetPage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerPageRefcount()']
3Paths generated!
--------------Analysis-pageReinit-@sqlite3.c@line: 60224.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGetExtra()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerGetExtra()', 'sqlite3PagerPageRefcount()']
['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3PagerGetExtra()', 'sqlite3PagerPageRefcount()']
3Paths generated!
--------------Analysis-btreeInvokeBusyHandler-@sqlite3.c@line: 60246.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3InvokeBusyHandler()']
1Paths generated!
--------------Analysis-sqlite3BtreeOpen-@sqlite3.c@line: 60274.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSchema()', 'sqlite3MallocZero()', 'sqlite3TempInMemory()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSchema()', 'sqlite3MallocZero()', 'sqlite3TempInMemory()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSchema()', 'sqlite3MallocZero()', 'sqlite3PagerSetCachesize()', 'sqlite3TempInMemory()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3PagerClose()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSchema()', 'sqlite3MallocZero()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetCachesize()', 'sqlite3PagerSetPagesize()', 'sqlite3TempInMemory()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSchema()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetCachesize()', 'sqlite3PagerSetPagesize()', 'sqlite3TempInMemory()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3PagerClose()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetPagesize()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3PagerClose()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetPagesize()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3PagerClose()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerReadFileheader()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetMmapLimit()', 'sqlite3PagerSetPagesize()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSchema()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3OsFullPathname()', 'sqlite3PagerSetCachesize()', 'sqlite3Strlen30()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3OsFullPathname()', 'sqlite3PagerClose()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerReadFileheader()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetMmapLimit()', 'sqlite3PagerSetPagesize()', 'sqlite3PagerVfs()', 'sqlite3Strlen30()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Get4byte()', 'sqlite3Malloc()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3PagerClose()', 'sqlite3PagerIsreadonly()', 'sqlite3PagerOpen()', 'sqlite3PagerReadFileheader()', 'sqlite3PagerSetBusyhandler()', 'sqlite3PagerSetMmapLimit()', 'sqlite3PagerSetPagesize()', 'sqlite3PagerVfs()', 'sqlite3Strlen30()', 'sqlite3TempInMemory()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'strcmp()']
13Paths generated!
--------------Analysis-removeFromSharingList-@sqlite3.c@line: 60559.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-allocateTempSpace-@sqlite3.c@line: 60598.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3PageMalloc()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3PageMalloc()']
3Paths generated!
--------------Analysis-freeTempSpace-@sqlite3.c@line: 60627.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3PageFree()']
2Paths generated!
--------------Analysis-sqlite3BtreeClose-@sqlite3.c@line: 60638.....

['assert()', 'f_entry()', 'f_exit()', 'removeFromSharingList()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'freeTempSpace()', 'removeFromSharingList()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3DbFree()', 'sqlite3PagerClose()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'freeTempSpace()', 'removeFromSharingList()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3DbFree()', 'sqlite3PagerClose()', 'sqlite3_free()', 'xFreeSchema()']
['assert()', 'f_entry()', 'f_exit()', 'freeTempSpace()', 'removeFromSharingList()', 'sqlite3BtreeCloseCursor()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3DbFree()', 'sqlite3PagerClose()', 'sqlite3_free()', 'xFreeSchema()']
4Paths generated!
--------------Analysis-sqlite3BtreeSetCacheSize-@sqlite3.c@line: 60700.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSetCachesize()']
1Paths generated!
--------------Analysis-sqlite3BtreeSetSpillSize-@sqlite3.c@line: 60719.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSetSpillsize()']
1Paths generated!
--------------Analysis-sqlite3BtreeSetMmapLimit-@sqlite3.c@line: 60734.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSetMmapLimit()']
1Paths generated!
--------------Analysis-sqlite3BtreeSetPagerFlags-@sqlite3.c@line: 60753.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSetFlags()']
1Paths generated!
--------------Analysis-sqlite3BtreeSetPageSize-@sqlite3.c@line: 60786.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSetPagesize()']
['assert()', 'f_entry()', 'f_exit()', 'freeTempSpace()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSetPagesize()']
2Paths generated!
--------------Analysis-sqlite3BtreeGetPageSize-@sqlite3.c@line: 60819.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeGetReserveNoMutex-@sqlite3.c@line: 60834.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeGetOptimalReserve-@sqlite3.c@line: 60850.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetReserveNoMutex()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3BtreeMaxPageCount-@sqlite3.c@line: 60867.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerMaxPageCount()']
1Paths generated!
--------------Analysis-sqlite3BtreeSecureDelete-@sqlite3.c@line: 60880.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3BtreeSetAutoVacuum-@sqlite3.c@line: 60899.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3BtreeGetAutoVacuum-@sqlite3.c@line: 60923.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-lockBtree-@sqlite3.c@line: 60949.....

['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'memcmp()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerPagecount()', 'sqlite3PagerSharedLock()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'memcmp()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerPagecount()', 'sqlite3PagerSharedLock()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'freeTempSpace()', 'memcmp()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerPagecount()', 'sqlite3PagerSetPagesize()', 'sqlite3PagerSharedLock()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'freeTempSpace()', 'memcmp()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerOpenWal()', 'sqlite3PagerPagecount()', 'sqlite3PagerSetPagesize()', 'sqlite3PagerSharedLock()']
4Paths generated!
--------------Analysis-unlockBtreeIfUnused-@sqlite3.c@line: 61163.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'releasePageNotNull()']
2Paths generated!
--------------Analysis-newDatabase-@sqlite3.c@line: 61180.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'zeroPage()']
1Paths generated!
--------------Analysis-sqlite3BtreeNewDb-@sqlite3.c@line: 61224.....

['f_entry()', 'f_exit()', 'newDatabase()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3BtreeBeginTrans-@sqlite3.c@line: 61268.....

['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerOpenSavepoint()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerOpenSavepoint()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'unlockBtreeIfUnused()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerBegin()', 'sqlite3PagerOpenSavepoint()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeInvokeBusyHandler()', 'f_entry()', 'f_exit()', 'lockBtree()', 'newDatabase()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerBegin()', 'sqlite3PagerOpenSavepoint()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
8Paths generated!
--------------Analysis-setChildPtrmaps-@sqlite3.c@line: 61415.....

['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()']
['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'ptrmapPut()', 'sqlite3Get4byte()']
['__builtin_bswap16()', 'assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'ptrmapPutOvflPtr()']
['__builtin_bswap16()', 'assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'sqlite3Get4byte()']
4Paths generated!
--------------Analysis-modifyPagePointer-@sqlite3.c@line: 61465.....

['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()']
['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3Put4byte()']
['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3Put4byte()']
['__builtin_bswap16()', 'assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()']
['__builtin_bswap16()', 'assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3Put4byte()']
['__builtin_bswap16()', 'assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'xParseCell()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3Put4byte()']
9Paths generated!
--------------Analysis-relocatePage-@sqlite3.c@line: 61527.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3PagerMovepage()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'modifyPagePointer()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerMovepage()', 'sqlite3PagerWrite()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'modifyPagePointer()', 'ptrmapPut()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerMovepage()', 'sqlite3PagerWrite()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapPut()', 'sqlite3Get4byte()', 'sqlite3PagerMovepage()']
['assert()', 'f_entry()', 'f_exit()', 'setChildPtrmaps()', 'sqlite3PagerMovepage()']
5Paths generated!
--------------Analysis-incrVacuumStep-@sqlite3.c@line: 61620.....

['assert()', 'f_entry()', 'f_exit()', 'ptrmapPageno()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapGet()', 'ptrmapPageno()', 'sqlite3Get4byte()']
['allocateBtreePage()', 'assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'ptrmapGet()', 'ptrmapPageno()', 'releasePage()', 'relocatePage()', 'sqlite3Get4byte()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'ptrmapGet()', 'ptrmapPageno()', 'releasePage()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'ptrmapGet()', 'ptrmapPageno()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
5Paths generated!
--------------Analysis-finalDbSize-@sqlite3.c@line: 61716.....

['f_entry()', 'f_exit()', 'ptrmapPageno()']
1Paths generated!
--------------Analysis-sqlite3BtreeIncrVacuum-@sqlite3.c@line: 61742.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'saveAllCursors()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'saveAllCursors()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'incrVacuumStep()', 'invalidateAllOverflowCache()', 'saveAllCursors()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
6Paths generated!
--------------Analysis-autoVacuumCommit-@sqlite3.c@line: 61784.....

['assert()', 'f_entry()', 'f_exit()', 'invalidateAllOverflowCache()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'sqlite3Get4byte()', 'sqlite3PagerRollback()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'incrVacuumStep()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'saveAllCursors()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'finalDbSize()', 'incrVacuumStep()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'saveAllCursors()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRollback()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
8Paths generated!
--------------Analysis-sqlite3BtreeCommitPhaseOne-@sqlite3.c@line: 61863.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerCommitPhaseOne()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerCommitPhaseOne()', 'sqlite3PagerTruncateImage()']
['autoVacuumCommit()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerCommitPhaseOne()']
4Paths generated!
--------------Analysis-btreeEndTransaction-@sqlite3.c@line: 61890.....

['assert()', 'f_entry()', 'f_exit()', 'unlockBtreeIfUnused()']
['assert()', 'clearAllSharedCacheTableLocks()', 'f_entry()', 'f_exit()', 'unlockBtreeIfUnused()']
['assert()', 'downgradeAllSharedCacheTableLocks()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-sqlite3BtreeCommitPhaseTwo-@sqlite3.c@line: 61952.....

['assert()', 'btreeEndTransaction()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'btreeClearHasContent()', 'btreeEndTransaction()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerCommitPhaseTwo()']
2Paths generated!
--------------Analysis-sqlite3BtreeCommit-@sqlite3.c@line: 61984.....

['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
2Paths generated!
--------------Analysis-sqlite3BtreeTripAllCursors-@sqlite3.c@line: 62021.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeClearCursor()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'f_entry()', 'f_exit()', 'saveCursorPosition()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'f_entry()', 'f_exit()', 'saveCursorPosition()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeTripAllCursors()']
6Paths generated!
--------------Analysis-sqlite3BtreeRollback-@sqlite3.c@line: 62064.....

['assert()', 'btreeEndTransaction()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'btreeClearHasContent()', 'btreeEndTransaction()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerRollback()']
['assert()', 'btreeClearHasContent()', 'btreeEndTransaction()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerRollback()']
['assert()', 'btreeClearHasContent()', 'btreeEndTransaction()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerPagecount()', 'sqlite3PagerRollback()']
['assert()', 'btreeClearHasContent()', 'btreeEndTransaction()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeTripAllCursors()', 'sqlite3Get4byte()', 'sqlite3PagerPagecount()', 'sqlite3PagerRollback()']
['assert()', 'btreeClearHasContent()', 'btreeEndTransaction()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'releasePage()', 'saveAllCursors()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerPagecount()', 'sqlite3PagerRollback()']
6Paths generated!
--------------Analysis-sqlite3BtreeBeginStmt-@sqlite3.c@line: 62133.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerOpenSavepoint()']
1Paths generated!
--------------Analysis-sqlite3BtreeSavepoint-@sqlite3.c@line: 62164.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerSavepoint()']
['assert()', 'f_entry()', 'f_exit()', 'newDatabase()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()', 'sqlite3PagerSavepoint()']
3Paths generated!
--------------Analysis-btreeCursor-@sqlite3.c@line: 62231.....

['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()']
['allocateTempSpace()', 'assert()', 'btreePagecount()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3BtreeCursor-@sqlite3.c@line: 62291.....

['btreeCursor()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['f_entry()', 'f_exit()', 'sqlite3CorruptError()']
2Paths generated!
--------------Analysis-sqlite3BtreeCursorSize-@sqlite3.c@line: 62317.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeCursorZero-@sqlite3.c@line: 62329.....

['f_entry()', 'f_exit()', 'memset()']
1Paths generated!
--------------Analysis-sqlite3BtreeCloseCursor-@sqlite3.c@line: 62337.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeClearCursor()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3_free()', 'unlockBtreeIfUnused()']
['assert()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3BtreeClearCursor()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3_free()', 'unlockBtreeIfUnused()']
3Paths generated!
--------------Analysis-getCellInfo-@sqlite3.c@line: 62387.....

['f_entry()', 'f_exit()']
['btreeParseCell()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3BtreeIntegerKey-@sqlite3.c@line: 62414.....

['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()']
1Paths generated!
--------------Analysis-sqlite3BtreePayloadSize-@sqlite3.c@line: 62431.....

['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()']
1Paths generated!
--------------Analysis-getOverflowPage-@sqlite3.c@line: 62457.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'releasePage()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()']
['assert()', 'btreeGetPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'releasePage()', 'sqlite3Get4byte()']
['assert()', 'btreeGetPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'ptrmapGet()', 'ptrmapPageno()', 'releasePage()', 'sqlite3Get4byte()']
6Paths generated!
--------------Analysis-copyPayload-@sqlite3.c@line: 62525.....

['f_entry()', 'f_exit()', 'memcpy()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3PagerWrite()']
2Paths generated!
--------------Analysis-accessPayload-@sqlite3.c@line: 62576.....

['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()']
['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()', 'sqlite3CorruptError()']
['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()', 'getOverflowPage()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()', 'memset()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'getCellInfo()', 'sqlite3Get4byte()', 'sqlite3Realloc()']
['assert()', 'copyPayload()', 'f_entry()', 'f_exit()', 'getCellInfo()']
7Paths generated!
--------------Analysis-sqlite3BtreeKey-@sqlite3.c@line: 62787.....

['accessPayload()', 'assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeData-@sqlite3.c@line: 62804.....

['assert()', 'f_entry()', 'f_exit()']
['accessPayload()', 'assert()', 'f_entry()', 'f_exit()']
['assert()', 'btreeRestoreCursorPosition()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-fetchPayload-@sqlite3.c@line: 62843.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreePayloadFetch-@sqlite3.c@line: 62877.....

['f_entry()', 'f_exit()', 'fetchPayload()']
1Paths generated!
--------------Analysis-moveToChild-@sqlite3.c@line: 62891.....

['assert()', 'f_entry()', 'f_exit()', 'getAndInitPage()']
['assert()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'sqlite3CorruptError()']
2Paths generated!
--------------Analysis-moveToParent-@sqlite3.c@line: 62939.....

['assert()', 'f_entry()', 'f_exit()', 'releasePageNotNull()']
1Paths generated!
--------------Analysis-moveToRoot-@sqlite3.c@line: 62976.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()']
['assert()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'moveToChild()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'releasePageNotNull()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'sqlite3BtreeClearCursor()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'releasePageNotNull()', 'sqlite3BtreeClearCursor()', 'sqlite3CorruptError()', 'sqlite3Get4byte()']
8Paths generated!
--------------Analysis-moveToLeftmost-@sqlite3.c@line: 63054.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'sqlite3Get4byte()']
2Paths generated!
--------------Analysis-moveToRightmost-@sqlite3.c@line: 63079.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'sqlite3Get4byte()']
2Paths generated!
--------------Analysis-sqlite3BtreeFirst-@sqlite3.c@line: 63102.....

['assert()', 'f_entry()', 'f_exit()', 'moveToRoot()']
['assert()', 'f_entry()', 'f_exit()', 'moveToLeftmost()', 'moveToRoot()']
2Paths generated!
--------------Analysis-sqlite3BtreeLast-@sqlite3.c@line: 63125.....

['assert()', 'f_entry()', 'f_exit()', 'moveToRoot()']
['assert()', 'f_entry()', 'f_exit()', 'moveToRightmost()', 'moveToRoot()']
2Paths generated!
--------------Analysis-sqlite3BtreeMovetoUnpacked-@sqlite3.c@line: 63196.....

['assert()', 'f_entry()', 'f_exit()', 'moveToRoot()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3Get4byte()']
['__builtin_bswap16()', 'accessPayload()', 'assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3Get4byte()', 'sqlite3Malloc()', 'sqlite3_free()', 'xParseCell()', 'xRecordCompare()']
['__builtin_bswap16()', 'accessPayload()', 'assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3Malloc()', 'sqlite3_free()', 'xParseCell()', 'xRecordCompare()']
['__builtin_bswap16()', 'assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3Get4byte()', 'xRecordCompare()']
['__builtin_bswap16()', 'assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3Get4byte()', 'sqlite3GetVarint()']
['__builtin_bswap16()', 'assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3GetVarint()']
['__builtin_bswap16()', 'assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3GetVarint()', 'sqlite3VdbeFindCompare()']
8Paths generated!
--------------Analysis-sqlite3BtreeEof-@sqlite3.c@line: 63421.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-btreeNext-@sqlite3.c@line: 63450.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'moveToLeftmost()']
['assert()', 'f_entry()', 'f_exit()', 'moveToParent()']
['assert()', 'f_entry()', 'f_exit()', 'moveToParent()', 'sqlite3BtreeNext()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToLeftmost()', 'moveToParent()', 'sqlite3BtreeNext()']
['assert()', 'btreeRestoreCursorPosition()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToLeftmost()', 'moveToParent()', 'sqlite3BtreeNext()']
6Paths generated!
--------------Analysis-sqlite3BtreeNext-@sqlite3.c@line: 63517.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'moveToLeftmost()']
['assert()', 'btreeNext()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-btreePrevious-@sqlite3.c@line: 63560.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePrevious()']
['assert()', 'f_entry()', 'f_exit()', 'moveToParent()', 'sqlite3BtreePrevious()']
['assert()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRightmost()']
['assert()', 'btreeRestoreCursorPosition()', 'f_entry()', 'f_exit()', 'moveToChild()', 'moveToRightmost()']
5Paths generated!
--------------Analysis-sqlite3BtreePrevious-@sqlite3.c@line: 63619.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'btreePrevious()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-allocateBtreePage-@sqlite3.c@line: 63659.....

['assert()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetHasContent()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetHasContent()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetHasContent()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3AbsInt32()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetHasContent()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'memcpy()', 'ptrmapGet()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetUnusedPage()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'ptrmapPageno()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
12Paths generated!
--------------Analysis-freePage2-@sqlite3.c@line: 63981.....

['assert()', 'btreeGetPage()', 'btreePageLookup()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreePageLookup()', 'btreeSetHasContent()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreePageLookup()', 'btreeSetHasContent()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerDontWrite()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreePageLookup()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreePageLookup()', 'f_entry()', 'f_exit()', 'ptrmapPut()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreePageLookup()', 'f_entry()', 'f_exit()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreeSetHasContent()', 'f_entry()', 'f_exit()', 'memset()', 'ptrmapPut()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerDontWrite()', 'sqlite3PagerRef()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'btreeGetPage()', 'btreePageLookup()', 'btreeSetHasContent()', 'f_entry()', 'f_exit()', 'memset()', 'ptrmapPut()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerDontWrite()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
8Paths generated!
--------------Analysis-freePage-@sqlite3.c@line: 64109.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'freePage2()']
2Paths generated!
--------------Analysis-clearCell-@sqlite3.c@line: 64120.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'xParseCell()']
['assert()', 'btreePageLookup()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'freePage2()', 'sqlite3Get4byte()', 'sqlite3PagerPageRefcount()', 'xParseCell()']
['assert()', 'btreePageLookup()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'freePage2()', 'sqlite3Get4byte()', 'sqlite3PagerPageRefcount()', 'sqlite3PagerUnref()', 'xParseCell()']
['assert()', 'btreePageLookup()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerPageRefcount()', 'xParseCell()']
['assert()', 'btreePageLookup()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'getOverflowPage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerPageRefcount()', 'sqlite3PagerUnref()', 'xParseCell()']
['assert()', 'btreePageLookup()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerPageRefcount()', 'sqlite3PagerUnref()', 'xParseCell()']
6Paths generated!
--------------Analysis-fillInCell-@sqlite3.c@line: 64201.....

['assert()', 'f_entry()', 'f_exit()', 'releasePage()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'releasePage()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3Put4byte()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'ptrmapPut()', 'releasePage()', 'sqlite3Put4byte()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'ptrmapPageno()', 'ptrmapPut()', 'releasePage()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3PutVarint()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'ptrmapPageno()', 'ptrmapPut()', 'releasePage()', 'sqlite3Put4byte()', 'sqlite3PutVarint()']
8Paths generated!
--------------Analysis-dropCell-@sqlite3.c@line: 64380.....

['assert()', 'f_entry()', 'f_exit()', 'freeSpace()', 'memmove()']
['assert()', 'f_entry()', 'f_exit()', 'freeSpace()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'freeSpace()', 'memset()', 'sqlite3CorruptError()']
3Paths generated!
--------------Analysis-insertCell-@sqlite3.c@line: 64436.....

['allocateSpace()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memmove()', 'sqlite3PagerWrite()']
['allocateSpace()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memmove()', 'ptrmapPutOvflPtr()', 'sqlite3PagerWrite()']
['allocateSpace()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memmove()', 'ptrmapPutOvflPtr()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Put4byte()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
6Paths generated!
--------------Analysis-populateCellCache-@sqlite3.c@line: 64538.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xCellSize()']
2Paths generated!
--------------Analysis-computeCellSize-@sqlite3.c@line: 64556.....

['assert()', 'f_entry()', 'f_exit()', 'xCellSize()']
1Paths generated!
--------------Analysis-cachedCellSize-@sqlite3.c@line: 64562.....

['assert()', 'computeCellSize()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-rebuildPage-@sqlite3.c@line: 64581.....

['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3PagerTempSpace()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3PagerTempSpace()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3CorruptError()', 'sqlite3PagerTempSpace()']
3Paths generated!
--------------Analysis-pageInsertArray-@sqlite3.c@line: 64650.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'cachedCellSize()', 'f_entry()', 'f_exit()', 'memmove()', 'pageFindSlot()']
2Paths generated!
--------------Analysis-pageFreeArray-@sqlite3.c@line: 64696.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'freeSpace()']
['assert()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-editPage-@sqlite3.c@line: 64753.....

['f_entry()', 'f_exit()', 'pageInsertArray()', 'populateCellCache()', 'rebuildPage()']
['f_entry()', 'f_exit()', 'memmove()', 'pageInsertArray()', 'populateCellCache()', 'rebuildPage()']
['assert()', 'f_entry()', 'f_exit()', 'memmove()', 'pageInsertArray()', 'populateCellCache()', 'rebuildPage()']
['f_entry()', 'f_exit()', 'pageFreeArray()', 'pageInsertArray()', 'populateCellCache()', 'rebuildPage()']
['f_entry()', 'f_exit()', 'memmove()', 'pageFreeArray()', 'pageInsertArray()', 'populateCellCache()', 'rebuildPage()']
5Paths generated!
--------------Analysis-balance_quick-@sqlite3.c@line: 64887.....

['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()']
['__builtin_bswap16()', 'allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'rebuildPage()', 'releasePage()', 'sqlite3Put4byte()', 'xCellSize()', 'zeroPage()']
['__builtin_bswap16()', 'allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'insertCell()', 'rebuildPage()', 'releasePage()', 'sqlite3Put4byte()', 'xCellSize()', 'zeroPage()']
['__builtin_bswap16()', 'allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'insertCell()', 'ptrmapPut()', 'rebuildPage()', 'releasePage()', 'sqlite3Put4byte()', 'xCellSize()', 'zeroPage()']
['__builtin_bswap16()', 'allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'insertCell()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'rebuildPage()', 'releasePage()', 'sqlite3Put4byte()', 'xCellSize()', 'zeroPage()']
['__builtin_bswap16()', 'allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'insertCell()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'rebuildPage()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Put4byte()', 'xCellSize()', 'zeroPage()']
6Paths generated!
--------------Analysis-copyNodeContent-@sqlite3.c@line: 65031.....

['f_entry()', 'f_exit()']
['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'btreeInitPage()', 'f_entry()', 'f_exit()', 'memcpy()', 'setChildPtrmaps()']
3Paths generated!
--------------Analysis-balance_nonroot-@sqlite3.c@line: 65112.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'f_entry()', 'f_exit()', 'freePage()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'f_entry()', 'f_exit()', 'freePage()', 'memset()', 'ptrmapPut()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'f_entry()', 'f_exit()', 'freePage()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'xCellSize()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3PutVarint()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'xParseCell()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'f_entry()', 'f_exit()', 'freePage()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'f_entry()', 'f_exit()', 'freePage()', 'memset()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'copyNodeContent()', 'defragmentPage()', 'f_entry()', 'f_exit()', 'freePage()', 'memcpy()', 'memset()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['allocateBtreePage()', 'assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'zeroPage()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3Get4byte()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()']
['__builtin_bswap16()', 'assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'dropCell()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'getAndInitPage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'cachedCellSize()', 'copyNodeContent()', 'defragmentPage()', 'editPage()', 'f_entry()', 'f_exit()', 'freePage()', 'getAndInitPage()', 'insertCell()', 'memcpy()', 'memset()', 'ptrmapPut()', 'ptrmapPutOvflPtr()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3Get4byte()', 'sqlite3PagerRekey()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'sqlite3ScratchFree()', 'sqlite3ScratchMalloc()', 'xCellSize()']
24Paths generated!
--------------Analysis-balance_deeper-@sqlite3.c@line: 65876.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'zeroPage()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'releasePage()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'zeroPage()']
['allocateBtreePage()', 'assert()', 'copyNodeContent()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'zeroPage()']
['allocateBtreePage()', 'assert()', 'copyNodeContent()', 'f_entry()', 'f_exit()', 'memcpy()', 'ptrmapPut()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()', 'zeroPage()']
4Paths generated!
--------------Analysis-balance-@sqlite3.c@line: 65933.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3PageFree()']
['assert()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3PagerWrite()']
['assert()', 'balance_nonroot()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3PagerWrite()']
['assert()', 'balance_quick()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3PageFree()', 'sqlite3PagerWrite()']
['assert()', 'balance_deeper()', 'f_entry()', 'f_exit()']
6Paths generated!
--------------Analysis-sqlite3BtreeInsert-@sqlite3.c@line: 66078.....

['assert()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()']
['assert()', 'balance()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'memcpy()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'btreeMoveto()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'memcpy()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'invalidateIncrblobCursors()', 'memcpy()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'invalidateIncrblobCursors()', 'memcpy()', 'sqlite3BtreeMovetoUnpacked()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'memcpy()', 'saveAllCursors()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'fillInCell()', 'insertCell()', 'invalidateIncrblobCursors()', 'memcpy()', 'saveAllCursors()', 'sqlite3BtreeMovetoUnpacked()', 'sqlite3PagerWrite()']
9Paths generated!
--------------Analysis-sqlite3BtreeDelete-@sqlite3.c@line: 66245.....

['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'moveToRoot()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3PagerWrite()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'releasePage()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'invalidateIncrblobCursors()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'releasePage()', 'saveAllCursors()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'releasePage()', 'sqlite3BtreePrevious()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'cellSizePtr()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'balance()', 'cellSizePtr()', 'clearCell()', 'dropCell()', 'f_entry()', 'f_exit()', 'insertCell()', 'releasePage()', 'saveCursorKey()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'xCellSize()']
11Paths generated!
--------------Analysis-btreeCreateTable-@sqlite3.c@line: 66410.....

['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerUnref()', 'zeroPage()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'ptrmapPut()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()', 'sqlite3PagerUnref()', 'zeroPage()']
['allocateBtreePage()', 'assert()', 'f_entry()', 'f_exit()', 'invalidateAllOverflowCache()', 'ptrmapPageno()', 'ptrmapPut()', 'releasePage()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()', 'sqlite3PagerUnref()', 'zeroPage()']
['allocateBtreePage()', 'assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'invalidateAllOverflowCache()', 'ptrmapGet()', 'ptrmapPageno()', 'ptrmapPut()', 'releasePage()', 'relocatePage()', 'saveAllCursors()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'zeroPage()']
['allocateBtreePage()', 'assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'invalidateAllOverflowCache()', 'ptrmapGet()', 'ptrmapPageno()', 'ptrmapPut()', 'releasePage()', 'relocatePage()', 'saveAllCursors()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()', 'sqlite3CorruptError()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'zeroPage()']
5Paths generated!
--------------Analysis-sqlite3BtreeCreateTable-@sqlite3.c@line: 66553.....

['btreeCreateTable()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-clearDatabasePage-@sqlite3.c@line: 66565.....

['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'releasePage()', 'sqlite3PagerWrite()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'releasePage()', 'sqlite3PagerWrite()', 'zeroPage()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'freePage()', 'getAndInitPage()', 'releasePage()']
['assert()', 'btreePagecount()', 'clearDatabasePage()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'releasePage()', 'sqlite3PagerWrite()', 'zeroPage()']
['__builtin_bswap16()', 'assert()', 'btreePagecount()', 'clearCell()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'releasePage()', 'sqlite3PagerWrite()', 'zeroPage()']
['__builtin_bswap16()', 'assert()', 'btreePagecount()', 'clearCell()', 'clearDatabasePage()', 'f_entry()', 'f_exit()', 'freePage()', 'getAndInitPage()', 'releasePage()']
['assert()', 'btreePagecount()', 'f_entry()', 'f_exit()', 'getAndInitPage()', 'releasePage()', 'sqlite3CorruptError()', 'sqlite3PagerWrite()', 'zeroPage()']
['__builtin_bswap16()', 'assert()', 'btreePagecount()', 'clearCell()', 'clearDatabasePage()', 'f_entry()', 'f_exit()', 'freePage()', 'getAndInitPage()', 'releasePage()', 'sqlite3CorruptError()']
8Paths generated!
--------------Analysis-sqlite3BtreeClearTable-@sqlite3.c@line: 66632.....

['assert()', 'f_entry()', 'f_exit()', 'saveAllCursors()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'clearDatabasePage()', 'f_entry()', 'f_exit()', 'invalidateIncrblobCursors()', 'saveAllCursors()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
2Paths generated!
--------------Analysis-sqlite3BtreeClearTableOfCursor-@sqlite3.c@line: 66656.....

['f_entry()', 'f_exit()', 'sqlite3BtreeClearTable()']
1Paths generated!
--------------Analysis-btreeDropTable-@sqlite3.c@line: 66680.....

['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'freePage()', 'releasePage()', 'sqlite3BtreeClearTable()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'freePage()', 'ptrmapPageno()', 'releasePage()', 'relocatePage()', 'sqlite3BtreeClearTable()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'freePage()', 'ptrmapPageno()', 'releasePage()', 'sqlite3BtreeClearTable()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()']
['assert()', 'btreeGetPage()', 'f_entry()', 'f_exit()', 'freePage()', 'ptrmapPageno()', 'releasePage()', 'sqlite3BtreeClearTable()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeUpdateMeta()', 'sqlite3CorruptError()']
4Paths generated!
--------------Analysis-sqlite3BtreeDropTable-@sqlite3.c@line: 66782.....

['btreeDropTable()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3BtreeGetMeta-@sqlite3.c@line: 66811.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3Get4byte()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerDataVersion()']
2Paths generated!
--------------Analysis-sqlite3BtreeUpdateMeta-@sqlite3.c@line: 66841.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerWrite()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
2Paths generated!
--------------Analysis-sqlite3BtreeCount-@sqlite3.c@line: 66874.....

['f_entry()', 'f_exit()', 'moveToRoot()']
['f_entry()', 'f_exit()', 'moveToChild()', 'moveToRoot()']
['f_entry()', 'f_exit()', 'moveToChild()', 'moveToParent()', 'moveToRoot()']
3Paths generated!
--------------Analysis-sqlite3BtreePager-@sqlite3.c@line: 66944.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-checkAppendMsg-@sqlite3.c@line: 66952.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3VXPrintf()']
['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3VXPrintf()', 'sqlite3XPrintf()']
['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3VXPrintf()']
3Paths generated!
--------------Analysis-getPageReferenced-@sqlite3.c@line: 66982.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-setPageReferenced-@sqlite3.c@line: 66990.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-checkRef-@sqlite3.c@line: 67004.....

['f_entry()', 'f_exit()', 'getPageReferenced()', 'setPageReferenced()']
['checkAppendMsg()', 'f_entry()', 'f_exit()', 'getPageReferenced()', 'setPageReferenced()']
2Paths generated!
--------------Analysis-checkPtrmap-@sqlite3.c@line: 67024.....

['f_entry()', 'f_exit()', 'ptrmapGet()']
['checkAppendMsg()', 'f_entry()', 'f_exit()', 'ptrmapGet()']
2Paths generated!
--------------Analysis-checkList-@sqlite3.c@line: 67053.....

['f_entry()', 'f_exit()']
['checkRef()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
['checkAppendMsg()', 'checkRef()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
['checkAppendMsg()', 'checkPtrmap()', 'checkRef()', 'f_entry()', 'f_exit()', 'sqlite3Get4byte()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerUnref()']
4Paths generated!
--------------Analysis-btreeHeapInsert-@sqlite3.c@line: 67145.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-btreeHeapPull-@sqlite3.c@line: 67155.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-checkTreePage-@sqlite3.c@line: 67189.....

['assert()', 'btreeGetPage()', 'btreeInitPage()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()']
['assert()', 'btreeGetPage()', 'btreeHeapPull()', 'btreeInitPage()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()']
['assert()', 'btreeGetPage()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()']
['assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()', 'xCellSize()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeInitPage()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeInitPage()', 'checkRef()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeInitPage()', 'checkAppendMsg()', 'checkRef()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkPtrmap()', 'checkRef()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'xCellSize()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkList()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'xCellSize()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkList()', 'checkPtrmap()', 'checkRef()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()', 'xCellSize()', 'xParseCell()']
['__builtin_bswap16()', 'assert()', 'btreeGetPage()', 'btreeHeapInsert()', 'btreeHeapPull()', 'btreeInitPage()', 'checkAppendMsg()', 'checkRef()', 'f_entry()', 'f_exit()', 'releasePage()', 'xCellSize()', 'xParseCell()']
['assert()', 'btreeGetPage()', 'btreeInitPage()', 'checkRef()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'releasePage()', 'sqlite3Get4byte()']
13Paths generated!
--------------Analysis-sqlite3BtreeIntegrityCheck-@sqlite3.c@line: 67453.....

['assert()', 'btreePagecount()', 'checkList()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3_free()']
['assert()', 'btreePagecount()', 'checkList()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3_free()']
['assert()', 'btreePagecount()', 'checkList()', 'f_entry()', 'f_exit()', 'getPageReferenced()', 'ptrmapPageno()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3_free()']
['assert()', 'btreePagecount()', 'checkAppendMsg()', 'checkList()', 'f_entry()', 'f_exit()', 'getPageReferenced()', 'ptrmapPageno()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3_free()']
['assert()', 'btreePagecount()', 'checkList()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3_free()']
['assert()', 'btreePagecount()', 'checkAppendMsg()', 'checkList()', 'checkPtrmap()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'getPageReferenced()', 'ptrmapPageno()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3_free()']
['assert()', 'btreePagecount()', 'checkAppendMsg()', 'checkList()', 'checkPtrmap()', 'checkTreePage()', 'f_entry()', 'f_exit()', 'getPageReferenced()', 'ptrmapPageno()', 'setPageReferenced()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3MallocZero()', 'sqlite3PageFree()', 'sqlite3PageMalloc()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3_free()']
7Paths generated!
--------------Analysis-sqlite3BtreeGetFilename-@sqlite3.c@line: 67572.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerFilename()']
1Paths generated!
--------------Analysis-sqlite3BtreeGetJournalname-@sqlite3.c@line: 67585.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerJournalname()']
1Paths generated!
--------------Analysis-sqlite3BtreeIsInTrans-@sqlite3.c@line: 67593.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeCheckpoint-@sqlite3.c@line: 67607.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerCheckpoint()']
3Paths generated!
--------------Analysis-sqlite3BtreeIsInReadTrans-@sqlite3.c@line: 67626.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeIsInBackup-@sqlite3.c@line: 67632.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeSchema-@sqlite3.c@line: 67658.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3DbMallocZero()']
2Paths generated!
--------------Analysis-sqlite3BtreeSchemaLocked-@sqlite3.c@line: 67674.....

['assert()', 'f_entry()', 'f_exit()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
1Paths generated!
--------------Analysis-sqlite3BtreeLockTable-@sqlite3.c@line: 67691.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'querySharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
['assert()', 'f_entry()', 'f_exit()', 'querySharedCacheTableLock()', 'setSharedCacheTableLock()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()']
3Paths generated!
--------------Analysis-sqlite3BtreePutData-@sqlite3.c@line: 67721.....

['accessPayload()', 'assert()', 'f_entry()', 'f_exit()', 'saveAllCursors()']
['accessPayload()', 'assert()', 'btreeRestoreCursorPosition()', 'f_entry()', 'f_exit()', 'saveAllCursors()']
2Paths generated!
--------------Analysis-sqlite3BtreeIncrblobCursor-@sqlite3.c@line: 67769.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeSetVersion-@sqlite3.c@line: 67780.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3PagerWrite()']
2Paths generated!
--------------Analysis-sqlite3BtreeCursorHasHint-@sqlite3.c@line: 67815.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeIsReadonly-@sqlite3.c@line: 67822.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3HeaderSizeBtree-@sqlite3.c@line: 67829.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeSharable-@sqlite3.c@line: 67835.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BtreeConnectionCount-@sqlite3.c@line: 67844.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-findBtree-@sqlite3.c@line: 67933.....

['f_entry()', 'f_exit()', 'sqlite3FindDbName()']
['f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3FindDbName()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3FindDbName()', 'sqlite3OpenTempDatabase()', 'sqlite3ParserReset()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3FindDbName()', 'sqlite3OpenTempDatabase()', 'sqlite3ParserReset()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3FindDbName()']
5Paths generated!
--------------Analysis-setDestPgsz-@sqlite3.c@line: 67970.....

['f_entry()', 'f_exit()', 'sqlite3BtreeSetPageSize()']
1Paths generated!
--------------Analysis-checkReadTransaction-@sqlite3.c@line: 67982.....

['f_entry()', 'f_exit()', 'sqlite3BtreeIsInReadTrans()']
['f_entry()', 'f_exit()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3ErrorWithMsg()']
2Paths generated!
--------------Analysis-sqlite3_backup_init-@sqlite3.c@line: 67998.....

['f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['checkReadTransaction()', 'f_entry()', 'f_exit()', 'findBtree()', 'setDestPgsz()', 'sqlite3MallocZero()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['checkReadTransaction()', 'f_entry()', 'f_exit()', 'findBtree()', 'setDestPgsz()', 'sqlite3MallocZero()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3MallocZero()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
5Paths generated!
--------------Analysis-isFatalError-@sqlite3.c@line: 68076.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-backupOnePage-@sqlite3.c@line: 68085.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreePager()', 'sqlite3PagerIsMemdb()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreePager()', 'sqlite3PagerGet()', 'sqlite3PagerIsMemdb()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreePager()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerIsMemdb()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreePager()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerIsMemdb()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'sqlite3Put4byte()']
4Paths generated!
--------------Analysis-backupTruncateFile-@sqlite3.c@line: 68181.....

['f_entry()', 'f_exit()', 'sqlite3OsFileSize()']
['f_entry()', 'f_exit()', 'sqlite3OsFileSize()', 'sqlite3OsTruncate()']
2Paths generated!
--------------Analysis-attachBackupObject-@sqlite3.c@line: 68194.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PagerBackupPtr()']
1Paths generated!
--------------Analysis-sqlite3_backup_step-@sqlite3.c@line: 68206.....

['f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerCommitPhaseOne()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerTruncateImage()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerFile()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerFile()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3PagerSync()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'backupTruncateFile()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerFile()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerFile()', 'sqlite3PagerGet()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3PagerUnref()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'backupTruncateFile()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3OsWrite()', 'sqlite3PagerFile()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3PagerSync()', 'sqlite3PagerUnref()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerCommitPhaseOne()', 'sqlite3PagerFile()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerFile()', 'sqlite3PagerGet()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerFile()', 'sqlite3PagerGet()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3BtreeSetVersion()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerGetJournalMode()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3BtreeUpdateMeta()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreeNewDb()', 'sqlite3BtreePager()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'attachBackupObject()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerGet()', 'sqlite3PagerGetJournalMode()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'backupOnePage()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerGet()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerUnref()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'attachBackupObject()', 'backupOnePage()', 'backupTruncateFile()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreeNewDb()', 'sqlite3BtreePager()', 'sqlite3BtreeSetVersion()', 'sqlite3BtreeUpdateMeta()', 'sqlite3OsWrite()', 'sqlite3PagerCommitPhaseOne()', 'sqlite3PagerFile()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3PagerSync()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'attachBackupObject()', 'backupOnePage()', 'backupTruncateFile()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3BtreeNewDb()', 'sqlite3BtreePager()', 'sqlite3BtreeSetVersion()', 'sqlite3BtreeUpdateMeta()', 'sqlite3OsWrite()', 'sqlite3PagerCommitPhaseOne()', 'sqlite3PagerFile()', 'sqlite3PagerGet()', 'sqlite3PagerGetData()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerPagecount()', 'sqlite3PagerSync()', 'sqlite3PagerUnref()', 'sqlite3PagerWrite()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
21Paths generated!
--------------Analysis-sqlite3_backup_finish-@sqlite3.c@line: 68450.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3_mutex_enter()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3_free()', 'sqlite3_mutex_enter()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3Error()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3_free()', 'sqlite3_mutex_enter()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeRollback()', 'sqlite3Error()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3PagerBackupPtr()', 'sqlite3_free()', 'sqlite3_mutex_enter()']
4Paths generated!
--------------Analysis-sqlite3_backup_remaining-@sqlite3.c@line: 68502.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_backup_pagecount-@sqlite3.c@line: 68516.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-backupUpdate-@sqlite3.c@line: 68538.....

['assert()', 'f_entry()', 'f_exit()', 'isFatalError()']
['assert()', 'backupOnePage()', 'f_entry()', 'f_exit()', 'isFatalError()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3BackupUpdate-@sqlite3.c@line: 68563.....

['f_entry()', 'f_exit()']
['backupUpdate()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3BackupRestart-@sqlite3.c@line: 68578.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3BtreeCopyFile-@sqlite3.c@line: 68595.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerFile()', 'sqlite3_backup_finish()', 'sqlite3_backup_step()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerClearCache()', 'sqlite3PagerFile()', 'sqlite3_backup_finish()', 'sqlite3_backup_step()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetPageSize()', 'sqlite3BtreeLastPage()', 'sqlite3BtreeLeave()', 'sqlite3OsFileControl()', 'sqlite3PagerClearCache()', 'sqlite3PagerFile()', 'sqlite3_backup_finish()', 'sqlite3_backup_step()']
3Paths generated!
--------------Analysis-sqlite3VdbeChangeEncoding-@sqlite3.c@line: 68732.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemTranslate()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemGrow-@sqlite3.c@line: 68767.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xDel()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocSize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3VdbeMemSetNull()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3VdbeMemSetNull()', 'xDel()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocSize()', 'sqlite3DbReallocOrFree()', 'xDel()']
7Paths generated!
--------------Analysis-sqlite3VdbeMemClearAndResize-@sqlite3.c@line: 68824.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemGrow()']
2Paths generated!
--------------Analysis-sqlite3VdbeMemMakeWriteable-@sqlite3.c@line: 68842.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemGrow()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemExpandBlob()']
3Paths generated!
--------------Analysis-sqlite3VdbeMemExpandBlob-@sqlite3.c@line: 68869.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3VdbeMemGrow()']
2Paths generated!
--------------Analysis-vdbeMemAddTerminator-@sqlite3.c@line: 68897.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemGrow()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemNulTerminate-@sqlite3.c@line: 68910.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMemAddTerminator()']
2Paths generated!
--------------Analysis-sqlite3VdbeMemStringify-@sqlite3.c@line: 68935.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3_snprintf()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemFinalize-@sqlite3.c@line: 68979.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'xFinalize()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'xFinalize()']
3Paths generated!
--------------Analysis-vdbeMemClearExternAndSetNull-@sqlite3.c@line: 69011.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3RowSetClear()']
['assert()', 'f_entry()', 'f_exit()', 'xDel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemFinalize()']
4Paths generated!
--------------Analysis-vdbeMemClear-@sqlite3.c@line: 69041.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'vdbeMemClearExternAndSetNull()']
3Paths generated!
--------------Analysis-sqlite3VdbeMemRelease-@sqlite3.c@line: 69062.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMemClear()']
2Paths generated!
--------------Analysis-doubleToInt64-@sqlite3.c@line: 69074.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeIntValue-@sqlite3.c@line: 69110.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi64()']
['assert()', 'doubleToInt64()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-sqlite3VdbeRealValue-@sqlite3.c@line: 69135.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()']
2Paths generated!
--------------Analysis-sqlite3VdbeIntegerAffinity-@sqlite3.c@line: 69157.....

['assert()', 'doubleToInt64()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemIntegerify-@sqlite3.c@line: 69185.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeIntValue()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemRealify-@sqlite3.c@line: 69199.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeRealValue()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemNumerify-@sqlite3.c@line: 69216.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi64()', 'sqlite3VdbeIntegerAffinity()', 'sqlite3VdbeRealValue()']
3Paths generated!
--------------Analysis-sqlite3VdbeMemCast-@sqlite3.c@line: 69240.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemInit-@sqlite3.c@line: 69282.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemSetNull-@sqlite3.c@line: 69302.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'vdbeMemClearExternAndSetNull()']
2Paths generated!
--------------Analysis-sqlite3ValueSetNull-@sqlite3.c@line: 69309.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetNull()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemSetZeroBlob-@sqlite3.c@line: 69317.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemRelease()']
1Paths generated!
--------------Analysis-vdbeReleaseAndSetInt64-@sqlite3.c@line: 69332.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetNull()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemSetInt64-@sqlite3.c@line: 69342.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'vdbeReleaseAndSetInt64()']
2Paths generated!
--------------Analysis-sqlite3VdbeMemSetDouble-@sqlite3.c@line: 69356.....

['f_entry()', 'f_exit()', 'sqlite3IsNaN()', 'sqlite3VdbeMemSetNull()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemSetRowSet-@sqlite3.c@line: 69369.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3VdbeMemRelease()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocSize()', 'sqlite3RowSetInit()', 'sqlite3VdbeMemRelease()']
2Paths generated!
--------------Analysis-sqlite3VdbeMemTooBig-@sqlite3.c@line: 69391.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeClrCopy-@sqlite3.c@line: 69432.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemShallowCopy()', 'vdbeMemClearExternAndSetNull()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemShallowCopy-@sqlite3.c@line: 69437.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'vdbeClrCopy()']
2Paths generated!
--------------Analysis-sqlite3VdbeMemCopy-@sqlite3.c@line: 69453.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VdbeMemMakeWriteable()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VdbeMemMakeWriteable()', 'vdbeMemClearExternAndSetNull()']
3Paths generated!
--------------Analysis-sqlite3VdbeMemMove-@sqlite3.c@line: 69476.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VdbeMemRelease()']
1Paths generated!
--------------Analysis-sqlite3VdbeMemSetStr-@sqlite3.c@line: 69502.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemHandleBom()', 'sqlite3VdbeMemRelease()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocSize()', 'sqlite3VdbeMemHandleBom()', 'sqlite3VdbeMemRelease()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3VdbeMemHandleBom()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3VdbeMemHandleBom()', 'sqlite3VdbeMemRelease()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemHandleBom()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeMemSetNull()']
5Paths generated!
--------------Analysis-vdbeMemFromBtreeResize-@sqlite3.c@line: 69602.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemClearAndResize()']
['f_entry()', 'f_exit()', 'sqlite3BtreeData()', 'sqlite3VdbeMemClearAndResize()']
['f_entry()', 'f_exit()', 'sqlite3BtreeData()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3VdbeMemRelease()']
['f_entry()', 'f_exit()', 'sqlite3BtreeKey()', 'sqlite3VdbeMemClearAndResize()']
4Paths generated!
--------------Analysis-sqlite3VdbeMemFromBtree-@sqlite3.c@line: 69628.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadFetch()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadFetch()', 'vdbeMemFromBtreeResize()']
2Paths generated!
--------------Analysis-valueToText-@sqlite3.c@line: 69664.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemStringify()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemNulTerminate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemMakeWriteable()', 'sqlite3VdbeMemNulTerminate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemNulTerminate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemExpandBlob()', 'sqlite3VdbeMemNulTerminate()']
5Paths generated!
--------------Analysis-sqlite3ValueText-@sqlite3.c@line: 69708.....

['assert()', 'f_entry()', 'f_exit()', 'valueToText()']
1Paths generated!
--------------Analysis-sqlite3ValueNew-@sqlite3.c@line: 69725.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
1Paths generated!
--------------Analysis-valueNew-@sqlite3.c@line: 69756.....

['f_entry()', 'f_exit()', 'sqlite3ValueNew()']
1Paths generated!
--------------Analysis-valueFromExpr-@sqlite3.c@line: 69912.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3Strlen30()', 'sqlite3ValueFree()', 'sqlite3VdbeMemSetStr()', 'valueNew()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueFree()', 'valueNew()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueFree()', 'sqlite3ValueFromExpr()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueApplyAffinity()', 'sqlite3ValueFree()', 'sqlite3ValueFromExpr()', 'sqlite3VdbeMemNumerify()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ValueApplyAffinity()', 'sqlite3ValueFree()', 'sqlite3ValueSetStr()', 'valueNew()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ValueApplyAffinity()', 'sqlite3ValueFree()', 'sqlite3ValueSetStr()', 'sqlite3VdbeChangeEncoding()', 'valueNew()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueApplyAffinity()', 'sqlite3ValueFree()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemSetInt64()', 'valueNew()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AffinityType()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueFree()', 'valueFromExpr()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AffinityType()', 'sqlite3DbFree()', 'sqlite3OomFault()', 'sqlite3ValueApplyAffinity()', 'sqlite3ValueFree()', 'sqlite3VdbeMemCast()', 'valueFromExpr()']
10Paths generated!
--------------Analysis-sqlite3ValueFromExpr-@sqlite3.c@line: 70047.....

['f_entry()', 'f_exit()', 'valueFromExpr()']
1Paths generated!
--------------Analysis-sqlite3ValueSetStr-@sqlite3.c@line: 70313.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
2Paths generated!
--------------Analysis-sqlite3ValueFree-@sqlite3.c@line: 70326.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeMemRelease()']
1Paths generated!
--------------Analysis-valueBytes-@sqlite3.c@line: 70337.....

['f_entry()', 'f_exit()', 'valueToText()']
1Paths generated!
--------------Analysis-sqlite3ValueBytes-@sqlite3.c@line: 70340.....

['assert()', 'f_entry()', 'f_exit()', 'valueBytes()']
1Paths generated!
--------------Analysis-sqlite3VdbeCreate-@sqlite3.c@line: 70379.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
1Paths generated!
--------------Analysis-sqlite3VdbeError-@sqlite3.c@line: 70403.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VMPrintf()']
1Paths generated!
--------------Analysis-sqlite3VdbeSetSql-@sqlite3.c@line: 70414.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbStrNDup()']
1Paths generated!
--------------Analysis-sqlite3VdbeSwap-@sqlite3.c@line: 70428.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-growOpArray-@sqlite3.c@line: 70457.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbRealloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocSize()', 'sqlite3DbRealloc()']
2Paths generated!
--------------Analysis-growOp3-@sqlite3.c@line: 70513.....

['assert()', 'f_entry()', 'f_exit()', 'growOpArray()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-sqlite3VdbeAddOp3-@sqlite3.c@line: 70519.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'growOp3()']
2Paths generated!
--------------Analysis-sqlite3VdbeAddOp0-@sqlite3.c@line: 70565.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-sqlite3VdbeAddOp1-@sqlite3.c@line: 70568.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-sqlite3VdbeAddOp2-@sqlite3.c@line: 70571.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-sqlite3VdbeGoto-@sqlite3.c@line: 70577.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-sqlite3VdbeLoadString-@sqlite3.c@line: 70584.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp4()']
1Paths generated!
--------------Analysis-sqlite3VdbeMultiLoad-@sqlite3.c@line: 70596.....

['__builtin_va_start()', 'f_entry()', 'f_exit()']
['__builtin_va_start()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
['__builtin_va_arg()', '__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp4()']
3Paths generated!
--------------Analysis-sqlite3VdbeAddOp4-@sqlite3.c@line: 70616.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()']
1Paths generated!
--------------Analysis-sqlite3VdbeAddOp4Dup8-@sqlite3.c@line: 70634.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3VdbeAddOp4()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocRawNN()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-sqlite3VdbeAddParseSchemaOp-@sqlite3.c@line: 70656.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp4()']
['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeUsesBtree()']
2Paths generated!
--------------Analysis-sqlite3VdbeAddOp4Int-@sqlite3.c@line: 70665.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()']
1Paths generated!
--------------Analysis-sqlite3VdbeEndCoroutine-@sqlite3.c@line: 70680.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()']
1Paths generated!
--------------Analysis-sqlite3VdbeMakeLabel-@sqlite3.c@line: 70707.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()']
2Paths generated!
--------------Analysis-sqlite3VdbeResolveLabel-@sqlite3.c@line: 70726.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeRunOnlyOnce-@sqlite3.c@line: 70741.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeReusable-@sqlite3.c@line: 70748.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-resolveP2Values-@sqlite3.c@line: 70903.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
1Paths generated!
--------------Analysis-sqlite3VdbeCurrentAddr-@sqlite3.c@line: 70987.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeTakeOpArray-@sqlite3.c@line: 71017.....

['assert()', 'f_entry()', 'f_exit()', 'resolveP2Values()']
1Paths generated!
--------------Analysis-sqlite3VdbeAddOpList-@sqlite3.c@line: 71037.....

['assert()', 'f_entry()', 'f_exit()', 'growOpArray()']
1Paths generated!
--------------Analysis-sqlite3VdbeChangeOpcode-@sqlite3.c@line: 71113.....

['f_entry()', 'f_exit()', 'sqlite3VdbeGetOp()']
1Paths generated!
--------------Analysis-sqlite3VdbeChangeP1-@sqlite3.c@line: 71116.....

['f_entry()', 'f_exit()', 'sqlite3VdbeGetOp()']
1Paths generated!
--------------Analysis-sqlite3VdbeChangeP2-@sqlite3.c@line: 71119.....

['f_entry()', 'f_exit()', 'sqlite3VdbeGetOp()']
1Paths generated!
--------------Analysis-sqlite3VdbeChangeP3-@sqlite3.c@line: 71122.....

['f_entry()', 'f_exit()', 'sqlite3VdbeGetOp()']
1Paths generated!
--------------Analysis-sqlite3VdbeChangeP5-@sqlite3.c@line: 71125.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeJumpHere-@sqlite3.c@line: 71133.....

['f_entry()', 'f_exit()', 'sqlite3VdbeChangeP2()']
1Paths generated!
--------------Analysis-freeEphemeralFunction-@sqlite3.c@line: 71143.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-freeP4Mem-@sqlite3.c@line: 71154.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()']
1Paths generated!
--------------Analysis-freeP4FuncCtx-@sqlite3.c@line: 71158.....

['f_entry()', 'f_exit()', 'freeEphemeralFunction()', 'sqlite3DbFree()']
1Paths generated!
--------------Analysis-freeP4-@sqlite3.c@line: 71162.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeFreeOpArray-@sqlite3.c@line: 71214.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'freeP4()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-sqlite3VdbeLinkSubProgram-@sqlite3.c@line: 71232.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeChangeToNoop-@sqlite3.c@line: 71240.....

['assert()', 'f_entry()', 'f_exit()', 'freeP4()']
1Paths generated!
--------------Analysis-sqlite3VdbeDeletePriorOpcode-@sqlite3.c@line: 71256.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeChangeToNoop()']
2Paths generated!
--------------Analysis-vdbeChangeP4Full-@sqlite3.c@line: 71281.....

['f_entry()', 'f_exit()', 'sqlite3DbStrNDup()']
['f_entry()', 'f_exit()', 'sqlite3DbStrNDup()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'sqlite3VdbeChangeP4()']
['f_entry()', 'f_exit()', 'freeP4()', 'sqlite3DbStrNDup()']
4Paths generated!
--------------Analysis-sqlite3VdbeChangeP4-@sqlite3.c@line: 71300.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VtabLock()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeChangeP4Full()']
['assert()', 'f_entry()', 'f_exit()', 'freeP4()', 'sqlite3VtabLock()', 'vdbeChangeP4Full()']
4Paths generated!
--------------Analysis-sqlite3VdbeSetP4KeyInfo-@sqlite3.c@line: 71338.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeChangeP4()']
1Paths generated!
--------------Analysis-sqlite3VdbeGetOp-@sqlite3.c@line: 71403.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-displayP4-@sqlite3.c@line: 71588.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()']
1Paths generated!
--------------Analysis-sqlite3VdbeUsesBtree-@sqlite3.c@line: 71712.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSharable()']
1Paths generated!
--------------Analysis-sqlite3VdbeEnter-@sqlite3.c@line: 71743.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()']
2Paths generated!
--------------Analysis-vdbeLeave-@sqlite3.c@line: 71764.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeLeave()']
2Paths generated!
--------------Analysis-sqlite3VdbeLeave-@sqlite3.c@line: 71778.....

['f_entry()', 'f_exit()', 'vdbeLeave()']
1Paths generated!
--------------Analysis-releaseMemArray-@sqlite3.c@line: 71814.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemRelease()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeMemRelease()']
5Paths generated!
--------------Analysis-sqlite3VdbeFrameDelete-@sqlite3.c@line: 71860.....

['f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3DbFree()', 'sqlite3VdbeDeleteAuxData()']
['f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3DbFree()', 'sqlite3VdbeDeleteAuxData()', 'sqlite3VdbeFreeCursor()']
2Paths generated!
--------------Analysis-sqlite3VdbeList-@sqlite3.c@line: 71888.....

['assert()', 'f_entry()', 'f_exit()', 'releaseMemArray()']
['assert()', 'displayP4()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3Strlen30()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'displayP4()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3Strlen30()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3_snprintf()']
['assert()', 'displayP4()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3VdbeMemSetStr()']
['assert()', 'displayP4()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3VdbeMemSetStr()', 'sqlite3_snprintf()']
['assert()', 'displayP4()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3OpcodeName()', 'sqlite3Strlen30()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3VdbeMemSetStr()', 'sqlite3_snprintf()']
['assert()', 'displayP4()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3OpcodeName()', 'sqlite3Strlen30()', 'sqlite3VdbeMemClearAndResize()', 'sqlite3VdbeMemGrow()', 'sqlite3VdbeMemSetStr()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3VdbeError()']
['assert()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3OomFault()']
9Paths generated!
--------------Analysis-allocSpace-@sqlite3.c@line: 72136.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeRewind-@sqlite3.c@line: 72159.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeMakeReady-@sqlite3.c@line: 72212.....

['allocSpace()', 'assert()', 'f_entry()', 'f_exit()', 'resolveP2Values()', 'sqlite3DbMallocZero()', 'sqlite3VdbeRewind()']
['allocSpace()', 'assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveP2Values()', 'sqlite3DbMallocZero()', 'sqlite3VdbeRewind()']
2Paths generated!
--------------Analysis-sqlite3VdbeFreeCursor-@sqlite3.c@line: 72321.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-closeCursorsInFrame-@sqlite3.c@line: 72358.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeFreeCursor()']
2Paths generated!
--------------Analysis-sqlite3VdbeFrameRestore-@sqlite3.c@line: 72376.....

['closeCursorsInFrame()', 'f_entry()', 'f_exit()', 'sqlite3VdbeDeleteAuxData()']
1Paths generated!
--------------Analysis-closeAllCursors-@sqlite3.c@line: 72407.....

['assert()', 'closeCursorsInFrame()', 'f_entry()', 'f_exit()']
['assert()', 'closeCursorsInFrame()', 'f_entry()', 'f_exit()', 'sqlite3VdbeDeleteAuxData()']
['assert()', 'closeCursorsInFrame()', 'f_entry()', 'f_exit()', 'sqlite3VdbeFrameDelete()']
['assert()', 'closeCursorsInFrame()', 'f_entry()', 'f_exit()', 'releaseMemArray()']
['assert()', 'closeCursorsInFrame()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3VdbeDeleteAuxData()', 'sqlite3VdbeFrameDelete()', 'sqlite3VdbeFrameRestore()']
5Paths generated!
--------------Analysis-Cleanup-@sqlite3.c@line: 72434.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()']
1Paths generated!
--------------Analysis-sqlite3VdbeSetNumCols-@sqlite3.c@line: 72458.....

['f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()']
1Paths generated!
--------------Analysis-sqlite3VdbeSetColName-@sqlite3.c@line: 72486.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
1Paths generated!
--------------Analysis-vdbeCommit-@sqlite3.c@line: 72514.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3VtabSync()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeGetFilename()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsSync()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeGetFilename()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsSync()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeGetFilename()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsSync()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeGetFilename()', 'sqlite3BtreeIsInTrans()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsSync()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeGetFilename()', 'sqlite3BtreeGetJournalname()', 'sqlite3BtreeIsInTrans()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsSync()', 'sqlite3OsWrite()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeGetFilename()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpenMalloc()', 'sqlite3OsSync()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeGetFilename()', 'sqlite3BtreeGetJournalname()', 'sqlite3BtreeIsInTrans()', 'sqlite3DbFree()', 'sqlite3EndBenignMalloc()', 'sqlite3MPrintf()', 'sqlite3OsAccess()', 'sqlite3OsCloseFree()', 'sqlite3OsDelete()', 'sqlite3OsDeviceCharacteristics()', 'sqlite3OsOpenMalloc()', 'sqlite3OsSync()', 'sqlite3OsWrite()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'sqlite3_log()', 'sqlite3_randomness()', 'sqlite3_snprintf()']
['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3Strlen30()', 'sqlite3VtabSync()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3Strlen30()', 'sqlite3VtabSync()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'xCommitCallback()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeIsInTrans()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInTrans()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerExclusiveLock()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCommitPhaseOne()', 'sqlite3BtreeCommitPhaseTwo()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInTrans()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3PagerExclusiveLock()', 'sqlite3Strlen30()', 'sqlite3VtabCommit()', 'sqlite3VtabSync()', 'xCommitCallback()']
15Paths generated!
--------------Analysis-sqlite3VdbeCloseStatement-@sqlite3.c@line: 72808.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VtabSavepoint()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSavepoint()']
4Paths generated!
--------------Analysis-sqlite3VdbeCheckFk-@sqlite3.c@line: 72874.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeError()']
2Paths generated!
--------------Analysis-sqlite3VdbeHalt-@sqlite3.c@line: 72901.....

['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()', 'sqlite3VdbeSetChanges()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3VdbeCloseStatement()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3CloseSavepoints()', 'sqlite3RollbackAll()', 'sqlite3VdbeCloseStatement()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3CloseSavepoints()', 'sqlite3DbFree()', 'sqlite3RollbackAll()', 'sqlite3VdbeCloseStatement()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()', 'sqlite3VdbeSetChanges()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3CloseSavepoints()', 'sqlite3RollbackAll()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3RollbackAll()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3CommitInternalChanges()', 'sqlite3VdbeCheckFk()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3RollbackAll()', 'sqlite3VdbeCheckFk()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3VdbeCheckFk()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3CloseSavepoints()', 'sqlite3CommitInternalChanges()', 'sqlite3DbFree()', 'sqlite3RollbackAll()', 'sqlite3VdbeCheckFk()', 'sqlite3VdbeCloseStatement()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()', 'sqlite3VdbeSetChanges()', 'vdbeCommit()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'sqlite3CloseSavepoints()', 'sqlite3CommitInternalChanges()', 'sqlite3DbFree()', 'sqlite3RollbackAll()', 'sqlite3VdbeCheckFk()', 'sqlite3VdbeCloseStatement()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()', 'sqlite3VdbeSetChanges()']
['assert()', 'closeAllCursors()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3CloseSavepoints()', 'sqlite3DbFree()', 'sqlite3RollbackAll()', 'sqlite3VdbeCheckFk()', 'sqlite3VdbeCloseStatement()', 'sqlite3VdbeEnter()', 'sqlite3VdbeLeave()', 'sqlite3VdbeSetChanges()']
14Paths generated!
--------------Analysis-sqlite3VdbeResetStepResult-@sqlite3.c@line: 73103.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeTransferError-@sqlite3.c@line: 73115.....

['f_entry()', 'f_exit()', 'sqlite3Error()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3ValueSetStr()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()']
3Paths generated!
--------------Analysis-sqlite3VdbeReset-@sqlite3.c@line: 73164.....

['Cleanup()', 'f_entry()', 'f_exit()', 'sqlite3VdbeHalt()']
['Cleanup()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3VdbeHalt()']
['Cleanup()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeHalt()', 'sqlite3VdbeTransferError()']
3Paths generated!
--------------Analysis-sqlite3VdbeFinalize-@sqlite3.c@line: 73244.....

['f_entry()', 'f_exit()', 'sqlite3VdbeDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeDelete()', 'sqlite3VdbeReset()']
2Paths generated!
--------------Analysis-sqlite3VdbeDeleteAuxData-@sqlite3.c@line: 73270.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'xDelete()']
3Paths generated!
--------------Analysis-sqlite3VdbeClearObject-@sqlite3.c@line: 73296.....

['assert()', 'f_entry()', 'f_exit()', 'releaseMemArray()', 'sqlite3DbFree()', 'vdbeFreeOpArray()']
1Paths generated!
--------------Analysis-sqlite3VdbeDelete-@sqlite3.c@line: 73324.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeClearObject()']
1Paths generated!
--------------Analysis-handleDeferredMoveto-@sqlite3.c@line: 73350.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeMovetoUnpacked()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeMovetoUnpacked()', 'sqlite3CorruptError()']
2Paths generated!
--------------Analysis-handleMovedCursor-@sqlite3.c@line: 73376.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCursorRestore()']
1Paths generated!
--------------Analysis-sqlite3VdbeCursorRestore-@sqlite3.c@line: 73391.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCursorHasMoved()']
['assert()', 'f_entry()', 'f_exit()', 'handleMovedCursor()', 'sqlite3BtreeCursorHasMoved()']
2Paths generated!
--------------Analysis-sqlite3VdbeCursorMoveto-@sqlite3.c@line: 73412.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeCursorHasMoved()']
['f_entry()', 'f_exit()', 'handleMovedCursor()', 'sqlite3BtreeCursorHasMoved()']
['f_entry()', 'f_exit()', 'handleDeferredMoveto()', 'handleMovedCursor()', 'sqlite3BtreeCursorHasMoved()']
4Paths generated!
--------------Analysis-sqlite3VdbeSerialType-@sqlite3.c@line: 73476.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeSerialTypeLen-@sqlite3.c@line: 73548.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3VdbeOneByteSerialTypeLen-@sqlite3.c@line: 73557.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeSerialPut-@sqlite3.c@line: 73628.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
3Paths generated!
--------------Analysis-serialGet-@sqlite3.c@line: 73682.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3IsNaN()']
2Paths generated!
--------------Analysis-sqlite3VdbeSerialGet-@sqlite3.c@line: 73718.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeAllocUnpackedRecord-@sqlite3.c@line: 73817.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()']
2Paths generated!
--------------Analysis-sqlite3VdbeRecordUnpack-@sqlite3.c@line: 73854.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeSerialGet()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVarint32()', 'sqlite3VdbeSerialGet()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVarint32()']
4Paths generated!
--------------Analysis-vdbeCompareMemString-@sqlite3.c@line: 74036.....

['f_entry()', 'f_exit()', 'sqlite3ValueText()', 'sqlite3VdbeMemInit()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeMemShallowCopy()', 'xCmp()']
['f_entry()', 'f_exit()', 'xCmp()']
2Paths generated!
--------------Analysis-sqlite3BlobCompare-@sqlite3.c@line: 74073.....

['f_entry()', 'f_exit()', 'memcmp()']
1Paths generated!
--------------Analysis-sqlite3IntFloatCompare-@sqlite3.c@line: 74084.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MemCompare-@sqlite3.c@line: 74117.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BlobCompare()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BlobCompare()', 'vdbeCompareMemString()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BlobCompare()', 'sqlite3IntFloatCompare()']
3Paths generated!
--------------Analysis-vdbeRecordDecodeInt-@sqlite3.c@line: 74203.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeRecordCompareWithSkip-@sqlite3.c@line: 74258.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVarint32()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialTypeLen()', 'vdbeCompareMemString()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialGet()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3IntFloatCompare()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialGet()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialTypeLen()', 'vdbeRecordDecodeInt()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3IntFloatCompare()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialGet()', 'sqlite3VdbeSerialTypeLen()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVarint32()', 'sqlite3IntFloatCompare()', 'sqlite3VarintLen()', 'sqlite3VdbeSerialGet()', 'sqlite3VdbeSerialTypeLen()']
10Paths generated!
--------------Analysis-sqlite3VdbeRecordCompare-@sqlite3.c@line: 74437.....

['f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompareWithSkip()']
1Paths generated!
--------------Analysis-vdbeRecordCompareInt-@sqlite3.c@line: 74454.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompareWithSkip()']
2Paths generated!
--------------Analysis-vdbeRecordCompareString-@sqlite3.c@line: 74547.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3VdbeRecordCompareWithSkip()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3CorruptError()', 'sqlite3VdbeRecordCompareWithSkip()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVarint32()']
5Paths generated!
--------------Analysis-sqlite3VdbeFindCompare-@sqlite3.c@line: 74608.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3VdbeIdxRowid-@sqlite3.c@line: 74654.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadSize()', 'sqlite3CorruptError()', 'sqlite3VdbeMemFromBtree()', 'sqlite3VdbeMemInit()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeSerialGet()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadSize()', 'sqlite3CorruptError()', 'sqlite3GetVarint32()', 'sqlite3VdbeMemFromBtree()', 'sqlite3VdbeMemInit()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeSerialGet()']
2Paths generated!
--------------Analysis-sqlite3VdbeIdxKeyCompare-@sqlite3.c@line: 74731.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadSize()', 'sqlite3VdbeMemFromBtree()', 'sqlite3VdbeMemInit()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeRecordCompare()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreePayloadSize()', 'sqlite3CorruptError()', 'sqlite3VdbeMemFromBtree()', 'sqlite3VdbeMemInit()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeRecordCompare()']
2Paths generated!
--------------Analysis-sqlite3VdbeSetChanges-@sqlite3.c@line: 74766.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeCountChanges-@sqlite3.c@line: 74776.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExpirePreparedStatements-@sqlite3.c@line: 74790.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeDb-@sqlite3.c@line: 74800.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeGetBoundValue-@sqlite3.c@line: 74812.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueNew()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueApplyAffinity()', 'sqlite3ValueNew()', 'sqlite3VdbeMemCopy()']
3Paths generated!
--------------Analysis-sqlite3VdbeSetVarmask-@sqlite3.c@line: 74833.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabImportErrmsg-@sqlite3.c@line: 74848.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3_expired-@sqlite3.c@line: 74972.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeSafety-@sqlite3.c@line: 74983.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-vdbeSafetyNotNull-@sqlite3.c@line: 74991.....

['f_entry()', 'f_exit()', 'vdbeSafety()']
['f_entry()', 'f_exit()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-invokeProfileCallback-@sqlite3.c@line: 75005.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsCurrentTimeInt64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsCurrentTimeInt64()', 'xTrace()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsCurrentTimeInt64()', 'xProfile()']
3Paths generated!
--------------Analysis-sqlite3_finalize-@sqlite3.c@line: 75041.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'vdbeSafety()']
['f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'vdbeSafety()']
['f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3MisuseError()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'vdbeSafety()']
4Paths generated!
--------------Analysis-sqlite3_reset-@sqlite3.c@line: 75068.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3VdbeReset()', 'sqlite3VdbeRewind()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3VdbeReset()', 'sqlite3VdbeRewind()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3_clear_bindings-@sqlite3.c@line: 75089.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemRelease()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_value_blob-@sqlite3.c@line: 75113.....

['f_entry()', 'f_exit()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemExpandBlob()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemExpandBlob()']
3Paths generated!
--------------Analysis-sqlite3_value_bytes-@sqlite3.c@line: 75126.....

['f_entry()', 'f_exit()', 'sqlite3ValueBytes()']
1Paths generated!
--------------Analysis-sqlite3_value_bytes16-@sqlite3.c@line: 75129.....

['f_entry()', 'f_exit()', 'sqlite3ValueBytes()']
1Paths generated!
--------------Analysis-sqlite3_value_double-@sqlite3.c@line: 75132.....

['f_entry()', 'f_exit()', 'sqlite3VdbeRealValue()']
1Paths generated!
--------------Analysis-sqlite3_value_int-@sqlite3.c@line: 75135.....

['f_entry()', 'f_exit()', 'sqlite3VdbeIntValue()']
1Paths generated!
--------------Analysis-sqlite3_value_int64-@sqlite3.c@line: 75138.....

['f_entry()', 'f_exit()', 'sqlite3VdbeIntValue()']
1Paths generated!
--------------Analysis-sqlite3_value_subtype-@sqlite3.c@line: 75141.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_value_text-@sqlite3.c@line: 75145.....

['f_entry()', 'f_exit()', 'sqlite3ValueText()']
1Paths generated!
--------------Analysis-sqlite3_value_text16-@sqlite3.c@line: 75149.....

['f_entry()', 'f_exit()', 'sqlite3ValueText()']
1Paths generated!
--------------Analysis-sqlite3_value_text16be-@sqlite3.c@line: 75152.....

['f_entry()', 'f_exit()', 'sqlite3ValueText()']
1Paths generated!
--------------Analysis-sqlite3_value_text16le-@sqlite3.c@line: 75155.....

['f_entry()', 'f_exit()', 'sqlite3ValueText()']
1Paths generated!
--------------Analysis-sqlite3_value_type-@sqlite3.c@line: 75163.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_value_dup-@sqlite3.c@line: 75203.....

['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3_malloc()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3VdbeMemMakeWriteable()', 'sqlite3_malloc()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3ValueFree()', 'sqlite3VdbeMemMakeWriteable()', 'sqlite3_malloc()']
3Paths generated!
--------------Analysis-sqlite3_value_free-@sqlite3.c@line: 75226.....

['f_entry()', 'f_exit()', 'sqlite3ValueFree()']
1Paths generated!
--------------Analysis-setResultStrOrError-@sqlite3.c@line: 75242.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()', 'sqlite3_result_error_toobig()']
2Paths generated!
--------------Analysis-invokeValueDestructor-@sqlite3.c@line: 75253.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_error_toobig()']
['assert()', 'f_entry()', 'f_exit()', 'xDel()']
3Paths generated!
--------------Analysis-sqlite3_result_blob-@sqlite3.c@line: 75269.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
1Paths generated!
--------------Analysis-sqlite3_result_blob64-@sqlite3.c@line: 75279.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
['assert()', 'f_entry()', 'f_exit()', 'invokeValueDestructor()']
2Paths generated!
--------------Analysis-sqlite3_result_double-@sqlite3.c@line: 75293.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetDouble()']
1Paths generated!
--------------Analysis-sqlite3_result_error-@sqlite3.c@line: 75297.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
1Paths generated!
--------------Analysis-sqlite3_result_error16-@sqlite3.c@line: 75304.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
1Paths generated!
--------------Analysis-sqlite3_result_int-@sqlite3.c@line: 75311.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetInt64()']
1Paths generated!
--------------Analysis-sqlite3_result_int64-@sqlite3.c@line: 75315.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetInt64()']
1Paths generated!
--------------Analysis-sqlite3_result_null-@sqlite3.c@line: 75319.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetNull()']
1Paths generated!
--------------Analysis-sqlite3_result_subtype-@sqlite3.c@line: 75323.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_result_text-@sqlite3.c@line: 75329.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
1Paths generated!
--------------Analysis-sqlite3_result_text64-@sqlite3.c@line: 75338.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
['assert()', 'f_entry()', 'f_exit()', 'invokeValueDestructor()']
2Paths generated!
--------------Analysis-sqlite3_result_text16-@sqlite3.c@line: 75355.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
1Paths generated!
--------------Analysis-sqlite3_result_text16be-@sqlite3.c@line: 75364.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
1Paths generated!
--------------Analysis-sqlite3_result_text16le-@sqlite3.c@line: 75373.....

['assert()', 'f_entry()', 'f_exit()', 'setResultStrOrError()']
1Paths generated!
--------------Analysis-sqlite3_result_value-@sqlite3.c@line: 75383.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemCopy()']
1Paths generated!
--------------Analysis-sqlite3_result_zeroblob-@sqlite3.c@line: 75387.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetZeroBlob()']
1Paths generated!
--------------Analysis-sqlite3_result_zeroblob64-@sqlite3.c@line: 75391.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetZeroBlob()']
1Paths generated!
--------------Analysis-sqlite3_result_error_code-@sqlite3.c@line: 75400.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
2Paths generated!
--------------Analysis-sqlite3_result_error_toobig-@sqlite3.c@line: 75413.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetStr()']
1Paths generated!
--------------Analysis-sqlite3_result_error_nomem-@sqlite3.c@line: 75422.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomFault()', 'sqlite3VdbeMemSetNull()']
1Paths generated!
--------------Analysis-doWalCallbacks-@sqlite3.c@line: 75434.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerWalCallback()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3PagerWalCallback()', 'xWalCallback()']
3Paths generated!
--------------Analysis-sqlite3Step-@sqlite3.c@line: 75464.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3VdbeExec()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3VdbeExec()', 'sqlite3VdbeTransferError()']
['assert()', 'doWalCallbacks()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3VdbeExec()', 'sqlite3VdbeTransferError()']
['assert()', 'f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3VdbeExec()', 'sqlite3VdbeTransferError()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3VdbeList()', 'sqlite3VdbeTransferError()']
['assert()', 'doWalCallbacks()', 'f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3VdbeExec()', 'sqlite3VdbeTransferError()']
['assert()', 'doWalCallbacks()', 'f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3OsCurrentTimeInt64()', 'sqlite3VdbeExec()', 'sqlite3VdbeTransferError()']
['assert()', 'doWalCallbacks()', 'f_entry()', 'f_exit()', 'invokeProfileCallback()', 'sqlite3ApiExit()', 'sqlite3VdbeExec()', 'sqlite3VdbeTransferError()', 'sqlite3_reset()']
8Paths generated!
--------------Analysis-sqlite3_step-@sqlite3.c@line: 75594.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Step()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'vdbeSafetyNotNull()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Step()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_value_text()', 'vdbeSafetyNotNull()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3Step()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_value_text()', 'vdbeSafetyNotNull()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Reprepare()', 'sqlite3Step()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_reset()', 'vdbeSafetyNotNull()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3MisuseError()', 'sqlite3Reprepare()', 'sqlite3Step()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_reset()', 'sqlite3_value_text()', 'vdbeSafetyNotNull()']
5Paths generated!
--------------Analysis-sqlite3_user_data-@sqlite3.c@line: 75645.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_context_db_handle-@sqlite3.c@line: 75660.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3StmtCurrentTime-@sqlite3.c@line: 75672.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsCurrentTimeInt64()']
2Paths generated!
--------------Analysis-sqlite3InvalidFunction-@sqlite3.c@line: 75696.....

['f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_result_error()']
1Paths generated!
--------------Analysis-createAggContext-@sqlite3.c@line: 75714.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemSetNull()']
3Paths generated!
--------------Analysis-sqlite3_aggregate_context-@sqlite3.c@line: 75736.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'createAggContext()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3_get_auxdata-@sqlite3.c@line: 75751.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_set_auxdata-@sqlite3.c@line: 75772.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
3Paths generated!
--------------Analysis-sqlite3_aggregate_count-@sqlite3.c@line: 75827.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_column_count-@sqlite3.c@line: 75836.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_data_count-@sqlite3.c@line: 75845.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-columnNullValue-@sqlite3.c@line: 75854.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-columnMem-@sqlite3.c@line: 75894.....

['columnNullValue()', 'f_entry()', 'f_exit()']
['columnNullValue()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3_mutex_enter()']
['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()']
3Paths generated!
--------------Analysis-columnMallocFailure-@sqlite3.c@line: 75930.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_column_blob-@sqlite3.c@line: 75948.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_blob()']
1Paths generated!
--------------Analysis-sqlite3_column_bytes-@sqlite3.c@line: 75958.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_bytes()']
1Paths generated!
--------------Analysis-sqlite3_column_bytes16-@sqlite3.c@line: 75963.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_bytes16()']
1Paths generated!
--------------Analysis-sqlite3_column_double-@sqlite3.c@line: 75968.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_double()']
1Paths generated!
--------------Analysis-sqlite3_column_int-@sqlite3.c@line: 75973.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_int()']
1Paths generated!
--------------Analysis-sqlite3_column_int64-@sqlite3.c@line: 75978.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_int64()']
1Paths generated!
--------------Analysis-sqlite3_column_text-@sqlite3.c@line: 75983.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_text()']
1Paths generated!
--------------Analysis-sqlite3_column_value-@sqlite3.c@line: 75988.....

['columnMallocFailure()', 'columnMem()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_column_text16-@sqlite3.c@line: 75998.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_text16()']
1Paths generated!
--------------Analysis-sqlite3_column_type-@sqlite3.c@line: 76004.....

['columnMallocFailure()', 'f_entry()', 'f_exit()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-columnName-@sqlite3.c@line: 76026.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_column_count()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xFunc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomClear()', 'sqlite3_column_count()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xFunc()']
3Paths generated!
--------------Analysis-sqlite3_column_name-@sqlite3.c@line: 76068.....

['columnName()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_column_name16-@sqlite3.c@line: 76073.....

['columnName()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_column_decltype-@sqlite3.c@line: 76093.....

['columnName()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_column_decltype16-@sqlite3.c@line: 76098.....

['columnName()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeUnbind-@sqlite3.c@line: 76171.....

['f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3VdbeMemRelease()', 'sqlite3_mutex_enter()', 'vdbeSafetyNotNull()']
['f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3VdbeMemRelease()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'vdbeSafetyNotNull()']
['f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3MisuseError()', 'sqlite3VdbeMemRelease()', 'sqlite3_log()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'vdbeSafetyNotNull()']
3Paths generated!
--------------Analysis-bindText-@sqlite3.c@line: 76215.....

['f_entry()', 'f_exit()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'vdbeUnbind()', 'xDel()']
['f_entry()', 'f_exit()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Error()', 'sqlite3VdbeMemSetStr()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Error()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemSetStr()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
5Paths generated!
--------------Analysis-sqlite3_bind_blob-@sqlite3.c@line: 76249.....

['bindText()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_bind_blob64-@sqlite3.c@line: 76261.....

['assert()', 'bindText()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'invokeValueDestructor()']
2Paths generated!
--------------Analysis-sqlite3_bind_double-@sqlite3.c@line: 76275.....

['f_entry()', 'f_exit()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetDouble()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
2Paths generated!
--------------Analysis-sqlite3_bind_int-@sqlite3.c@line: 76285.....

['f_entry()', 'f_exit()', 'sqlite3_bind_int64()']
1Paths generated!
--------------Analysis-sqlite3_bind_int64-@sqlite3.c@line: 76288.....

['f_entry()', 'f_exit()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetInt64()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
2Paths generated!
--------------Analysis-sqlite3_bind_null-@sqlite3.c@line: 76298.....

['f_entry()', 'f_exit()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
2Paths generated!
--------------Analysis-sqlite3_bind_text-@sqlite3.c@line: 76307.....

['bindText()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_bind_text64-@sqlite3.c@line: 76316.....

['assert()', 'bindText()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'invokeValueDestructor()']
2Paths generated!
--------------Analysis-sqlite3_bind_text16-@sqlite3.c@line: 76333.....

['bindText()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_bind_value-@sqlite3.c@line: 76343.....

['f_entry()', 'f_exit()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-sqlite3_bind_zeroblob-@sqlite3.c@line: 76374.....

['f_entry()', 'f_exit()', 'vdbeUnbind()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetZeroBlob()', 'sqlite3_mutex_leave()', 'vdbeUnbind()']
2Paths generated!
--------------Analysis-sqlite3_bind_zeroblob64-@sqlite3.c@line: 76384.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3_bind_zeroblob()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_bind_parameter_count-@sqlite3.c@line: 76403.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_bind_parameter_name-@sqlite3.c@line: 76414.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeParameterIndex-@sqlite3.c@line: 76427.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'strncmp()']
2Paths generated!
--------------Analysis-sqlite3_bind_parameter_index-@sqlite3.c@line: 76442.....

['f_entry()', 'f_exit()', 'sqlite3VdbeParameterIndex()']
1Paths generated!
--------------Analysis-sqlite3TransferBindings-@sqlite3.c@line: 76449.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemMove()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_transfer_bindings-@sqlite3.c@line: 76476.....

['f_entry()', 'f_exit()', 'sqlite3TransferBindings()']
1Paths generated!
--------------Analysis-sqlite3_db_handle-@sqlite3.c@line: 76498.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_stmt_readonly-@sqlite3.c@line: 76506.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_stmt_busy-@sqlite3.c@line: 76513.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_next_stmt-@sqlite3.c@line: 76524.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_stmt_status-@sqlite3.c@line: 76545.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_sql-@sqlite3.c@line: 76562.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_expanded_sql-@sqlite3.c@line: 76576.....

['f_entry()', 'f_exit()', 'sqlite3_sql()']
['f_entry()', 'f_exit()', 'sqlite3VdbeExpandSql()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_sql()']
2Paths generated!
--------------Analysis-findNextHostParameter-@sqlite3.c@line: 76871.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetToken()']
2Paths generated!
--------------Analysis-sqlite3VdbeExpandSql-@sqlite3.c@line: 76914.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()']
['f_entry()', 'f_exit()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3XPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3XPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VdbeMemRelease()', 'sqlite3XPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'memset()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3VdbeChangeEncoding()', 'sqlite3VdbeMemRelease()', 'sqlite3VdbeMemSetStr()', 'sqlite3XPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()', 'sqlite3VdbeParameterIndex()']
['assert()', 'f_entry()', 'f_exit()', 'findNextHostParameter()', 'sqlite3GetInt32()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3StrAccumReset()']
['f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()']
11Paths generated!
--------------Analysis-allocateCursor-@sqlite3.c@line: 77223.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeCursorZero()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeCursorZero()', 'sqlite3VdbeFreeCursor()', 'sqlite3VdbeMemClearAndResize()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeCursorSize()', 'sqlite3BtreeCursorZero()', 'sqlite3VdbeFreeCursor()', 'sqlite3VdbeMemClearAndResize()']
5Paths generated!
--------------Analysis-applyNumericAffinity-@sqlite3.c@line: 77292.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3Atoi64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3Atoi64()', 'sqlite3VdbeIntegerAffinity()']
2Paths generated!
--------------Analysis-applyAffinity-@sqlite3.c@line: 77326.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemStringify()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeIntegerAffinity()']
['applyNumericAffinity()', 'assert()', 'f_entry()', 'f_exit()']
5Paths generated!
--------------Analysis-sqlite3_value_numeric_type-@sqlite3.c@line: 77362.....

['f_entry()', 'f_exit()', 'sqlite3_value_type()']
['applyNumericAffinity()', 'f_entry()', 'f_exit()', 'sqlite3_value_type()']
2Paths generated!
--------------Analysis-sqlite3ValueApplyAffinity-@sqlite3.c@line: 77376.....

['applyAffinity()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-computeNumericType-@sqlite3.c@line: 77390.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3Atoi64()']
1Paths generated!
--------------Analysis-numericType-@sqlite3.c@line: 77409.....

['f_entry()', 'f_exit()']
['computeNumericType()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-out2PrereleaseWithClear-@sqlite3.c@line: 77665.....

['f_entry()', 'f_exit()', 'sqlite3VdbeMemSetNull()']
1Paths generated!
--------------Analysis-out2Prerelease-@sqlite3.c@line: 77670.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'out2PrereleaseWithClear()']
2Paths generated!
--------------Analysis-sqlite3VdbeExec-@sqlite3.c@line: 77689.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomFault()', 'sqlite3SystemError()', 'sqlite3VdbeEnter()', 'sqlite3VdbeError()', 'sqlite3VdbeHalt()', 'sqlite3VdbeLeave()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomFault()', 'sqlite3ResetOneSchema()', 'sqlite3SystemError()', 'sqlite3VdbeEnter()', 'sqlite3VdbeError()', 'sqlite3VdbeHalt()', 'sqlite3VdbeLeave()', 'sqlite3_log()']
2Paths generated!
--------------Analysis-blobSeekToRow-@sqlite3.c@line: 84160.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MPrintf()', 'sqlite3_finalize()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeIncrblobCursor()', 'sqlite3VdbeSerialTypeLen()', 'sqlite3_step()']
3Paths generated!
--------------Analysis-sqlite3_blob_open-@sqlite3.c@line: 84214.....

['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3VdbeCreate()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3MPrintf()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3StrICmp()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3MPrintf()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3StrICmp()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3ErrorWithMsg()', 'sqlite3LocateTable()', 'sqlite3ParserReset()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCreate()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()', 'sqlite3_bind_int64()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
10Paths generated!
--------------Analysis-sqlite3_blob_close-@sqlite3.c@line: 84455.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3_finalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-blobReadWrite-@sqlite3.c@line: 84475.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Error()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterCursor()', 'sqlite3BtreeLeaveCursor()', 'sqlite3Error()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xCall()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterCursor()', 'sqlite3BtreeLeaveCursor()', 'sqlite3Error()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xCall()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterCursor()', 'sqlite3BtreeLeaveCursor()', 'sqlite3Error()', 'sqlite3MisuseError()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xCall()']
4Paths generated!
--------------Analysis-sqlite3_blob_read-@sqlite3.c@line: 84548.....

['blobReadWrite()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_blob_write-@sqlite3.c@line: 84555.....

['blobReadWrite()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_blob_bytes-@sqlite3.c@line: 84565.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_blob_reopen-@sqlite3.c@line: 84580.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'blobSeekToRow()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3MisuseError()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
4Paths generated!
--------------Analysis-vdbePmaReaderClear-@sqlite3.c@line: 85082.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'vdbeIncrFree()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3OsUnfetch()', 'sqlite3_free()', 'vdbeIncrFree()']
2Paths generated!
--------------Analysis-vdbePmaReadBlob-@sqlite3.c@line: 85099.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'vdbePmaReadBlob()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Realloc()', 'vdbePmaReadBlob()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OsRead()']
5Paths generated!
--------------Analysis-vdbePmaReadVarint-@sqlite3.c@line: 85193.....

['f_entry()', 'f_exit()', 'sqlite3GetVarint()', 'vdbePmaReadBlob()']
['f_entry()', 'f_exit()', 'sqlite3GetVarint()']
2Paths generated!
--------------Analysis-vdbeSorterMapFile-@sqlite3.c@line: 85226.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsFetch()']
2Paths generated!
--------------Analysis-vdbePmaReaderSeek-@sqlite3.c@line: 85243.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'vdbeSorterMapFile()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3OsRead()', 'vdbeSorterMapFile()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3Malloc()', 'vdbeSorterMapFile()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3Malloc()', 'sqlite3OsRead()', 'sqlite3OsUnfetch()', 'vdbeSorterMapFile()']
4Paths generated!
--------------Analysis-vdbePmaReaderNext-@sqlite3.c@line: 85290.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'vdbePmaReadBlob()']
['f_entry()', 'f_exit()', 'vdbePmaReadVarint()']
['f_entry()', 'f_exit()', 'vdbePmaReaderClear()']
['f_entry()', 'f_exit()', 'vdbeIncrSwap()']
['f_entry()', 'f_exit()', 'vdbeIncrSwap()', 'vdbePmaReaderSeek()']
6Paths generated!
--------------Analysis-vdbePmaReaderInit-@sqlite3.c@line: 85337.....

['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderSeek()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderNext()', 'vdbePmaReaderSeek()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReadVarint()', 'vdbePmaReaderSeek()']
3Paths generated!
--------------Analysis-vdbeSorterCompareTail-@sqlite3.c@line: 85370.....

['f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompareWithSkip()']
['f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompareWithSkip()', 'sqlite3VdbeRecordUnpack()']
2Paths generated!
--------------Analysis-vdbeSorterCompare-@sqlite3.c@line: 85397.....

['f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompare()']
['f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompare()', 'sqlite3VdbeRecordUnpack()']
2Paths generated!
--------------Analysis-vdbeSorterCompareText-@sqlite3.c@line: 85416.....

['f_entry()', 'f_exit()', 'memcmp()']
['f_entry()', 'f_exit()', 'memcmp()', 'vdbeSorterCompareTail()']
['f_entry()', 'f_exit()', 'memcmp()', 'sqlite3GetVarint32()', 'vdbeSorterCompareTail()']
3Paths generated!
--------------Analysis-vdbeSorterCompareInt-@sqlite3.c@line: 85457.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterCompareTail()']
2Paths generated!
--------------Analysis-sqlite3VdbeSorterInit-@sqlite3.c@line: 85540.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3TempInMemory()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3BtreeGetPageSize()', 'sqlite3DbMallocZero()', 'sqlite3TempInMemory()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3BtreeGetPageSize()', 'sqlite3DbMallocZero()', 'sqlite3Malloc()', 'sqlite3TempInMemory()']
3Paths generated!
--------------Analysis-vdbeSorterRecordFree-@sqlite3.c@line: 85644.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-vdbeSortSubtaskCleanup-@sqlite3.c@line: 85657.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'vdbeSorterRecordFree()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3OsCloseFree()', 'vdbeSorterRecordFree()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-vdbeSorterJoinThread-@sqlite3.c@line: 85722.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ThreadJoin()']
2Paths generated!
--------------Analysis-vdbeSorterCreateThread-@sqlite3.c@line: 85743.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ThreadCreate()']
1Paths generated!
--------------Analysis-vdbeSorterJoinAll-@sqlite3.c@line: 85756.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'vdbeSorterJoinThread()']
2Paths generated!
--------------Analysis-vdbeMergeEngineNew-@sqlite3.c@line: 85786.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FaultSim()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3MallocZero()']
2Paths generated!
--------------Analysis-vdbeMergeEngineFree-@sqlite3.c@line: 85809.....

['f_entry()', 'f_exit()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'sqlite3_free()', 'vdbePmaReaderClear()']
2Paths generated!
--------------Analysis-vdbeIncrFree-@sqlite3.c@line: 85823.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_free()', 'vdbeMergeEngineFree()']
['f_entry()', 'f_exit()', 'sqlite3_free()', 'vdbeMergeEngineFree()', 'vdbeSorterJoinThread()']
['f_entry()', 'f_exit()', 'sqlite3OsCloseFree()', 'sqlite3_free()', 'vdbeMergeEngineFree()', 'vdbeSorterJoinThread()']
4Paths generated!
--------------Analysis-sqlite3VdbeSorterReset-@sqlite3.c@line: 85840.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'vdbeMergeEngineFree()', 'vdbeSorterJoinAll()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'vdbeMergeEngineFree()', 'vdbeSorterJoinAll()', 'vdbeSorterRecordFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'vdbeMergeEngineFree()', 'vdbeSortSubtaskCleanup()', 'vdbeSorterJoinAll()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'vdbeMergeEngineFree()', 'vdbePmaReaderClear()', 'vdbeSortSubtaskCleanup()', 'vdbeSorterJoinAll()', 'vdbeSorterRecordFree()']
4Paths generated!
--------------Analysis-sqlite3VdbeSorterClose-@sqlite3.c@line: 85873.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeSorterReset()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-vdbeSorterExtendFile-@sqlite3.c@line: 85895.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3OsFetch()', 'sqlite3OsFileControlHint()', 'sqlite3OsUnfetch()']
2Paths generated!
--------------Analysis-vdbeSorterOpenTempFile-@sqlite3.c@line: 85914.....

['f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3OsOpenMalloc()']
['f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3OsFileControlHint()', 'sqlite3OsOpenMalloc()']
['f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3OsFileControlHint()', 'sqlite3OsOpenMalloc()', 'vdbeSorterExtendFile()']
3Paths generated!
--------------Analysis-vdbeSortAllocUnpacked-@sqlite3.c@line: 85941.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAllocUnpackedRecord()']
2Paths generated!
--------------Analysis-vdbeSorterMerge-@sqlite3.c@line: 85959.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xCompare()']
2Paths generated!
--------------Analysis-vdbeSorterGetCompare-@sqlite3.c@line: 86001.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeSorterSort-@sqlite3.c@line: 86015.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3_free()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocZero()', 'sqlite3_free()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMerge()']
2Paths generated!
--------------Analysis-vdbePmaWriterInit-@sqlite3.c@line: 86071.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3Malloc()']
1Paths generated!
--------------Analysis-vdbePmaWriteBlob-@sqlite3.c@line: 86093.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3OsWrite()']
3Paths generated!
--------------Analysis-vdbePmaWriterFinish-@sqlite3.c@line: 86126.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3OsWrite()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-vdbePmaWriteVarint-@sqlite3.c@line: 86145.....

['f_entry()', 'f_exit()', 'sqlite3PutVarint()', 'vdbePmaWriteBlob()']
1Paths generated!
--------------Analysis-vdbeSorterListToPMA-@sqlite3.c@line: 86166.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'vdbePmaWriteVarint()', 'vdbePmaWriterFinish()', 'vdbePmaWriterInit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'vdbePmaWriteBlob()', 'vdbePmaWriteVarint()', 'vdbePmaWriterFinish()', 'vdbePmaWriterInit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3_free()', 'vdbePmaWriteBlob()', 'vdbePmaWriteVarint()', 'vdbePmaWriterFinish()', 'vdbePmaWriterInit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'vdbeSorterSort()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'vdbeSorterExtendFile()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'vdbeSorterOpenTempFile()']
7Paths generated!
--------------Analysis-vdbeMergeEngineStep-@sqlite3.c@line: 86230.....

['f_entry()', 'f_exit()', 'vdbePmaReaderNext()']
['f_entry()', 'f_exit()', 'vdbePmaReaderNext()', 'xCompare()']
2Paths generated!
--------------Analysis-vdbeSorterFlushThread-@sqlite3.c@line: 86301.....

['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterListToPMA()']
1Paths generated!
--------------Analysis-vdbeSorterFlushPMA-@sqlite3.c@line: 86315.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterCreateThread()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'vdbeSorterCreateThread()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MallocSize()', 'vdbeSorterCreateThread()']
['f_entry()', 'f_exit()', 'vdbeSorterListToPMA()']
['f_entry()', 'f_exit()', 'vdbeSorterJoinThread()']
6Paths generated!
--------------Analysis-sqlite3VdbeSorterWrite-@sqlite3.c@line: 86382.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VarintLen()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Malloc()', 'sqlite3VarintLen()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Realloc()', 'sqlite3VarintLen()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VarintLen()', 'vdbeSorterFlushPMA()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3HeapNearlyFull()', 'sqlite3VarintLen()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3GetVarint32()', 'sqlite3HeapNearlyFull()', 'sqlite3Realloc()', 'sqlite3VarintLen()', 'vdbeSorterFlushPMA()']
6Paths generated!
--------------Analysis-vdbeIncrPopulate-@sqlite3.c@line: 86490.....

['assert()', 'f_entry()', 'f_exit()', 'vdbePmaWriterFinish()', 'vdbePmaWriterInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VarintLen()', 'vdbeMergeEngineStep()', 'vdbePmaWriteBlob()', 'vdbePmaWriteVarint()', 'vdbePmaWriterFinish()', 'vdbePmaWriterInit()']
2Paths generated!
--------------Analysis-vdbeIncrPopulateThread-@sqlite3.c@line: 86532.....

['f_entry()', 'f_exit()', 'vdbeIncrPopulate()']
1Paths generated!
--------------Analysis-vdbeIncrBgPopulate-@sqlite3.c@line: 86542.....

['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterCreateThread()']
1Paths generated!
--------------Analysis-vdbeIncrSwap-@sqlite3.c@line: 86566.....

['f_entry()', 'f_exit()', 'vdbeIncrPopulate()']
['f_entry()', 'f_exit()', 'vdbeSorterJoinThread()']
['f_entry()', 'f_exit()', 'vdbeIncrBgPopulate()', 'vdbeSorterJoinThread()']
3Paths generated!
--------------Analysis-vdbeIncrMergerNew-@sqlite3.c@line: 86605.....

['f_entry()', 'f_exit()', 'sqlite3FaultSim()']
['f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'vdbeMergeEngineFree()']
['f_entry()', 'f_exit()', 'sqlite3FaultSim()', 'sqlite3MallocZero()']
3Paths generated!
--------------Analysis-vdbeIncrMergerSetThreads-@sqlite3.c@line: 86629.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeMergeEngineCompare-@sqlite3.c@line: 86642.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xCompare()']
2Paths generated!
--------------Analysis-vdbeMergeEngineInit-@sqlite3.c@line: 86724.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineCompare()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderIncrInit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderNext()']
4Paths generated!
--------------Analysis-vdbePmaReaderIncrMergeInit-@sqlite3.c@line: 86795.....

['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineInit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineInit()', 'vdbePmaReaderNext()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeIncrPopulate()', 'vdbeMergeEngineInit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineInit()', 'vdbeSorterOpenTempFile()']
4Paths generated!
--------------Analysis-vdbePmaReaderBgIncrInit-@sqlite3.c@line: 86862.....

['f_entry()', 'f_exit()', 'vdbePmaReaderIncrMergeInit()']
1Paths generated!
--------------Analysis-vdbePmaReaderIncrInit-@sqlite3.c@line: 86883.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderIncrMergeInit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterCreateThread()']
3Paths generated!
--------------Analysis-vdbeMergeEngineLevel0-@sqlite3.c@line: 86913.....

['f_entry()', 'f_exit()', 'vdbeMergeEngineNew()']
['f_entry()', 'f_exit()', 'vdbeMergeEngineFree()', 'vdbeMergeEngineNew()']
['f_entry()', 'f_exit()', 'vdbeMergeEngineNew()', 'vdbePmaReaderInit()']
3Paths generated!
--------------Analysis-vdbeSorterTreeDepth-@sqlite3.c@line: 86952.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-vdbeSorterAddToTree-@sqlite3.c@line: 86970.....

['f_entry()', 'f_exit()', 'vdbeIncrMergerNew()']
['f_entry()', 'f_exit()', 'vdbeIncrFree()', 'vdbeIncrMergerNew()']
['f_entry()', 'f_exit()', 'vdbeIncrMergerNew()', 'vdbeMergeEngineNew()']
3Paths generated!
--------------Analysis-vdbeSorterMergeTreeBuild-@sqlite3.c@line: 87026.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineFree()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineFree()', 'vdbeMergeEngineNew()', 'vdbeSorterTreeDepth()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineNew()', 'vdbeSorterTreeDepth()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeIncrMergerNew()', 'vdbeMergeEngineNew()', 'vdbeSorterTreeDepth()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineFree()', 'vdbeMergeEngineLevel0()', 'vdbeMergeEngineNew()', 'vdbeSorterTreeDepth()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineFree()', 'vdbeMergeEngineLevel0()', 'vdbeMergeEngineNew()', 'vdbeSorterAddToTree()', 'vdbeSorterTreeDepth()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineFree()', 'vdbeMergeEngineLevel0()', 'vdbeSorterTreeDepth()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineNew()']
9Paths generated!
--------------Analysis-vdbeSorterSetupMerge-@sqlite3.c@line: 87105.....

['f_entry()', 'f_exit()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['f_entry()', 'f_exit()', 'vdbeMergeEngineFree()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineInit()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderIncrMergeInit()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeIncrMergerNew()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeIncrMergerNew()', 'vdbeIncrMergerSetThreads()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeIncrMergerNew()', 'vdbeIncrMergerSetThreads()', 'vdbePmaReaderIncrInit()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'vdbeSortAllocUnpacked()', 'vdbeSorterGetCompare()', 'vdbeSorterMergeTreeBuild()']
9Paths generated!
--------------Analysis-sqlite3VdbeSorterRewind-@sqlite3.c@line: 87187.....

['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterFlushPMA()', 'vdbeSorterJoinAll()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterFlushPMA()', 'vdbeSorterJoinAll()', 'vdbeSorterSetupMerge()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterFlushPMA()', 'vdbeSorterJoinAll()', 'vdbeSorterSetupMerge()', 'vdbeSorterSort()']
3Paths generated!
--------------Analysis-sqlite3VdbeSorterNext-@sqlite3.c@line: 87235.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeSorterRecordFree()']
['assert()', 'f_entry()', 'f_exit()', 'vdbeMergeEngineStep()']
['assert()', 'f_entry()', 'f_exit()', 'vdbePmaReaderNext()']
4Paths generated!
--------------Analysis-vdbeSorterRowkey-@sqlite3.c@line: 87272.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VdbeSorterRowkey-@sqlite3.c@line: 87299.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3VdbeMemClearAndResize()', 'vdbeSorterRowkey()']
1Paths generated!
--------------Analysis-sqlite3VdbeSorterCompare-@sqlite3.c@line: 87332.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeRecordCompare()', 'sqlite3VdbeRecordUnpack()', 'vdbeSorterRowkey()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAllocUnpackedRecord()', 'sqlite3VdbeRecordCompare()', 'sqlite3VdbeRecordUnpack()', 'vdbeSorterRowkey()']
2Paths generated!
--------------Analysis-memjrnlRead-@sqlite3.c@line: 87458.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-memjrnlFreeChunks-@sqlite3.c@line: 87509.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-memjrnlCreateFile-@sqlite3.c@line: 87522.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3OsOpen()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3OsClose()', 'sqlite3OsOpen()']
['f_entry()', 'f_exit()', 'memjrnlFreeChunks()', 'memset()', 'sqlite3OsOpen()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3OsOpen()', 'sqlite3OsWrite()']
4Paths generated!
--------------Analysis-memjrnlWrite-@sqlite3.c@line: 87561.....

['assert()', 'f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memjrnlCreateFile()']
['f_entry()', 'f_exit()', 'memjrnlCreateFile()', 'sqlite3OsWrite()']
3Paths generated!
--------------Analysis-memjrnlTruncate-@sqlite3.c@line: 87639.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memjrnlFreeChunks()']
2Paths generated!
--------------Analysis-memjrnlClose-@sqlite3.c@line: 87655.....

['f_entry()', 'f_exit()', 'memjrnlFreeChunks()']
1Paths generated!
--------------Analysis-memjrnlSync-@sqlite3.c@line: 87667.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-memjrnlFileSize-@sqlite3.c@line: 87675.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3JournalOpen-@sqlite3.c@line: 87718.....

['f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3OsOpen()']
3Paths generated!
--------------Analysis-sqlite3MemJournalOpen-@sqlite3.c@line: 87754.....

['f_entry()', 'f_exit()', 'sqlite3JournalOpen()']
1Paths generated!
--------------Analysis-sqlite3JournalIsInMemory-@sqlite3.c@line: 87779.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3JournalSize-@sqlite3.c@line: 87787.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-walkExpr-@sqlite3.c@line: 87831.....

['f_entry()', 'f_exit()', 'xExprCallback()']
['f_entry()', 'f_exit()', 'sqlite3WalkExpr()', 'sqlite3WalkExprList()', 'xExprCallback()']
['f_entry()', 'f_exit()', 'sqlite3WalkExpr()', 'sqlite3WalkSelect()', 'xExprCallback()']
3Paths generated!
--------------Analysis-sqlite3WalkExpr-@sqlite3.c@line: 87848.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'walkExpr()']
2Paths generated!
--------------Analysis-sqlite3WalkExprList-@sqlite3.c@line: 87856.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WalkExpr()']
2Paths generated!
--------------Analysis-sqlite3WalkSelectExpr-@sqlite3.c@line: 87873.....

['f_entry()', 'f_exit()', 'sqlite3WalkExpr()', 'sqlite3WalkExprList()']
1Paths generated!
--------------Analysis-sqlite3WalkSelectFrom-@sqlite3.c@line: 87891.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WalkExprList()', 'sqlite3WalkSelect()']
2Paths generated!
--------------Analysis-sqlite3WalkSelect-@sqlite3.c@line: 87928.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WalkSelectExpr()', 'sqlite3WalkSelectFrom()']
['f_entry()', 'f_exit()', 'sqlite3WalkSelectExpr()', 'sqlite3WalkSelectFrom()', 'xSelectCallback2()']
['f_entry()', 'f_exit()', 'sqlite3WalkSelectExpr()', 'sqlite3WalkSelectFrom()', 'xSelectCallback()', 'xSelectCallback2()']
4Paths generated!
--------------Analysis-incrAggDepth-@sqlite3.c@line: 87986.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-incrAggFunctionDepth-@sqlite3.c@line: 87990.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkExpr()']
2Paths generated!
--------------Analysis-resolveAlias-@sqlite3.c@line: 88019.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ExprAddCollateString()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
['assert()', 'f_entry()', 'f_exit()', 'incrAggFunctionDepth()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
4Paths generated!
--------------Analysis-nameInUsingClause-@sqlite3.c@line: 88068.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3MatchSpanName-@sqlite3.c@line: 88085.....

['f_entry()', 'f_exit()', 'sqlite3StrICmp()', 'sqlite3_strnicmp()']
1Paths generated!
--------------Analysis-lookupName-@sqlite3.c@line: 88135.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthRead()', 'sqlite3ExprDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthRead()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthRead()', 'sqlite3ExprDelete()', 'sqlite3IsRowid()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthRead()', 'sqlite3ExprDelete()', 'sqlite3IsRowid()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAlias()', 'sqlite3AuthRead()', 'sqlite3ExprDelete()', 'sqlite3IsRowid()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAlias()', 'sqlite3AuthRead()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3IsRowid()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'nameInUsingClause()', 'resolveAlias()', 'sqlite3AuthRead()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3IsRowid()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAlias()', 'sqlite3AuthRead()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3IsRowid()', 'sqlite3MatchSpanName()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthRead()', 'sqlite3ExprDelete()', 'sqlite3StrICmp()']
10Paths generated!
--------------Analysis-sqlite3CreateColumnExpr-@sqlite3.c@line: 88458.....

['f_entry()', 'f_exit()', 'sqlite3ExprAlloc()']
1Paths generated!
--------------Analysis-notValid-@sqlite3.c@line: 88481.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
2Paths generated!
--------------Analysis-exprProbability-@sqlite3.c@line: 88503.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()']
1Paths generated!
--------------Analysis-resolveExprStep-@sqlite3.c@line: 88523.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-resolveAsName-@sqlite3.c@line: 88751.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-resolveOrderByTermToExprList-@sqlite3.c@line: 88790.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ResolveExprNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprCompare()', 'sqlite3ResolveExprNames()']
2Paths generated!
--------------Analysis-resolveOutOfRangeError-@sqlite3.c@line: 88837.....

['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
1Paths generated!
--------------Analysis-resolveCompoundOrderBy-@sqlite3.c@line: 88863.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Expr()', 'sqlite3ExprDelete()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprDelete()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAsName()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAsName()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAsName()', 'resolveOrderByTermToExprList()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'resolveOutOfRangeError()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()']
10Paths generated!
--------------Analysis-sqlite3ResolveOrderGroupBy-@sqlite3.c@line: 88961.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAlias()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAlias()', 'resolveOutOfRangeError()']
['assert()', 'f_entry()', 'f_exit()', 'resolveAlias()', 'resolveOutOfRangeError()', 'sqlite3ErrorMsg()']
4Paths generated!
--------------Analysis-resolveOrderGroupBy-@sqlite3.c@line: 89012.....

['f_entry()', 'f_exit()', 'sqlite3ResolveOrderGroupBy()']
['f_entry()', 'f_exit()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()', 'sqlite3ResolveExprNames()', 'sqlite3ResolveOrderGroupBy()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()', 'sqlite3ResolveExprNames()', 'sqlite3ResolveOrderGroupBy()']
['f_entry()', 'f_exit()', 'resolveOutOfRangeError()', 'sqlite3ExprCompare()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()', 'sqlite3ResolveExprNames()', 'sqlite3ResolveOrderGroupBy()']
['f_entry()', 'f_exit()', 'resolveAsName()', 'resolveOutOfRangeError()', 'sqlite3ExprCompare()', 'sqlite3ExprIsInteger()', 'sqlite3ExprSkipCollate()', 'sqlite3ResolveExprNames()', 'sqlite3ResolveOrderGroupBy()']
5Paths generated!
--------------Analysis-resolveSelectStep-@sqlite3.c@line: 89070.....

['assert()', 'f_entry()', 'f_exit()', 'resolveCompoundOrderBy()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveCompoundOrderBy()', 'resolveOrderGroupBy()', 'sqlite3ResolveExprListNames()', 'sqlite3ResolveExprNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveCompoundOrderBy()', 'resolveOrderGroupBy()', 'sqlite3ResolveExprListNames()', 'sqlite3ResolveExprNames()', 'sqlite3SelectWrongNumTermsError()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveCompoundOrderBy()', 'resolveOrderGroupBy()', 'sqlite3ErrorMsg()', 'sqlite3ResolveExprListNames()', 'sqlite3ResolveExprNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveCompoundOrderBy()', 'resolveOrderGroupBy()', 'sqlite3ErrorMsg()', 'sqlite3ResolveExprListNames()', 'sqlite3ResolveExprNames()', 'sqlite3SelectWrongNumTermsError()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveCompoundOrderBy()', 'resolveOrderGroupBy()', 'sqlite3ErrorMsg()', 'sqlite3ResolveExprListNames()', 'sqlite3ResolveExprNames()', 'sqlite3ResolveSelectNames()', 'sqlite3SelectWrongNumTermsError()']
['assert()', 'f_entry()', 'f_exit()', 'resolveCompoundOrderBy()', 'sqlite3SelectPrep()']
7Paths generated!
--------------Analysis-sqlite3ResolveExprNames-@sqlite3.c@line: 89338.....

['f_entry()', 'f_exit()', 'sqlite3WalkExpr()']
1Paths generated!
--------------Analysis-sqlite3ResolveExprListNames-@sqlite3.c@line: 89383.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ResolveExprNames()']
2Paths generated!
--------------Analysis-sqlite3ResolveSelectNames-@sqlite3.c@line: 89408.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkSelect()']
1Paths generated!
--------------Analysis-sqlite3ResolveSelfReference-@sqlite3.c@line: 89435.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ResolveExprNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ResolveExprListNames()', 'sqlite3ResolveExprNames()']
2Paths generated!
--------------Analysis-sqlite3ExprAffinity-@sqlite3.c@line: 89493.....

['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AffinityType()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAffinity()', 'sqlite3ExprSkipCollate()']
4Paths generated!
--------------Analysis-sqlite3ExprAddCollateToken-@sqlite3.c@line: 89529.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprAlloc()']
2Paths generated!
--------------Analysis-sqlite3ExprAddCollateString-@sqlite3.c@line: 89545.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAddCollateToken()', 'sqlite3TokenInit()']
1Paths generated!
--------------Analysis-sqlite3ExprSkipCollate-@sqlite3.c@line: 89556.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ExprCollSeq-@sqlite3.c@line: 89580.....

['f_entry()', 'f_exit()', 'sqlite3CheckCollSeq()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckCollSeq()']
['f_entry()', 'f_exit()', 'sqlite3CheckCollSeq()', 'sqlite3FindCollSeq()']
['f_entry()', 'f_exit()', 'sqlite3CheckCollSeq()', 'sqlite3GetCollSeq()']
4Paths generated!
--------------Analysis-sqlite3CompareAffinity-@sqlite3.c@line: 89644.....

['f_entry()', 'f_exit()', 'sqlite3ExprAffinity()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAffinity()']
2Paths generated!
--------------Analysis-comparisonAffinity-@sqlite3.c@line: 89671.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAffinity()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CompareAffinity()', 'sqlite3ExprAffinity()']
2Paths generated!
--------------Analysis-sqlite3IndexAffinityOk-@sqlite3.c@line: 89694.....

['comparisonAffinity()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-binaryCompareP5-@sqlite3.c@line: 89710.....

['f_entry()', 'f_exit()', 'sqlite3CompareAffinity()', 'sqlite3ExprAffinity()']
1Paths generated!
--------------Analysis-sqlite3BinaryCompareCollSeq-@sqlite3.c@line: 89728.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()']
1Paths generated!
--------------Analysis-codeCompare-@sqlite3.c@line: 89751.....

['binaryCompareP5()', 'f_entry()', 'f_exit()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
1Paths generated!
--------------Analysis-sqlite3ExprCheckHeight-@sqlite3.c@line: 89778.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
2Paths generated!
--------------Analysis-heightOfExpr-@sqlite3.c@line: 89799.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-heightOfExprList-@sqlite3.c@line: 89806.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'heightOfExpr()']
2Paths generated!
--------------Analysis-heightOfSelect-@sqlite3.c@line: 89814.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'heightOfExpr()', 'heightOfExprList()', 'heightOfSelect()']
2Paths generated!
--------------Analysis-exprSetHeight-@sqlite3.c@line: 89837.....

['f_entry()', 'f_exit()', 'heightOfExpr()']
['f_entry()', 'f_exit()', 'heightOfExpr()', 'heightOfExprList()', 'sqlite3ExprListFlags()']
['f_entry()', 'f_exit()', 'heightOfExpr()', 'heightOfSelect()']
3Paths generated!
--------------Analysis-sqlite3ExprSetHeightAndFlags-@sqlite3.c@line: 89858.....

['exprSetHeight()', 'f_entry()', 'f_exit()', 'sqlite3ExprCheckHeight()']
1Paths generated!
--------------Analysis-sqlite3SelectExprHeight-@sqlite3.c@line: 89868.....

['f_entry()', 'f_exit()', 'heightOfSelect()']
1Paths generated!
--------------Analysis-sqlite3ExprAlloc-@sqlite3.c@line: 89906.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3Dequote()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3Dequote()', 'sqlite3GetInt32()']
5Paths generated!
--------------Analysis-sqlite3Expr-@sqlite3.c@line: 89955.....

['f_entry()', 'f_exit()', 'sqlite3ExprAlloc()']
['f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3Strlen30()']
2Paths generated!
--------------Analysis-sqlite3ExprAttachSubtrees-@sqlite3.c@line: 89972.....

['exprSetHeight()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()']
2Paths generated!
--------------Analysis-sqlite3PExpr-@sqlite3.c@line: 90002.....

['f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3ExprAttachSubtrees()']
['f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3ExprAttachSubtrees()', 'sqlite3ExprCheckHeight()']
['f_entry()', 'f_exit()', 'sqlite3ExprAnd()']
3Paths generated!
--------------Analysis-sqlite3PExprAddSelect-@sqlite3.c@line: 90027.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3SelectDelete()']
['f_entry()', 'f_exit()', 'sqlite3ExprSetHeightAndFlags()']
2Paths generated!
--------------Analysis-exprAlwaysTrue-@sqlite3.c@line: 90053.....

['f_entry()', 'f_exit()', 'sqlite3ExprIsInteger()']
1Paths generated!
--------------Analysis-exprAlwaysFalse-@sqlite3.c@line: 90059.....

['f_entry()', 'f_exit()', 'sqlite3ExprIsInteger()']
1Paths generated!
--------------Analysis-sqlite3ExprAnd-@sqlite3.c@line: 90074.....

['f_entry()', 'f_exit()']
['exprAlwaysFalse()', 'f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3ExprAttachSubtrees()']
['exprAlwaysFalse()', 'f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3ExprDelete()']
3Paths generated!
--------------Analysis-sqlite3ExprFunction-@sqlite3.c@line: 90094.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3ExprSetHeightAndFlags()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAlloc()', 'sqlite3ExprListDelete()', 'sqlite3ExprSetHeightAndFlags()']
2Paths generated!
--------------Analysis-sqlite3ExprAssignVarNumber-@sqlite3.c@line: 90125.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbRealloc()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrNDup()', 'sqlite3ErrorMsg()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi64()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi64()', 'sqlite3ErrorMsg()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()']
9Paths generated!
--------------Analysis-sqlite3ExprDeleteNN-@sqlite3.c@line: 90199.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3SelectDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
5Paths generated!
--------------Analysis-sqlite3ExprDelete-@sqlite3.c@line: 90219.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprDeleteNN()']
2Paths generated!
--------------Analysis-exprStructSize-@sqlite3.c@line: 90228.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-dupedExprStructSize-@sqlite3.c@line: 90268.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-dupedExprNodeSize-@sqlite3.c@line: 90295.....

['dupedExprStructSize()', 'f_entry()', 'f_exit()']
['dupedExprStructSize()', 'f_entry()', 'f_exit()', 'sqlite3Strlen30()']
2Paths generated!
--------------Analysis-dupedExprSize-@sqlite3.c@line: 90316.....

['f_entry()', 'f_exit()']
['dupedExprNodeSize()', 'f_entry()', 'f_exit()']
['dupedExprNodeSize()', 'dupedExprSize()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-exprDup-@sqlite3.c@line: 90335.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'dupedExprStructSize()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'dupedExprStructSize()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ExprDup()']
['assert()', 'dupedExprNodeSize()', 'dupedExprStructSize()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'dupedExprNodeSize()', 'dupedExprStructSize()', 'exprDup()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'dupedExprStructSize()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ExprListDup()']
['assert()', 'dupedExprStructSize()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3SelectDup()']
['assert()', 'dupedExprStructSize()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()']
['assert()', 'dupedExprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()']
['assert()', 'dupedExprNodeSize()', 'dupedExprStructSize()', 'exprDup()', 'exprStructSize()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3SelectDup()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
11Paths generated!
--------------Analysis-withDup-@sqlite3.c@line: 90428.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ExprListDup()', 'sqlite3SelectDup()']
3Paths generated!
--------------Analysis-sqlite3ExprDup-@sqlite3.c@line: 90466.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'exprDup()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ExprListDup-@sqlite3.c@line: 90470.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3DbStrDup()', 'sqlite3ExprDup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()']
3Paths generated!
--------------Analysis-sqlite3SrcListDup-@sqlite3.c@line: 90507.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3DbStrDup()', 'sqlite3ExprDup()', 'sqlite3IdListDup()', 'sqlite3SelectDup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3DbStrDup()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3IdListDup()', 'sqlite3SelectDup()']
3Paths generated!
--------------Analysis-sqlite3IdListDup-@sqlite3.c@line: 90548.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3DbStrDup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()']
3Paths generated!
--------------Analysis-sqlite3SelectDup-@sqlite3.c@line: 90572.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3SelectDup()', 'sqlite3SrcListDup()', 'withDup()']
1Paths generated!
--------------Analysis-sqlite3ExprListAppend-@sqlite3.c@line: 90616.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbRealloc()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
4Paths generated!
--------------Analysis-sqlite3ExprListSetSortOrder-@sqlite3.c@line: 90658.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprListSetName-@sqlite3.c@line: 90677.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbStrNDup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbStrNDup()', 'sqlite3Dequote()']
3Paths generated!
--------------Analysis-sqlite3ExprListSetSpan-@sqlite3.c@line: 90702.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()']
2Paths generated!
--------------Analysis-sqlite3ExprListCheckLength-@sqlite3.c@line: 90723.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
2Paths generated!
--------------Analysis-exprListDeleteNN-@sqlite3.c@line: 90739.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprDelete()']
2Paths generated!
--------------Analysis-sqlite3ExprListDelete-@sqlite3.c@line: 90751.....

['f_entry()', 'f_exit()']
['exprListDeleteNN()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ExprListFlags-@sqlite3.c@line: 90759.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-exprNodeIsConstant-@sqlite3.c@line: 90797.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-selectNodeIsConstant-@sqlite3.c@line: 90851.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-exprIsConst-@sqlite3.c@line: 90856.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkExpr()']
1Paths generated!
--------------Analysis-sqlite3ExprIsConstant-@sqlite3.c@line: 90875.....

['exprIsConst()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprIsConstantNotJoin-@sqlite3.c@line: 90885.....

['exprIsConst()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprIsTableConstant-@sqlite3.c@line: 90895.....

['exprIsConst()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprIsConstantOrFunction-@sqlite3.c@line: 90908.....

['assert()', 'exprIsConst()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprIsInteger-@sqlite3.c@line: 90935.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprCanBeNull-@sqlite3.c@line: 90980.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprNeedsNoAffinityChange-@sqlite3.c@line: 91010.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3IsRowid-@sqlite3.c@line: 91043.....

['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
1Paths generated!
--------------Analysis-isCandidateForInOpt-@sqlite3.c@line: 91058.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3CodeOnce-@sqlite3.c@line: 91098.....

['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()']
1Paths generated!
--------------Analysis-sqlite3SetHasNullFlag-@sqlite3.c@line: 91109.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()']
1Paths generated!
--------------Analysis-sqlite3InRhsIsConstant-@sqlite3.c@line: 91125.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprIsConstant()']
1Paths generated!
--------------Analysis-sqlite3FindInIndex-@sqlite3.c@line: 91208.....

['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()']
['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3CodeSubselect()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()']
['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeSubselect()', 'sqlite3CodeVerifySchema()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()', 'sqlite3IndexAffinityOk()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()']
['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeSubselect()', 'sqlite3CodeVerifySchema()', 'sqlite3FindCollSeq()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()', 'sqlite3IndexAffinityOk()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()']
['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3CodeSubselect()', 'sqlite3CodeVerifySchema()', 'sqlite3FindCollSeq()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()', 'sqlite3IndexAffinityOk()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3CodeSubselect()', 'sqlite3CodeVerifySchema()', 'sqlite3FindCollSeq()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()', 'sqlite3IndexAffinityOk()', 'sqlite3SchemaToIndex()', 'sqlite3SetHasNullFlag()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'isCandidateForInOpt()', 'sqlite3CodeOnce()', 'sqlite3CodeSubselect()', 'sqlite3CodeVerifySchema()', 'sqlite3GetVdbe()', 'sqlite3InRhsIsConstant()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeJumpHere()']
7Paths generated!
--------------Analysis-sqlite3CodeSubselect-@sqlite3.c@line: 91363.....

['f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3GetVdbe()']
['f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3GetVdbe()', 'sqlite3VdbeJumpHere()']
['f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3GetVdbe()', 'sqlite3SetHasNullFlag()']
['f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3VdbeAddOp4()']
['f_entry()', 'f_exit()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3GetVdbe()']
5Paths generated!
--------------Analysis-sqlite3ExprCodeIN-@sqlite3.c@line: 91593.....

['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp3()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCode()', 'sqlite3ExprCollSeq()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCode()', 'sqlite3ExprCollSeq()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3ExprCodeTemp()', 'sqlite3ExprCollSeq()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3ExprCodeTemp()', 'sqlite3ExprCollSeq()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3ExprCodeTemp()', 'sqlite3ExprCollSeq()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'comparisonAffinity()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCode()', 'sqlite3ExprCollSeq()', 'sqlite3FindInIndex()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
11Paths generated!
--------------Analysis-codeReal-@sqlite3.c@line: 91751.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3VdbeAddOp4Dup8()']
2Paths generated!
--------------Analysis-codeInteger-@sqlite3.c@line: 91769.....

['assert()', 'codeReal()', 'f_entry()', 'f_exit()', 'sqlite3DecOrHexToI64()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DecOrHexToI64()', 'sqlite3ErrorMsg()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DecOrHexToI64()', 'sqlite3VdbeAddOp4Dup8()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
4Paths generated!
--------------Analysis-cacheEntryClear-@sqlite3.c@line: 91818.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprCacheStore-@sqlite3.c@line: 91835.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprCacheRemove-@sqlite3.c@line: 91903.....

['f_entry()', 'f_exit()']
['cacheEntryClear()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ExprCachePush-@sqlite3.c@line: 91919.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprCachePop-@sqlite3.c@line: 91933.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'cacheEntryClear()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ExprCachePinRegister-@sqlite3.c@line: 91956.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprCodeLoadIndexColumn-@sqlite3.c@line: 91969.....

['f_entry()', 'f_exit()', 'sqlite3ExprCodeGetColumnOfTable()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeCopy()']
2Paths generated!
--------------Analysis-sqlite3ExprCodeGetColumnOfTable-@sqlite3.c@line: 91991.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
['f_entry()', 'f_exit()', 'sqlite3ColumnDefault()', 'sqlite3VdbeAddOp3()']
['f_entry()', 'f_exit()', 'sqlite3ColumnDefault()', 'sqlite3ColumnOfIndex()', 'sqlite3VdbeAddOp3()']
['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
4Paths generated!
--------------Analysis-sqlite3ExprCodeGetColumn-@sqlite3.c@line: 92025.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheStore()', 'sqlite3ExprCodeGetColumnOfTable()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCachePinRegister()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3VdbeChangeP5()']
3Paths generated!
--------------Analysis-sqlite3ExprCodeGetColumnToReg-@sqlite3.c@line: 92053.....

['f_entry()', 'f_exit()', 'sqlite3ExprCodeGetColumn()']
['f_entry()', 'f_exit()', 'sqlite3ExprCodeGetColumn()', 'sqlite3VdbeAddOp2()']
2Paths generated!
--------------Analysis-sqlite3ExprCacheClear-@sqlite3.c@line: 92068.....

['f_entry()', 'f_exit()']
['cacheEntryClear()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ExprCacheAffinityChange-@sqlite3.c@line: 92088.....

['f_entry()', 'f_exit()', 'sqlite3ExprCacheRemove()']
1Paths generated!
--------------Analysis-sqlite3ExprCodeMove-@sqlite3.c@line: 92096.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheRemove()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-exprToRegister-@sqlite3.c@line: 92125.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprCodeTarget-@sqlite3.c@line: 92143.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ReleaseTempReg()']
1Paths generated!
--------------Analysis-sqlite3ExprCodeAtInit-@sqlite3.c@line: 92760.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDup()', 'sqlite3ExprListAppend()']
1Paths generated!
--------------Analysis-sqlite3ExprCodeTemp-@sqlite3.c@line: 92792.....

['f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3ExprSkipCollate()', 'sqlite3GetTempReg()']
['f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3ExprSkipCollate()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()']
['f_entry()', 'f_exit()', 'sqlite3ExprCodeAtInit()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3ExprSkipCollate()']
['f_entry()', 'f_exit()', 'sqlite3ExprCodeAtInit()', 'sqlite3ExprCompare()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3ExprSkipCollate()']
4Paths generated!
--------------Analysis-sqlite3ExprCode-@sqlite3.c@line: 92830.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()', 'sqlite3VdbeAddOp2()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
3Paths generated!
--------------Analysis-sqlite3ExprCodeCopy-@sqlite3.c@line: 92850.....

['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
['f_entry()', 'f_exit()', 'sqlite3ExprCode()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
2Paths generated!
--------------Analysis-sqlite3ExprCodeFactorable-@sqlite3.c@line: 92863.....

['f_entry()', 'f_exit()', 'sqlite3ExprCode()', 'sqlite3ExprIsConstant()']
['f_entry()', 'f_exit()', 'sqlite3ExprCodeAtInit()', 'sqlite3ExprIsConstant()']
2Paths generated!
--------------Analysis-sqlite3ExprCodeAndCache-@sqlite3.c@line: 92883.....

['assert()', 'exprToRegister()', 'f_entry()', 'f_exit()', 'sqlite3ExprCode()', 'sqlite3VdbeAddOp2()']
1Paths generated!
--------------Analysis-sqlite3ExprCodeExprList-@sqlite3.c@line: 92911.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprIsConstant()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprIsConstant()', 'sqlite3VdbeGetOp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprIsConstant()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeGetOp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeAtInit()', 'sqlite3ExprIsConstant()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
6Paths generated!
--------------Analysis-exprCodeBetween-@sqlite3.c@line: 92964.....

['assert()', 'exprToRegister()', 'f_entry()', 'f_exit()', 'sqlite3ExprIfFalse()', 'sqlite3ReleaseTempReg()']
['assert()', 'exprToRegister()', 'f_entry()', 'f_exit()', 'sqlite3ExprIfTrue()', 'sqlite3ReleaseTempReg()']
2Paths generated!
--------------Analysis-sqlite3ExprIfTrue-@sqlite3.c@line: 93021.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ReleaseTempReg()']
1Paths generated!
--------------Analysis-sqlite3ExprIfFalse-@sqlite3.c@line: 93142.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ReleaseTempReg()']
1Paths generated!
--------------Analysis-sqlite3ExprIfFalseDup-@sqlite3.c@line: 93290.....

['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIfFalse()']
2Paths generated!
--------------Analysis-sqlite3ExprCompare-@sqlite3.c@line: 93322.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprListCompare()']
['f_entry()', 'f_exit()', 'strcmp()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()']
5Paths generated!
--------------Analysis-sqlite3ExprListCompare-@sqlite3.c@line: 93380.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()']
2Paths generated!
--------------Analysis-sqlite3ExprImpliesExpr-@sqlite3.c@line: 93414.....

['f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprImpliesExpr()']
1Paths generated!
--------------Analysis-exprIdxCover-@sqlite3.c@line: 93450.....

['f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()']
1Paths generated!
--------------Analysis-sqlite3ExprCoveredByIndex-@sqlite3.c@line: 93471.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkExpr()']
1Paths generated!
--------------Analysis-exprSrcCount-@sqlite3.c@line: 93503.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3FunctionUsesThisSrc-@sqlite3.c@line: 93532.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkExprList()']
1Paths generated!
--------------Analysis-addAggInfoColumn-@sqlite3.c@line: 93550.....

['f_entry()', 'f_exit()', 'sqlite3ArrayAllocate()']
1Paths generated!
--------------Analysis-addAggInfoFunc-@sqlite3.c@line: 93566.....

['f_entry()', 'f_exit()', 'sqlite3ArrayAllocate()']
1Paths generated!
--------------Analysis-analyzeAggregate-@sqlite3.c@line: 93583.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-analyzeAggregatesInSelect-@sqlite3.c@line: 93708.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ExprAnalyzeAggregates-@sqlite3.c@line: 93723.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkExpr()']
1Paths generated!
--------------Analysis-sqlite3ExprAnalyzeAggList-@sqlite3.c@line: 93739.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprAnalyzeAggregates()']
2Paths generated!
--------------Analysis-sqlite3GetTempReg-@sqlite3.c@line: 93752.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ReleaseTempReg-@sqlite3.c@line: 93767.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3GetTempRange-@sqlite3.c@line: 93784.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3ReleaseTempRange-@sqlite3.c@line: 93798.....

['f_entry()', 'f_exit()', 'sqlite3ExprCacheRemove()']
1Paths generated!
--------------Analysis-sqlite3ClearTempRegCache-@sqlite3.c@line: 93809.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-renameTableFunc-@sqlite3.c@line: 93875.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetToken()', 'sqlite3MPrintf()', 'sqlite3_context_db_handle()', 'sqlite3_result_text()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-renameParentFunc-@sqlite3.c@line: 93940.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3GetToken()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3Dequote()', 'sqlite3GetToken()', 'sqlite3StrICmp()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3Dequote()', 'sqlite3GetToken()', 'sqlite3MPrintf()', 'sqlite3StrICmp()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
4Paths generated!
--------------Analysis-renameTriggerFunc-@sqlite3.c@line: 93997.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetToken()', 'sqlite3MPrintf()', 'sqlite3_context_db_handle()', 'sqlite3_result_text()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-sqlite3AlterFunctions-@sqlite3.c@line: 94069.....

['f_entry()', 'f_exit()', 'sqlite3InsertBuiltinFuncs()']
1Paths generated!
--------------Analysis-whereOrName-@sqlite3.c@line: 94098.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3MPrintf()']
['f_entry()', 'f_exit()', 'sqlite3MPrintf()']
2Paths generated!
--------------Analysis-whereForeignKeys-@sqlite3.c@line: 94116.....

['f_entry()', 'f_exit()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'sqlite3FkReferences()', 'whereOrName()']
2Paths generated!
--------------Analysis-whereTempTriggers-@sqlite3.c@line: 94132.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3MPrintf()']
['f_entry()', 'f_exit()', 'sqlite3TriggerList()']
['f_entry()', 'f_exit()', 'sqlite3TriggerList()', 'whereOrName()']
4Paths generated!
--------------Analysis-reloadTableSchema-@sqlite3.c@line: 94166.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddParseSchemaOp()', 'whereTempTriggers()']
1Paths generated!
--------------Analysis-isSystemTable-@sqlite3.c@line: 94215.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
2Paths generated!
--------------Analysis-sqlite3AlterRenameTable-@sqlite3.c@line: 94227.....

['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3NameFromToken()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Utf8CharLen()', 'sqlite3ViewGetColumnNames()', 'whereTempTriggers()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3NameFromToken()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Utf8CharLen()', 'sqlite3ViewGetColumnNames()', 'whereTempTriggers()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3NameFromToken()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Utf8CharLen()', 'sqlite3ViewGetColumnNames()', 'whereForeignKeys()', 'whereTempTriggers()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3MayAbort()', 'sqlite3NameFromToken()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeLoadString()', 'sqlite3ViewGetColumnNames()', 'whereForeignKeys()', 'whereTempTriggers()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FkReferences()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3MayAbort()', 'sqlite3NameFromToken()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeLoadString()', 'sqlite3ViewGetColumnNames()', 'whereForeignKeys()', 'whereTempTriggers()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FkReferences()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3MayAbort()', 'sqlite3NameFromToken()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeLoadString()', 'sqlite3ViewGetColumnNames()', 'whereForeignKeys()', 'whereTempTriggers()']
6Paths generated!
--------------Analysis-sqlite3AlterFinishAddColumn-@sqlite3.c@line: 94431.....

['assert()', 'f_entry()', 'f_exit()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3DbStrNDup()', 'sqlite3FindTable()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeUsesBtree()']
['assert()', 'f_entry()', 'f_exit()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3FindTable()', 'sqlite3GetTempReg()', 'sqlite3NestedParse()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeUsesBtree()']
['assert()', 'f_entry()', 'f_exit()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3FindTable()', 'sqlite3GetTempReg()', 'sqlite3NestedParse()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3ValueFree()', 'sqlite3ValueFromExpr()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeUsesBtree()']
['assert()', 'f_entry()', 'f_exit()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3ErrorMsg()', 'sqlite3FindTable()', 'sqlite3GetTempReg()', 'sqlite3NestedParse()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3ValueFree()', 'sqlite3ValueFromExpr()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeUsesBtree()']
['assert()', 'f_entry()', 'f_exit()', 'reloadTableSchema()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3ErrorMsg()', 'sqlite3FindTable()', 'sqlite3GetTempReg()', 'sqlite3NestedParse()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeUsesBtree()']
5Paths generated!
--------------Analysis-sqlite3AlterBeginAddColumn-@sqlite3.c@line: 94569.....

['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'memcpy()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'memcpy()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'isSystemTable()', 'memcpy()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()']
3Paths generated!
--------------Analysis-openStatTable-@sqlite3.c@line: 94821.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp2()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3TableLock()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()']
6Paths generated!
--------------Analysis-stat4Destructor-@sqlite3.c@line: 95009.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()']
1Paths generated!
--------------Analysis-statInit-@sqlite3.c@line: 95043.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3_context_db_handle()', 'sqlite3_result_blob()', 'sqlite3_value_int()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3_context_db_handle()', 'sqlite3_result_blob()', 'sqlite3_result_error_nomem()', 'sqlite3_value_int()']
2Paths generated!
--------------Analysis-samplePushPrevious-@sqlite3.c@line: 95289.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-statPush-@sqlite3.c@line: 95355.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_blob()', 'sqlite3_value_int()']
['assert()', 'f_entry()', 'f_exit()', 'samplePushPrevious()', 'sqlite3_value_blob()', 'sqlite3_value_int()']
2Paths generated!
--------------Analysis-statGet-@sqlite3.c@line: 95454.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_blob()']
1Paths generated!
--------------Analysis-callStatGet-@sqlite3.c@line: 95580.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
1Paths generated!
--------------Analysis-analyzeOneTable-@sqlite3.c@line: 95598.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeLoadString()', 'sqlite3_strlike()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeLoadString()', 'sqlite3_strlike()']
['assert()', 'callStatGet()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeLoadString()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_strlike()']
['assert()', 'callStatGet()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3GetVdbe()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeLoadString()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_strlike()']
['assert()', 'callStatGet()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3GetVdbe()', 'sqlite3LocateCollSeq()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeLoadString()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_strlike()']
5Paths generated!
--------------Analysis-loadAnalysis-@sqlite3.c@line: 95924.....

['f_entry()', 'f_exit()', 'sqlite3GetVdbe()']
['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()']
2Paths generated!
--------------Analysis-analyzeDatabase-@sqlite3.c@line: 95934.....

['assert()', 'f_entry()', 'f_exit()', 'loadAnalysis()', 'openStatTable()', 'sqlite3BeginWriteOperation()']
['analyzeOneTable()', 'assert()', 'f_entry()', 'f_exit()', 'loadAnalysis()', 'openStatTable()', 'sqlite3BeginWriteOperation()']
2Paths generated!
--------------Analysis-analyzeTable-@sqlite3.c@line: 95961.....

['analyzeOneTable()', 'assert()', 'f_entry()', 'f_exit()', 'loadAnalysis()', 'openStatTable()', 'sqlite3BeginWriteOperation()', 'sqlite3SchemaToIndex()']
1Paths generated!
--------------Analysis-sqlite3Analyze-@sqlite3.c@line: 95992.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3ReadSchema()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3LocateTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()']
['analyzeTable()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3LocateTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()']
['analyzeTable()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindDb()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindDb()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3LocateTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
['analyzeTable()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindDb()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3LocateTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
['analyzeTable()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindDb()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
['analyzeDatabase()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3FindDb()', 'sqlite3GetVdbe()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
['analyzeDatabase()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()']
13Paths generated!
--------------Analysis-decodeIntArray-@sqlite3.c@line: 96067.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3LogEst()']
2Paths generated!
--------------Analysis-analysisLoader-@sqlite3.c@line: 96138.....

['assert()', 'decodeIntArray()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()']
['assert()', 'decodeIntArray()', 'f_entry()', 'f_exit()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3_stricmp()']
['assert()', 'decodeIntArray()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3PrimaryKeyIndex()', 'sqlite3_stricmp()']
3Paths generated!
--------------Analysis-sqlite3DeleteIndexSamples-@sqlite3.c@line: 96196.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3AnalysisLoad-@sqlite3.c@line: 96474.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DefaultRowEst()', 'sqlite3FindTable()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DefaultRowEst()', 'sqlite3FindTable()', 'sqlite3MPrintf()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3FindTable()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3_exec()']
5Paths generated!
--------------Analysis-resolveAttachExpr-@sqlite3.c@line: 96574.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ResolveExprNames()']
2Paths generated!
--------------Analysis-attachFunc-@sqlite3.c@line: 96598.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeOpen()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3ParseUri()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeOpen()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3ParseUri()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error_code()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeOpen()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3ParseUri()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeOpen()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeOpen()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3MPrintf()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeOpen()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeClose()', 'sqlite3BtreeOpen()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error()', 'sqlite3_result_error_code()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreeOpen()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3Init()', 'sqlite3ParseUri()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeClose()', 'sqlite3BtreeEnter()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeave()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreeOpen()', 'sqlite3BtreePager()', 'sqlite3BtreeSecureDelete()', 'sqlite3BtreeSetPagerFlags()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3PagerLockingMode()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3SchemaGet()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error()', 'sqlite3_result_error_code()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeClose()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreeOpen()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error()', 'sqlite3_result_error_code()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3BtreeClose()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreeOpen()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3DbStrDup()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error()', 'sqlite3_result_error_code()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3BtreeClose()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreeOpen()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3DbStrDup()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3StrICmp()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_result_error()', 'sqlite3_result_error_code()', 'sqlite3_value_text()']
12Paths generated!
--------------Analysis-detachFunc-@sqlite3.c@line: 96800.....

['f_entry()', 'f_exit()', 'sqlite3BtreeClose()', 'sqlite3BtreeIsInBackup()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3CollapseDatabaseArray()', 'sqlite3_context_db_handle()', 'sqlite3_result_error()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3BtreeClose()', 'sqlite3BtreeIsInBackup()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3CollapseDatabaseArray()', 'sqlite3_context_db_handle()', 'sqlite3_result_error()', 'sqlite3_snprintf()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3BtreeClose()', 'sqlite3BtreeIsInBackup()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3CollapseDatabaseArray()', 'sqlite3StrICmp()', 'sqlite3_context_db_handle()', 'sqlite3_result_error()', 'sqlite3_snprintf()', 'sqlite3_value_text()']
3Paths generated!
--------------Analysis-codeAttach-@sqlite3.c@line: 96852.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveAttachExpr()', 'sqlite3ExprCode()', 'sqlite3ExprDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveAttachExpr()', 'sqlite3ExprCode()', 'sqlite3ExprDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'resolveAttachExpr()', 'sqlite3AuthCheck()', 'sqlite3ExprCode()', 'sqlite3ExprDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
3Paths generated!
--------------Analysis-sqlite3Detach-@sqlite3.c@line: 96925.....

['codeAttach()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Attach-@sqlite3.c@line: 96944.....

['codeAttach()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3FixInit-@sqlite3.c@line: 96963.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3FixSrcList-@sqlite3.c@line: 96996.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FixExpr()', 'sqlite3FixSelect()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FixExpr()', 'sqlite3FixSelect()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FixExpr()', 'sqlite3FixSelect()', 'sqlite3StrICmp()']
4Paths generated!
--------------Analysis-sqlite3FixSelect-@sqlite3.c@line: 97026.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FixExpr()', 'sqlite3FixExprList()', 'sqlite3FixSrcList()']
2Paths generated!
--------------Analysis-sqlite3FixExpr-@sqlite3.c@line: 97059.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FixExpr()', 'sqlite3FixExprList()']
['f_entry()', 'f_exit()', 'sqlite3FixExpr()', 'sqlite3FixSelect()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3FixExpr()', 'sqlite3FixExprList()']
4Paths generated!
--------------Analysis-sqlite3FixExprList-@sqlite3.c@line: 97085.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FixExpr()']
2Paths generated!
--------------Analysis-sqlite3FixTriggerStep-@sqlite3.c@line: 97102.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FixExpr()', 'sqlite3FixExprList()', 'sqlite3FixSelect()']
2Paths generated!
--------------Analysis-sqlite3_set_authorizer-@sqlite3.c@line: 97193.....

['f_entry()', 'f_exit()', 'sqlite3ExpirePreparedStatements()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqliteAuthBadReturnCode-@sqlite3.c@line: 97213.....

['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
1Paths generated!
--------------Analysis-sqlite3AuthReadCol-@sqlite3.c@line: 97227.....

['f_entry()', 'f_exit()', 'xAuth()']
['f_entry()', 'f_exit()', 'sqliteAuthBadReturnCode()', 'xAuth()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'xAuth()']
3Paths generated!
--------------Analysis-sqlite3AuthRead-@sqlite3.c@line: 97265.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthReadCol()', 'sqlite3SchemaToIndex()']
1Paths generated!
--------------Analysis-sqlite3AuthCheck-@sqlite3.c@line: 97322.....

['f_entry()', 'f_exit()', 'xAuth()']
['f_entry()', 'f_exit()', 'sqliteAuthBadReturnCode()', 'xAuth()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'xAuth()']
3Paths generated!
--------------Analysis-sqlite3AuthContextPush-@sqlite3.c@line: 97362.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3AuthContextPop-@sqlite3.c@line: 97377.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3TableLock-@sqlite3.c@line: 97436.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()', 'sqlite3OomFault()']
2Paths generated!
--------------Analysis-codeTableLocks-@sqlite3.c@line: 97476.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-sqlite3FinishCoding-@sqlite3.c@line: 97517.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeMakeReady()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeDeletePriorOpcode()']
['assert()', 'codeTableLocks()', 'f_entry()', 'f_exit()', 'sqlite3AutoincrementBegin()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeDeletePriorOpcode()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'codeTableLocks()', 'f_entry()', 'f_exit()', 'sqlite3AutoincrementBegin()', 'sqlite3ExprCode()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeDeletePriorOpcode()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeReady()']
['assert()', 'codeTableLocks()', 'f_entry()', 'f_exit()', 'sqlite3AutoincrementBegin()', 'sqlite3ExprCode()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeDeletePriorOpcode()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeReady()']
['assert()', 'codeTableLocks()', 'f_entry()', 'f_exit()', 'sqlite3AutoincrementBegin()', 'sqlite3ExprCode()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeDeletePriorOpcode()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()']
['assert()', 'codeTableLocks()', 'f_entry()', 'f_exit()', 'sqlite3AutoincrementBegin()', 'sqlite3ExprCode()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeDeletePriorOpcode()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeReady()', 'sqlite3VdbeUsesBtree()']
8Paths generated!
--------------Analysis-sqlite3NestedParse-@sqlite3.c@line: 97645.....

['__builtin_va_start()', 'assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'sqlite3RunParser()', 'sqlite3VMPrintf()']
1Paths generated!
--------------Analysis-sqlite3FindTable-@sqlite3.c@line: 97693.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3HashFind()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3LocateTable-@sqlite3.c@line: 97726.....

['f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3ReadSchema()']
['f_entry()', 'f_exit()', 'sqlite3FindDbName()', 'sqlite3FindTable()', 'sqlite3ReadSchema()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3FindDbName()', 'sqlite3FindTable()', 'sqlite3ReadSchema()']
['f_entry()', 'f_exit()', 'sqlite3FindDbName()', 'sqlite3FindTable()', 'sqlite3HashFind()', 'sqlite3ReadSchema()', 'sqlite3VtabEponymousTableInit()']
4Paths generated!
--------------Analysis-sqlite3LocateTableItem-@sqlite3.c@line: 97776.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3LocateTable()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3LocateTable()', 'sqlite3SchemaToIndex()']
2Paths generated!
--------------Analysis-sqlite3FindIndex-@sqlite3.c@line: 97804.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3HashFind()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-freeIndex-@sqlite3.c@line: 97824.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteIndexSamples()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()']
1Paths generated!
--------------Analysis-sqlite3UnlinkAndDeleteIndex-@sqlite3.c@line: 97844.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'sqlite3HashInsert()']
2Paths generated!
--------------Analysis-sqlite3CollapseDatabaseArray-@sqlite3.c@line: 97877.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
3Paths generated!
--------------Analysis-sqlite3ResetOneSchema-@sqlite3.c@line: 97903.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3SchemaClear()']
1Paths generated!
--------------Analysis-sqlite3ResetAllSchemasOfConnection-@sqlite3.c@line: 97929.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3CollapseDatabaseArray()', 'sqlite3VtabUnlockList()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3CollapseDatabaseArray()', 'sqlite3SchemaClear()', 'sqlite3VtabUnlockList()']
2Paths generated!
--------------Analysis-sqlite3CommitInternalChanges-@sqlite3.c@line: 97947.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3DeleteColumnNames-@sqlite3.c@line: 97955.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprDelete()']
3Paths generated!
--------------Analysis-deleteTable-@sqlite3.c@line: 97984.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteColumnNames()', 'sqlite3ExprListDelete()', 'sqlite3FkDelete()', 'sqlite3SelectDelete()', 'sqlite3VtabClear()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'sqlite3DbFree()', 'sqlite3DeleteColumnNames()', 'sqlite3ExprListDelete()', 'sqlite3FkDelete()', 'sqlite3SelectDelete()', 'sqlite3VtabClear()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'sqlite3DbFree()', 'sqlite3DeleteColumnNames()', 'sqlite3ExprListDelete()', 'sqlite3FkDelete()', 'sqlite3HashInsert()', 'sqlite3SelectDelete()', 'sqlite3VtabClear()']
3Paths generated!
--------------Analysis-sqlite3DeleteTable-@sqlite3.c@line: 98028.....

['deleteTable()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3UnlinkAndDeleteTable-@sqlite3.c@line: 98040.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTable()', 'sqlite3HashInsert()']
1Paths generated!
--------------Analysis-sqlite3NameFromToken-@sqlite3.c@line: 98068.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbStrNDup()', 'sqlite3Dequote()']
2Paths generated!
--------------Analysis-sqlite3OpenMasterTable-@sqlite3.c@line: 98083.....

['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp4Int()']
1Paths generated!
--------------Analysis-sqlite3FindDbName-@sqlite3.c@line: 98098.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3FindDb-@sqlite3.c@line: 98115.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3FindDbName()', 'sqlite3NameFromToken()']
1Paths generated!
--------------Analysis-sqlite3TwoPartName-@sqlite3.c@line: 98140.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindDb()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3FindDb()']
3Paths generated!
--------------Analysis-sqlite3CheckObjectName-@sqlite3.c@line: 98176.....

['f_entry()', 'f_exit()', 'sqlite3_strnicmp()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3_strnicmp()']
2Paths generated!
--------------Analysis-sqlite3PrimaryKeyIndex-@sqlite3.c@line: 98189.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ColumnOfIndex-@sqlite3.c@line: 98199.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3StartTable-@sqlite3.c@line: 98223.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3TwoPartName()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenMasterTable()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeUsesBtree()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenMasterTable()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeUsesBtree()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenMasterTable()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeUsesBtree()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3CheckObjectName()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenMasterTable()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeUsesBtree()', 'strcmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3GetVdbe()', 'sqlite3OpenMasterTable()', 'sqlite3ReadSchema()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeUsesBtree()', 'strcmp()']
6Paths generated!
--------------Analysis-sqlite3AddColumn-@sqlite3.c@line: 98431.....

['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbMallocRaw()', 'sqlite3Dequote()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3AffinityType()', 'sqlite3DbMallocRaw()', 'sqlite3Dequote()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3AffinityType()', 'sqlite3DbMallocRaw()', 'sqlite3DbRealloc()', 'sqlite3Dequote()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3AffinityType()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbRealloc()', 'sqlite3Dequote()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3AffinityType()', 'sqlite3DbMallocRaw()', 'sqlite3Dequote()', 'sqlite3Strlen30()', 'sqlite3_stricmp()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3AffinityType()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3Dequote()', 'sqlite3ErrorMsg()', 'sqlite3Strlen30()', 'sqlite3_stricmp()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3AffinityType()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3DbRealloc()', 'sqlite3Dequote()', 'sqlite3ErrorMsg()', 'sqlite3Strlen30()', 'sqlite3_stricmp()']
7Paths generated!
--------------Analysis-sqlite3AddNotNull-@sqlite3.c@line: 98494.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3AffinityType-@sqlite3.c@line: 98526.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetInt32()']
2Paths generated!
--------------Analysis-sqlite3AddDefaultValue-@sqlite3.c@line: 98598.....

['f_entry()', 'f_exit()', 'sqlite3ExprDelete()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIsConstantOrFunction()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprIsConstantOrFunction()']
3Paths generated!
--------------Analysis-sqlite3StringToId-@sqlite3.c@line: 98644.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3AddPrimaryKey-@sqlite3.c@line: 98670.....

['f_entry()', 'f_exit()', 'sqlite3CreateIndex()', 'sqlite3ExprListDelete()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprListDelete()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprListDelete()', 'sqlite3ExprSkipCollate()', 'sqlite3StrICmp()', 'sqlite3StringToId()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3StrICmp()']
5Paths generated!
--------------Analysis-sqlite3AddCheckConstraint-@sqlite3.c@line: 98740.....

['f_entry()', 'f_exit()', 'sqlite3BtreeIsReadonly()', 'sqlite3ExprDelete()']
['f_entry()', 'f_exit()', 'sqlite3BtreeIsReadonly()', 'sqlite3ExprListAppend()']
['f_entry()', 'f_exit()', 'sqlite3BtreeIsReadonly()', 'sqlite3ExprListAppend()', 'sqlite3ExprListSetName()']
3Paths generated!
--------------Analysis-sqlite3AddCollateType-@sqlite3.c@line: 98765.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3LocateCollSeq()', 'sqlite3NameFromToken()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3LocateCollSeq()', 'sqlite3NameFromToken()']
2Paths generated!
--------------Analysis-sqlite3LocateCollSeq-@sqlite3.c@line: 98817.....

['f_entry()', 'f_exit()', 'sqlite3FindCollSeq()']
['f_entry()', 'f_exit()', 'sqlite3FindCollSeq()', 'sqlite3GetCollSeq()']
2Paths generated!
--------------Analysis-sqlite3ChangeCookie-@sqlite3.c@line: 98848.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-identLength-@sqlite3.c@line: 98864.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-identPut-@sqlite3.c@line: 98885.....

['f_entry()', 'f_exit()', 'sqlite3KeywordCode()']
1Paths generated!
--------------Analysis-createTableStmt-@sqlite3.c@line: 98913.....

['f_entry()', 'f_exit()', 'identLength()', 'identPut()', 'sqlite3DbMallocRaw()', 'sqlite3Strlen30()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'identLength()', 'identPut()', 'memcpy()', 'sqlite3DbMallocRaw()', 'sqlite3Strlen30()', 'sqlite3_snprintf()']
['assert()', 'f_entry()', 'f_exit()', 'identLength()', 'identPut()', 'memcpy()', 'sqlite3DbMallocRaw()', 'sqlite3OomFault()', 'sqlite3Strlen30()', 'sqlite3_snprintf()']
3Paths generated!
--------------Analysis-resizeIndexObject-@sqlite3.c@line: 98981.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocZero()']
1Paths generated!
--------------Analysis-estimateTableWidth-@sqlite3.c@line: 99005.....

['f_entry()', 'f_exit()', 'sqlite3LogEst()']
1Paths generated!
--------------Analysis-estimateIndexWidth-@sqlite3.c@line: 99019.....

['f_entry()', 'f_exit()', 'sqlite3LogEst()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3LogEst()']
2Paths generated!
--------------Analysis-hasColumn-@sqlite3.c@line: 99033.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-convertToWithoutRowidTable-@sqlite3.c@line: 99063.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3PrimaryKeyIndex()']
['assert()', 'f_entry()', 'f_exit()', 'resizeIndexObject()', 'sqlite3PrimaryKeyIndex()']
['assert()', 'f_entry()', 'f_exit()', 'hasColumn()', 'resizeIndexObject()', 'sqlite3PrimaryKeyIndex()']
['assert()', 'f_entry()', 'f_exit()', 'hasColumn()', 'resizeIndexObject()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeChangeOpcode()']
['assert()', 'f_entry()', 'f_exit()', 'hasColumn()', 'resizeIndexObject()', 'sqlite3CreateIndex()', 'sqlite3ExprListAppend()', 'sqlite3PrimaryKeyIndex()', 'sqlite3TokenInit()']
5Paths generated!
--------------Analysis-sqlite3EndTable-@sqlite3.c@line: 99210.....

['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3SchemaToIndex()']
['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()', 'sqlite3SchemaToIndex()']
['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()', 'sqlite3SchemaToIndex()', 'sqlite3Utf8CharLen()']
['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3SchemaToIndex()']
['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddParseSchemaOp()']
['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3SchemaToIndex()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddParseSchemaOp()']
['assert()', 'createTableStmt()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3SchemaToIndex()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddParseSchemaOp()']
['assert()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3MayAbort()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3ResultSetOfSelect()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3TableAffinity()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'estimateIndexWidth()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3SchemaToIndex()']
['assert()', 'createTableStmt()', 'estimateIndexWidth()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3MayAbort()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3ResolveSelfReference()', 'sqlite3ResultSetOfSelect()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3TableAffinity()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'convertToWithoutRowidTable()', 'createTableStmt()', 'estimateIndexWidth()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3MayAbort()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3ResolveSelfReference()', 'sqlite3ResultSetOfSelect()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3TableAffinity()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'createTableStmt()', 'estimateIndexWidth()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3ErrorMsg()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3MayAbort()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3ResolveSelfReference()', 'sqlite3ResultSetOfSelect()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3TableAffinity()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'convertToWithoutRowidTable()', 'createTableStmt()', 'estimateIndexWidth()', 'estimateTableWidth()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3ErrorMsg()', 'sqlite3GetVdbe()', 'sqlite3HashInsert()', 'sqlite3MayAbort()', 'sqlite3NestedParse()', 'sqlite3OomFault()', 'sqlite3ResolveSelfReference()', 'sqlite3ResultSetOfSelect()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3TableAffinity()', 'sqlite3Utf8CharLen()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
13Paths generated!
--------------Analysis-sqlite3CreateView-@sqlite3.c@line: 99452.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3EndTable()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3FixInit()', 'sqlite3FixSelect()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3StartTable()', 'sqlite3TwoPartName()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3EndTable()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3FixInit()', 'sqlite3FixSelect()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3StartTable()', 'sqlite3TwoPartName()']
2Paths generated!
--------------Analysis-sqlite3ViewGetColumnNames-@sqlite3.c@line: 99524.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3SelectDup()', 'sqlite3VtabCallConnect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTable()', 'sqlite3ResultSetOfSelect()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SrcListAssignCursors()', 'sqlite3VtabCallConnect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DeleteTable()', 'sqlite3ResultSetOfSelect()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SrcListAssignCursors()', 'sqlite3VtabCallConnect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DeleteTable()', 'sqlite3ResultSetOfSelect()', 'sqlite3SelectAddColumnTypeAndCollation()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SrcListAssignCursors()', 'sqlite3VtabCallConnect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DeleteTable()', 'sqlite3ErrorMsg()', 'sqlite3ResultSetOfSelect()', 'sqlite3SelectAddColumnTypeAndCollation()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SrcListAssignCursors()', 'sqlite3VtabCallConnect()']
5Paths generated!
--------------Analysis-sqliteViewResetAll-@sqlite3.c@line: 99636.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteColumnNames()']
2Paths generated!
--------------Analysis-sqlite3RootPageMoved-@sqlite3.c@line: 99672.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-destroyRootPage-@sqlite3.c@line: 99702.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3MayAbort()', 'sqlite3NestedParse()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp3()']
1Paths generated!
--------------Analysis-destroyTable-@sqlite3.c@line: 99731.....

['f_entry()', 'f_exit()']
['assert()', 'destroyRootPage()', 'f_entry()', 'f_exit()', 'sqlite3SchemaToIndex()']
['assert()', 'f_entry()', 'f_exit()']
3Paths generated!
--------------Analysis-sqlite3ClearStatTables-@sqlite3.c@line: 99789.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3_snprintf()']
['f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3NestedParse()', 'sqlite3_snprintf()']
3Paths generated!
--------------Analysis-sqlite3CodeDropTable-@sqlite3.c@line: 99812.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp4()', 'sqliteViewResetAll()']
['assert()', 'destroyTable()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp4()', 'sqliteViewResetAll()']
['assert()', 'destroyTable()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DropTriggerPtr()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp4()', 'sqliteViewResetAll()']
['assert()', 'destroyTable()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DropTriggerPtr()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp4()', 'sqliteViewResetAll()']
4Paths generated!
--------------Analysis-sqlite3DropTable-@sqlite3.c@line: 99883.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3ViewGetColumnNames()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ClearStatTables()', 'sqlite3CodeDropTable()', 'sqlite3FkDropTable()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3ViewGetColumnNames()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ClearStatTables()', 'sqlite3CodeDropTable()', 'sqlite3ErrorMsg()', 'sqlite3FkDropTable()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3ViewGetColumnNames()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ClearStatTables()', 'sqlite3CodeDropTable()', 'sqlite3CodeVerifyNamedSchema()', 'sqlite3ErrorMsg()', 'sqlite3FkDropTable()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3ViewGetColumnNames()', 'sqlite3_strnicmp()']
4Paths generated!
--------------Analysis-sqlite3CreateForeignKey-@sqlite3.c@line: 99999.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3StrICmp()', 'sqlite3Strlen30()']
6Paths generated!
--------------Analysis-sqlite3DeferForeignKey-@sqlite3.c@line: 100120.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3RefillIndex-@sqlite3.c@line: 100141.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoOfIndex()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3ResolvePartIdxLabel()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoOfIndex()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3ResolvePartIdxLabel()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3UniqueConstraint()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
2Paths generated!
--------------Analysis-sqlite3AllocateIndexObject-@sqlite3.c@line: 100228.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
1Paths generated!
--------------Analysis-sqlite3CreateIndex-@sqlite3.c@line: 100268.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3MPrintf()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3MPrintf()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3NestedParse()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3NestedParse()', 'sqlite3ReadSchema()', 'sqlite3RefillIndex()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeJumpHere()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3ExprSkipCollate()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3ExprSkipCollate()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprSkipCollate()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprListSetSortOrder()', 'sqlite3ExprSkipCollate()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3TokenInit()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3CheckObjectName()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprSkipCollate()', 'sqlite3FindIndex()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3NameFromToken()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3CheckObjectName()', 'sqlite3CodeVerifySchema()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListCheckLength()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprSkipCollate()', 'sqlite3FindIndex()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3NameFromToken()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3CheckObjectName()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprListSetSortOrder()', 'sqlite3ExprSkipCollate()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3NameFromToken()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3TokenInit()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3CheckObjectName()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprListSetSortOrder()', 'sqlite3ExprSkipCollate()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3LocateTableItem()', 'sqlite3NameFromToken()', 'sqlite3OomFault()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3TokenInit()', 'sqlite3TwoPartName()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3CheckObjectName()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprListSetSortOrder()', 'sqlite3ExprSkipCollate()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3LocateTableItem()', 'sqlite3NameFromToken()', 'sqlite3OomFault()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3TokenInit()', 'sqlite3TwoPartName()', 'sqlite3_strnicmp()']
['assert()', 'estimateIndexWidth()', 'f_entry()', 'f_exit()', 'freeIndex()', 'hasColumn()', 'memcpy()', 'sqlite3AllocateIndexObject()', 'sqlite3CheckObjectName()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DefaultRowEst()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprListSetSortOrder()', 'sqlite3ExprSkipCollate()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashInsert()', 'sqlite3LocateCollSeq()', 'sqlite3LocateTableItem()', 'sqlite3NameFromToken()', 'sqlite3OomFault()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReadSchema()', 'sqlite3ResolveSelfReference()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3StrICmp()', 'sqlite3StringToId()', 'sqlite3Strlen30()', 'sqlite3TokenInit()', 'sqlite3TwoPartName()', 'sqlite3_strnicmp()']
22Paths generated!
--------------Analysis-sqlite3DefaultRowEst-@sqlite3.c@line: 100826.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-sqlite3DropIndex-@sqlite3.c@line: 100855.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()']
['assert()', 'destroyRootPage()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3ClearStatTables()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3VdbeAddOp4()']
['assert()', 'destroyRootPage()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3ClearStatTables()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3VdbeAddOp4()']
['assert()', 'destroyRootPage()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3ClearStatTables()', 'sqlite3CodeVerifyNamedSchema()', 'sqlite3FindIndex()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3ReadSchema()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3VdbeAddOp4()']
4Paths generated!
--------------Analysis-sqlite3ArrayAllocate-@sqlite3.c@line: 100936.....

['f_entry()', 'f_exit()', 'memset()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3DbRealloc()']
2Paths generated!
--------------Analysis-sqlite3IdListAppend-@sqlite3.c@line: 100967.....

['f_entry()', 'f_exit()', 'sqlite3ArrayAllocate()', 'sqlite3NameFromToken()']
['f_entry()', 'f_exit()', 'sqlite3ArrayAllocate()', 'sqlite3IdListDelete()', 'sqlite3NameFromToken()']
['f_entry()', 'f_exit()', 'sqlite3ArrayAllocate()', 'sqlite3DbMallocZero()', 'sqlite3IdListDelete()', 'sqlite3NameFromToken()']
3Paths generated!
--------------Analysis-sqlite3IdListDelete-@sqlite3.c@line: 100991.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()']
1Paths generated!
--------------Analysis-sqlite3IdListIndex-@sqlite3.c@line: 101005.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3SrcListEnlarge-@sqlite3.c@line: 101033.....

['assert()', 'f_entry()', 'f_exit()', 'memset()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocSize()', 'sqlite3DbRealloc()']
2Paths generated!
--------------Analysis-sqlite3SrcListAppend-@sqlite3.c@line: 101115.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3NameFromToken()', 'sqlite3SrcListEnlarge()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3NameFromToken()', 'sqlite3SrcListDelete()', 'sqlite3SrcListEnlarge()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3NameFromToken()', 'sqlite3SrcListDelete()', 'sqlite3SrcListEnlarge()']
3Paths generated!
--------------Analysis-sqlite3SrcListAssignCursors-@sqlite3.c@line: 101152.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3SrcListAssignCursors()']
2Paths generated!
--------------Analysis-sqlite3SrcListDelete-@sqlite3.c@line: 101170.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3ExprDelete()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()']
3Paths generated!
--------------Analysis-sqlite3SrcListAppendFromTerm-@sqlite3.c@line: 101204.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3IdListDelete()', 'sqlite3NameFromToken()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3IdListDelete()', 'sqlite3NameFromToken()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()']
3Paths generated!
--------------Analysis-sqlite3SrcListIndexedBy-@sqlite3.c@line: 101248.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3NameFromToken()']
2Paths generated!
--------------Analysis-sqlite3SrcListFuncArgs-@sqlite3.c@line: 101270.....

['f_entry()', 'f_exit()', 'sqlite3ExprListDelete()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3SrcListShiftJoinType-@sqlite3.c@line: 101298.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3BeginTransaction-@sqlite3.c@line: 101311.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeUsesBtree()']
2Paths generated!
--------------Analysis-sqlite3CommitTransaction-@sqlite3.c@line: 101336.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()']
2Paths generated!
--------------Analysis-sqlite3RollbackTransaction-@sqlite3.c@line: 101353.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp2()']
2Paths generated!
--------------Analysis-sqlite3Savepoint-@sqlite3.c@line: 101371.....

['f_entry()', 'f_exit()', 'sqlite3NameFromToken()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3VdbeAddOp4()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3VdbeAddOp4()']
3Paths generated!
--------------Analysis-sqlite3OpenTempDatabase-@sqlite3.c@line: 101391.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeOpen()', 'sqlite3BtreeSetPageSize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeOpen()', 'sqlite3BtreeSetPageSize()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeOpen()', 'sqlite3BtreeSetPageSize()', 'sqlite3ErrorMsg()', 'sqlite3OomFault()']
4Paths generated!
--------------Analysis-sqlite3CodeVerifySchema-@sqlite3.c@line: 101426.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OpenTempDatabase()']
2Paths generated!
--------------Analysis-sqlite3CodeVerifyNamedSchema-@sqlite3.c@line: 101447.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3StrICmp()']
3Paths generated!
--------------Analysis-sqlite3BeginWriteOperation-@sqlite3.c@line: 101471.....

['f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()']
1Paths generated!
--------------Analysis-sqlite3MultiWrite-@sqlite3.c@line: 101485.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3MayAbort-@sqlite3.c@line: 101506.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3HaltConstraint-@sqlite3.c@line: 101516.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
2Paths generated!
--------------Analysis-sqlite3UniqueConstraint-@sqlite3.c@line: 101536.....

['f_entry()', 'f_exit()', 'sqlite3HaltConstraint()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3HaltConstraint()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3XPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3HaltConstraint()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3XPrintf()']
['f_entry()', 'f_exit()', 'sqlite3HaltConstraint()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3XPrintf()']
4Paths generated!
--------------Analysis-sqlite3RowidConstraint-@sqlite3.c@line: 101569.....

['f_entry()', 'f_exit()', 'sqlite3HaltConstraint()', 'sqlite3MPrintf()']
1Paths generated!
--------------Analysis-collationMatch-@sqlite3.c@line: 101593.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-reindexTable-@sqlite3.c@line: 101612.....

['f_entry()', 'f_exit()']
['collationMatch()', 'f_entry()', 'f_exit()']
['collationMatch()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3RefillIndex()', 'sqlite3SchemaToIndex()']
3Paths generated!
--------------Analysis-reindexDatabases-@sqlite3.c@line: 101631.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'reindexTable()']
2Paths generated!
--------------Analysis-sqlite3Reindex-@sqlite3.c@line: 101663.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()']
['f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3RefillIndex()', 'sqlite3TwoPartName()']
['f_entry()', 'f_exit()', 'reindexTable()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3RefillIndex()', 'sqlite3TwoPartName()']
['assert()', 'f_entry()', 'f_exit()', 'reindexTable()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindCollSeq()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3RefillIndex()', 'sqlite3TwoPartName()']
['assert()', 'f_entry()', 'f_exit()', 'reindexDatabases()', 'reindexTable()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindCollSeq()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3RefillIndex()', 'sqlite3TwoPartName()']
['f_entry()', 'f_exit()', 'reindexDatabases()', 'reindexTable()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3FindIndex()', 'sqlite3FindTable()', 'sqlite3NameFromToken()', 'sqlite3ReadSchema()', 'sqlite3RefillIndex()', 'sqlite3TwoPartName()']
6Paths generated!
--------------Analysis-sqlite3KeyInfoOfIndex-@sqlite3.c@line: 101723.....

['f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()', 'sqlite3LocateCollSeq()']
4Paths generated!
--------------Analysis-sqlite3WithAdd-@sqlite3.c@line: 101755.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3NameFromToken()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprListDelete()', 'sqlite3NameFromToken()', 'sqlite3SelectDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbRealloc()', 'sqlite3ExprListDelete()', 'sqlite3NameFromToken()', 'sqlite3SelectDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprListDelete()', 'sqlite3NameFromToken()', 'sqlite3SelectDelete()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3NameFromToken()', 'sqlite3SelectDelete()', 'sqlite3StrICmp()']
5Paths generated!
--------------Analysis-sqlite3WithDelete-@sqlite3.c@line: 101805.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3SelectDelete()']
3Paths generated!
--------------Analysis-callCollNeeded-@sqlite3.c@line: 101843.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueFree()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()', 'sqlite3ValueText()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueFree()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()', 'sqlite3ValueText()', 'xCollNeeded16()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'xCollNeeded()']
4Paths generated!
--------------Analysis-synthCollSeq-@sqlite3.c@line: 101872.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FindCollSeq()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3FindCollSeq()']
3Paths generated!
--------------Analysis-sqlite3GetCollSeq-@sqlite3.c@line: 101902.....

['assert()', 'f_entry()', 'f_exit()', 'synthCollSeq()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'synthCollSeq()']
['assert()', 'callCollNeeded()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3FindCollSeq()', 'synthCollSeq()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3FindCollSeq()', 'synthCollSeq()']
4Paths generated!
--------------Analysis-sqlite3CheckCollSeq-@sqlite3.c@line: 101943.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetCollSeq()']
2Paths generated!
--------------Analysis-findCollSeqEntry-@sqlite3.c@line: 101971.....

['f_entry()', 'f_exit()', 'sqlite3HashFind()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
4Paths generated!
--------------Analysis-sqlite3FindCollSeq-@sqlite3.c@line: 102024.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'findCollSeqEntry()']
2Paths generated!
--------------Analysis-matchQuality-@sqlite3.c@line: 102071.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-functionSearch-@sqlite3.c@line: 102106.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3InsertBuiltinFuncs-@sqlite3.c@line: 102122.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'functionSearch()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionSearch()', 'sqlite3Strlen30()']
3Paths generated!
--------------Analysis-sqlite3FindFunction-@sqlite3.c@line: 102166.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionSearch()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionSearch()', 'matchQuality()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'matchQuality()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
6Paths generated!
--------------Analysis-sqlite3SchemaClear-@sqlite3.c@line: 102256.....

['f_entry()', 'f_exit()', 'sqlite3HashClear()', 'sqlite3HashInit()']
['f_entry()', 'f_exit()', 'sqlite3DeleteTable()', 'sqlite3HashClear()', 'sqlite3HashInit()']
['f_entry()', 'f_exit()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3HashClear()', 'sqlite3HashInit()']
3Paths generated!
--------------Analysis-sqlite3SchemaGet-@sqlite3.c@line: 102288.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3HashInit()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3OomFault()']
['f_entry()', 'f_exit()', 'sqlite3BtreeSchema()']
4Paths generated!
--------------Analysis-sqlite3SrcListLookup-@sqlite3.c@line: 102339.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTable()', 'sqlite3IndexedByLookup()', 'sqlite3LocateTableItem()']
1Paths generated!
--------------Analysis-sqlite3IsReadOnly-@sqlite3.c@line: 102360.....

['f_entry()', 'f_exit()', 'sqlite3GetVTable()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3GetVTable()']
2Paths generated!
--------------Analysis-sqlite3MaterializeView-@sqlite3.c@line: 102397.....

['f_entry()', 'f_exit()', 'sqlite3ExprDup()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3SelectNew()', 'sqlite3SrcListAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()', 'sqlite3ExprDup()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3SelectNew()', 'sqlite3SrcListAppend()']
2Paths generated!
--------------Analysis-sqlite3DeleteFrom-@sqlite3.c@line: 102516.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateRowDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3ExprCodeGetColumn()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableLock()', 'sqlite3TriggersExist()', 'sqlite3ViewGetColumnNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableLock()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3ViewGetColumnNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableLock()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp4()', 'sqlite3ViewGetColumnNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MaterializeView()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableLock()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MaterializeView()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableLock()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MaterializeView()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableLock()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()']
27Paths generated!
--------------Analysis-sqlite3GenerateRowDelete-@sqlite3.c@line: 102934.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTrigger()', 'sqlite3FkActions()', 'sqlite3FkRequired()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTrigger()', 'sqlite3FkActions()', 'sqlite3FkRequired()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTrigger()', 'sqlite3FkActions()', 'sqlite3FkRequired()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTrigger()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3TriggerColmask()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTrigger()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3TriggerColmask()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTrigger()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3TriggerColmask()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
6Paths generated!
--------------Analysis-sqlite3GenerateRowIndexDelete-@sqlite3.c@line: 103078.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GenerateIndexKey()', 'sqlite3ResolvePartIdxLabel()', 'sqlite3VdbeAddOp3()']
['f_entry()', 'f_exit()', 'sqlite3PrimaryKeyIndex()']
3Paths generated!
--------------Analysis-sqlite3GenerateIndexKey-@sqlite3.c@line: 103142.....

['f_entry()', 'f_exit()', 'sqlite3GetTempRange()', 'sqlite3ReleaseTempRange()']
['f_entry()', 'f_exit()', 'sqlite3GetTempRange()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()']
['f_entry()', 'f_exit()', 'sqlite3ExprCodeLoadIndexColumn()', 'sqlite3GetTempRange()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeDeletePriorOpcode()']
['f_entry()', 'f_exit()', 'sqlite3ExprCachePush()', 'sqlite3ExprCodeLoadIndexColumn()', 'sqlite3ExprIfFalseDup()', 'sqlite3GetTempRange()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeDeletePriorOpcode()', 'sqlite3VdbeMakeLabel()']
4Paths generated!
--------------Analysis-sqlite3ResolvePartIdxLabel-@sqlite3.c@line: 103200.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3VdbeResolveLabel()']
2Paths generated!
--------------Analysis-sqlite3GetFuncCollSeq-@sqlite3.c@line: 103232.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3SkipAccumulatorLoad-@sqlite3.c@line: 103245.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-minmaxFunc-@sqlite3.c@line: 103252.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetFuncCollSeq()', 'sqlite3_result_value()', 'sqlite3_user_data()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetFuncCollSeq()', 'sqlite3MemCompare()', 'sqlite3_result_value()', 'sqlite3_user_data()', 'sqlite3_value_type()']
2Paths generated!
--------------Analysis-typeofFunc-@sqlite3.c@line: 103282.....

['f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-lengthFunc-@sqlite3.c@line: 103303.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-absFunc-@sqlite3.c@line: 103343.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-instrFunc-@sqlite3.c@line: 103392.....

['f_entry()', 'f_exit()', 'memcmp()', 'sqlite3_result_int()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'memcmp()', 'sqlite3_result_int()', 'sqlite3_value_blob()', 'sqlite3_value_bytes()', 'sqlite3_value_type()']
2Paths generated!
--------------Analysis-printfFunc-@sqlite3.c@line: 103434.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3StrAccumInit()', 'sqlite3XPrintf()', 'sqlite3_context_db_handle()', 'sqlite3_result_text()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-substrFunc-@sqlite3.c@line: 103470.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_blob64()', 'sqlite3_value_int()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_text64()', 'sqlite3_value_int()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_text64()', 'sqlite3_value_blob()', 'sqlite3_value_bytes()', 'sqlite3_value_int()', 'sqlite3_value_type()']
3Paths generated!
--------------Analysis-roundFunc-@sqlite3.c@line: 103565.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_double()', 'sqlite3_value_double()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_result_double()', 'sqlite3_value_double()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_result_double()', 'sqlite3_result_error_nomem()', 'sqlite3_value_double()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AtoF()', 'sqlite3_free()', 'sqlite3_mprintf()', 'sqlite3_result_double()', 'sqlite3_result_error_nomem()', 'sqlite3_value_double()', 'sqlite3_value_int()', 'sqlite3_value_type()']
4Paths generated!
--------------Analysis-contextMalloc-@sqlite3.c@line: 103606.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3_context_db_handle()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Malloc()', 'sqlite3_context_db_handle()', 'sqlite3_result_error_nomem()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_result_error_toobig()']
3Paths generated!
--------------Analysis-upperFunc-@sqlite3.c@line: 103627.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
3Paths generated!
--------------Analysis-lowerFunc-@sqlite3.c@line: 103646.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
3Paths generated!
--------------Analysis-randomFunc-@sqlite3.c@line: 103679.....

['f_entry()', 'f_exit()', 'sqlite3_randomness()', 'sqlite3_result_int64()']
1Paths generated!
--------------Analysis-randomBlob-@sqlite3.c@line: 103705.....

['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_value_int()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_randomness()', 'sqlite3_result_blob()', 'sqlite3_value_int()']
2Paths generated!
--------------Analysis-last_insert_rowid-@sqlite3.c@line: 103729.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_result_int64()']
1Paths generated!
--------------Analysis-changes-@sqlite3.c@line: 103749.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_result_int()']
1Paths generated!
--------------Analysis-total_changes-@sqlite3.c@line: 103763.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_result_int()']
1Paths generated!
--------------Analysis-patternCompare-@sqlite3.c@line: 103841.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3Utf8Read()']
['f_entry()', 'f_exit()', 'patternCompare()']
['assert()', 'f_entry()', 'f_exit()', 'patternCompare()']
4Paths generated!
--------------Analysis-sqlite3_strglob-@sqlite3.c@line: 103963.....

['f_entry()', 'f_exit()', 'patternCompare()']
1Paths generated!
--------------Analysis-sqlite3_strlike-@sqlite3.c@line: 103970.....

['f_entry()', 'f_exit()', 'patternCompare()']
1Paths generated!
--------------Analysis-likeFunc-@sqlite3.c@line: 103996.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_result_int()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Utf8CharLen()', 'sqlite3Utf8Read()', 'sqlite3_context_db_handle()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Utf8CharLen()', 'sqlite3Utf8Read()', 'sqlite3_context_db_handle()', 'sqlite3_result_error()', 'sqlite3_result_int()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
4Paths generated!
--------------Analysis-nullifFunc-@sqlite3.c@line: 104061.....

['f_entry()', 'f_exit()', 'sqlite3GetFuncCollSeq()', 'sqlite3MemCompare()']
['f_entry()', 'f_exit()', 'sqlite3GetFuncCollSeq()', 'sqlite3MemCompare()', 'sqlite3_result_value()']
2Paths generated!
--------------Analysis-versionFunc-@sqlite3.c@line: 104077.....

['f_entry()', 'f_exit()', 'sqlite3_result_text()']
1Paths generated!
--------------Analysis-sourceidFunc-@sqlite3.c@line: 104093.....

['f_entry()', 'f_exit()', 'sqlite3_result_text()']
1Paths generated!
--------------Analysis-errlogFunc-@sqlite3.c@line: 104109.....

['f_entry()', 'f_exit()', 'sqlite3_log()']
1Paths generated!
--------------Analysis-compileoptionusedFunc-@sqlite3.c@line: 104125.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_int()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-compileoptiongetFunc-@sqlite3.c@line: 104149.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_int()']
1Paths generated!
--------------Analysis-quoteFunc-@sqlite3.c@line: 104179.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-unicodeFunc-@sqlite3.c@line: 104255.....

['f_entry()', 'f_exit()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3_result_int()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-charFunc-@sqlite3.c@line: 104270.....

['f_entry()', 'f_exit()', 'sqlite3_malloc64()', 'sqlite3_result_text64()']
['f_entry()', 'f_exit()', 'sqlite3_malloc64()', 'sqlite3_result_text64()', 'sqlite3_value_int64()']
['f_entry()', 'f_exit()', 'sqlite3_malloc64()', 'sqlite3_result_error_nomem()', 'sqlite3_result_text64()']
3Paths generated!
--------------Analysis-hexFunc-@sqlite3.c@line: 104311.....

['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_value_blob()', 'sqlite3_value_bytes()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_blob()', 'sqlite3_value_bytes()']
2Paths generated!
--------------Analysis-zeroblobFunc-@sqlite3.c@line: 104339.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_zeroblob64()', 'sqlite3_value_int64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_error_code()', 'sqlite3_result_zeroblob64()', 'sqlite3_value_int64()']
2Paths generated!
--------------Analysis-replaceFunc-@sqlite3.c@line: 104362.....

['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3_context_db_handle()', 'sqlite3_realloc64()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_realloc64()', 'sqlite3_result_error_nomem()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_realloc64()', 'sqlite3_result_error_nomem()', 'sqlite3_result_error_toobig()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_realloc64()', 'sqlite3_result_error_nomem()', 'sqlite3_result_error_toobig()', 'sqlite3_result_text()', 'sqlite3_result_value()', 'sqlite3_value_bytes()', 'sqlite3_value_text()']
6Paths generated!
--------------Analysis-trimFunc-@sqlite3.c@line: 104446.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_result_text()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3_result_text()', 'sqlite3_user_data()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'contextMalloc()', 'f_entry()', 'f_exit()', 'sqlite3_result_text()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
5Paths generated!
--------------Analysis-loadExt-@sqlite3.c@line: 104611.....

['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_load_extension()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3_context_db_handle()', 'sqlite3_free()', 'sqlite3_load_extension()', 'sqlite3_result_error()', 'sqlite3_value_text()']
2Paths generated!
--------------Analysis-sumStep-@sqlite3.c@line: 104661.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_value_numeric_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_value_double()', 'sqlite3_value_numeric_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AddInt64()', 'sqlite3_aggregate_context()', 'sqlite3_value_int64()', 'sqlite3_value_numeric_type()']
3Paths generated!
--------------Analysis-sumFinalize-@sqlite3.c@line: 104682.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_int64()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_double()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_error()']
4Paths generated!
--------------Analysis-avgFinalize-@sqlite3.c@line: 104695.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_double()']
2Paths generated!
--------------Analysis-totalFinalize-@sqlite3.c@line: 104702.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_double()']
1Paths generated!
--------------Analysis-countStep-@sqlite3.c@line: 104721.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_value_type()']
1Paths generated!
--------------Analysis-countFinalize-@sqlite3.c@line: 104737.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_int64()']
1Paths generated!
--------------Analysis-minmaxStep-@sqlite3.c@line: 104746.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemCopy()', 'sqlite3_aggregate_context()', 'sqlite3_context_db_handle()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'sqlite3GetFuncCollSeq()', 'sqlite3MemCompare()', 'sqlite3SkipAccumulatorLoad()', 'sqlite3_aggregate_context()', 'sqlite3_user_data()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'sqlite3GetFuncCollSeq()', 'sqlite3MemCompare()', 'sqlite3VdbeMemCopy()', 'sqlite3_aggregate_context()', 'sqlite3_user_data()', 'sqlite3_value_type()']
['f_entry()', 'f_exit()', 'sqlite3SkipAccumulatorLoad()', 'sqlite3_aggregate_context()', 'sqlite3_value_type()']
5Paths generated!
--------------Analysis-minMaxFinalize-@sqlite3.c@line: 104784.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemRelease()', 'sqlite3_aggregate_context()']
['f_entry()', 'f_exit()', 'sqlite3VdbeMemRelease()', 'sqlite3_aggregate_context()', 'sqlite3_result_value()']
3Paths generated!
--------------Analysis-groupConcatStep-@sqlite3.c@line: 104798.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_context_db_handle()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3_aggregate_context()', 'sqlite3_context_db_handle()', 'sqlite3_value_bytes()', 'sqlite3_value_text()', 'sqlite3_value_type()']
3Paths generated!
--------------Analysis-groupConcatFinalize-@sqlite3.c@line: 104830.....

['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_text()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_error_nomem()']
['f_entry()', 'f_exit()', 'sqlite3_aggregate_context()', 'sqlite3_result_error_toobig()']
4Paths generated!
--------------Analysis-sqlite3RegisterPerConnectionBuiltinFunctions-@sqlite3.c@line: 104850.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_overload_function()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomFault()', 'sqlite3_overload_function()']
2Paths generated!
--------------Analysis-setLikeOptFlag-@sqlite3.c@line: 104861.....

['f_entry()', 'f_exit()', 'sqlite3FindFunction()']
1Paths generated!
--------------Analysis-sqlite3RegisterLikeFunctions-@sqlite3.c@line: 104874.....

['f_entry()', 'f_exit()', 'setLikeOptFlag()', 'sqlite3CreateFunc()']
1Paths generated!
--------------Analysis-sqlite3IsLikeFunction-@sqlite3.c@line: 104902.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3FindFunction()']
1Paths generated!
--------------Analysis-sqlite3RegisterBuiltinFunctions-@sqlite3.c@line: 104935.....

['f_entry()', 'f_exit()', 'sqlite3AlterFunctions()', 'sqlite3InsertBuiltinFuncs()', 'sqlite3RegisterDateTimeFunctions()']
1Paths generated!
--------------Analysis-sqlite3FkLocateIndex-@sqlite3.c@line: 105241.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
5Paths generated!
--------------Analysis-fkLookupParent-@sqlite3.c@line: 105376.....

['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['f_entry()', 'f_exit()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()']
['f_entry()', 'f_exit()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
9Paths generated!
--------------Analysis-exprTableRegister-@sqlite3.c@line: 105517.....

['f_entry()', 'f_exit()', 'sqlite3Expr()']
['f_entry()', 'f_exit()', 'sqlite3Expr()', 'sqlite3ExprAddCollateString()']
2Paths generated!
--------------Analysis-exprTableColumn-@sqlite3.c@line: 105549.....

['f_entry()', 'f_exit()', 'sqlite3Expr()']
1Paths generated!
--------------Analysis-fkScanChildren-@sqlite3.c@line: 105596.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3WhereBegin()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3WhereBegin()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprAnd()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3PExpr()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()']
['assert()', 'exprTableColumn()', 'exprTableRegister()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprAnd()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3PExpr()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()']
['assert()', 'exprTableColumn()', 'exprTableRegister()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprAnd()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3PExpr()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()']
['assert()', 'exprTableRegister()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3Expr()', 'sqlite3ExprAnd()', 'sqlite3ExprDelete()', 'sqlite3GetVdbe()', 'sqlite3PExpr()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()']
7Paths generated!
--------------Analysis-sqlite3FkReferences-@sqlite3.c@line: 105721.....

['f_entry()', 'f_exit()', 'sqlite3HashFind()']
1Paths generated!
--------------Analysis-fkTriggerDelete-@sqlite3.c@line: 105733.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3SelectDelete()']
2Paths generated!
--------------Analysis-sqlite3FkDropTable-@sqlite3.c@line: 105761.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteFrom()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteFrom()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteFrom()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3VdbeAddOp2()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteFrom()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
5Paths generated!
--------------Analysis-fkChildIsModified-@sqlite3.c@line: 105822.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-fkParentIsModified-@sqlite3.c@line: 105849.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-isSetNullAction-@sqlite3.c@line: 105878.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3FkCheck-@sqlite3.c@line: 105911.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FkReferences()', 'sqlite3SchemaToIndex()']
['assert()', 'f_entry()', 'f_exit()', 'fkParentIsModified()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()']
['assert()', 'f_entry()', 'f_exit()', 'fkParentIsModified()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'fkParentIsModified()', 'fkScanChildren()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'fkParentIsModified()', 'fkScanChildren()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'fkChildIsModified()', 'fkParentIsModified()', 'fkScanChildren()', 'isSetNullAction()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3LocateTable()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()', 'sqlite3TableLock()', 'sqlite3_stricmp()']
['assert()', 'f_entry()', 'f_exit()', 'fkChildIsModified()', 'fkLookupParent()', 'fkParentIsModified()', 'fkScanChildren()', 'isSetNullAction()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3LocateTable()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()', 'sqlite3TableLock()', 'sqlite3_stricmp()']
['assert()', 'f_entry()', 'f_exit()', 'fkChildIsModified()', 'fkLookupParent()', 'fkParentIsModified()', 'fkScanChildren()', 'isSetNullAction()', 'sqlite3AuthReadCol()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3LocateTable()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()', 'sqlite3TableLock()', 'sqlite3_stricmp()']
['assert()', 'f_entry()', 'f_exit()', 'fkChildIsModified()', 'fkLookupParent()', 'fkParentIsModified()', 'fkScanChildren()', 'isSetNullAction()', 'sqlite3AuthReadCol()', 'sqlite3DbFree()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3LocateTable()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3_stricmp()']
['assert()', 'f_entry()', 'f_exit()', 'fkChildIsModified()', 'fkLookupParent()', 'fkParentIsModified()', 'fkScanChildren()', 'isSetNullAction()', 'sqlite3AuthReadCol()', 'sqlite3DbFree()', 'sqlite3FindTable()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()', 'sqlite3GetVdbe()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()', 'sqlite3SrcListDelete()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3_stricmp()']
10Paths generated!
--------------Analysis-sqlite3FkOldmask-@sqlite3.c@line: 106111.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FkLocateIndex()', 'sqlite3FkReferences()']
4Paths generated!
--------------Analysis-sqlite3FkRequired-@sqlite3.c@line: 106151.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'fkParentIsModified()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'fkChildIsModified()', 'fkParentIsModified()', 'sqlite3FkReferences()']
4Paths generated!
--------------Analysis-fkActionTrigger-@sqlite3.c@line: 106211.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkLocateIndex()', 'sqlite3SelectDelete()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkLocateIndex()', 'sqlite3SelectDelete()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3FkLocateIndex()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3FkLocateIndex()', 'sqlite3PExpr()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Expr()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3FkLocateIndex()', 'sqlite3PExpr()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SelectNew()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Expr()', 'sqlite3ExprAnd()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3FkLocateIndex()', 'sqlite3PExpr()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SelectNew()', 'sqlite3Strlen30()', 'sqlite3TokenInit()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Expr()', 'sqlite3ExprAnd()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3ExprListSetName()', 'sqlite3FkLocateIndex()', 'sqlite3PExpr()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SelectNew()', 'sqlite3Strlen30()', 'sqlite3TokenInit()']
8Paths generated!
--------------Analysis-sqlite3FkActions-@sqlite3.c@line: 106397.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'fkParentIsModified()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'fkActionTrigger()', 'fkParentIsModified()', 'sqlite3FkReferences()']
['f_entry()', 'f_exit()', 'fkActionTrigger()', 'fkParentIsModified()', 'sqlite3CodeRowTriggerDirect()', 'sqlite3FkReferences()']
5Paths generated!
--------------Analysis-sqlite3FkDelete-@sqlite3.c@line: 106429.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'fkTriggerDelete()', 'sqlite3DbFree()', 'sqlite3HashInsert()']
3Paths generated!
--------------Analysis-sqlite3OpenTable-@sqlite3.c@line: 106495.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3PrimaryKeyIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp4Int()']
2Paths generated!
--------------Analysis-sqlite3IndexAffinityStr-@sqlite3.c@line: 106541.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3ExprAffinity()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3OomFault()']
4Paths generated!
--------------Analysis-sqlite3TableAffinity-@sqlite3.c@line: 106599.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3VdbeChangeP4()']
['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3VdbeAddOp4()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3Strlen30()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeDb()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3OomFault()', 'sqlite3Strlen30()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeDb()']
5Paths generated!
--------------Analysis-readsTable-@sqlite3.c@line: 106634.....

['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeCurrentAddr()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()']
['f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3VdbeCurrentAddr()']
3Paths generated!
--------------Analysis-autoIncBegin-@sqlite3.c@line: 106689.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
2Paths generated!
--------------Analysis-sqlite3AutoincrementBegin-@sqlite3.c@line: 106721.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OpenTable()', 'sqlite3VdbeAddOpList()', 'sqlite3VdbeLoadString()']
2Paths generated!
--------------Analysis-autoIncStep-@sqlite3.c@line: 106776.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
2Paths generated!
--------------Analysis-autoIncrementEnd-@sqlite3.c@line: 106789.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetTempReg()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOpList()']
2Paths generated!
--------------Analysis-sqlite3AutoincrementEnd-@sqlite3.c@line: 106824.....

['f_entry()', 'f_exit()']
['autoIncrementEnd()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3Insert-@sqlite3.c@line: 106943.....

['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3FkCheck()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprListDelete()', 'sqlite3FkCheck()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()', 'sqlite3FkCheck()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3FkCheck()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeAndCache()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3ResolveExprListNames()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'readsTable()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'readsTable()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3IsRowid()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3ReleaseTempRange()', 'sqlite3ResolveExprListNames()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3ReleaseTempRange()', 'sqlite3ResolveExprListNames()', 'sqlite3SchemaToIndex()', 'sqlite3SelectDelete()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3StrICmp()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'readsTable()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3IsRowid()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3StrICmp()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'memset()', 'readsTable()', 'sqlite3AuthCheck()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeFactorable()', 'sqlite3ExprListDelete()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVTable()', 'sqlite3GetVdbe()', 'sqlite3IdListDelete()', 'sqlite3IsReadOnly()', 'sqlite3IsRowid()', 'sqlite3MayAbort()', 'sqlite3OpenTableAndIndices()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3StrICmp()', 'sqlite3TableAffinity()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3VtabMakeWritable()', 'xferOptimization()']
32Paths generated!
--------------Analysis-checkConstraintExprNode-@sqlite3.c@line: 107560.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-checkConstraintUnchanged-@sqlite3.c@line: 107584.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkExpr()']
1Paths generated!
--------------Analysis-sqlite3GenerateConstraintChecks-@sqlite3.c@line: 107685.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3LocateCollSeq()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCodeCopy()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCodeCopy()', 'sqlite3ExprIfFalseDup()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCodeCopy()', 'sqlite3ExprIfFalseDup()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3TableAffinity()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCodeCopy()', 'sqlite3ExprIfFalseDup()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3TableAffinity()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkConstraintUnchanged()', 'f_entry()', 'f_exit()', 'sqlite3ExprIfTrue()', 'sqlite3GetVdbe()', 'sqlite3HaltConstraint()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkConstraintUnchanged()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCodeCopy()', 'sqlite3ExprIfFalseDup()', 'sqlite3ExprIfTrue()', 'sqlite3GetTempRange()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3TableAffinity()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3PrimaryKeyIndex()']
18Paths generated!
--------------Analysis-sqlite3CompleteInsertion-@sqlite3.c@line: 108126.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3TableAffinity()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3TableAffinity()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()']
4Paths generated!
--------------Analysis-sqlite3OpenTableAndIndices-@sqlite3.c@line: 108210.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeChangeP5()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()']
4Paths generated!
--------------Analysis-xferCompatibleIndex-@sqlite3.c@line: 108288.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCompare()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3_stricmp()']
2Paths generated!
--------------Analysis-xferOptimization-@sqlite3.c@line: 108349.....

['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3TriggerList()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeJumpHere()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()', 'xferCompatibleIndex()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()', 'xferCompatibleIndex()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3RowidConstraint()', 'sqlite3SchemaToIndex()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()', 'xferCompatibleIndex()']
['assert()', 'autoIncBegin()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()', 'xferCompatibleIndex()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3RowidConstraint()', 'sqlite3SchemaToIndex()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()', 'xferCompatibleIndex()']
['assert()', 'autoIncBegin()', 'autoIncStep()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifySchema()', 'sqlite3ExprListCompare()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3LocateTableItem()', 'sqlite3OpenTable()', 'sqlite3ReleaseTempReg()', 'sqlite3RowidConstraint()', 'sqlite3SchemaToIndex()', 'sqlite3TriggerList()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_stricmp()', 'strcmp()', 'xferCompatibleIndex()']
11Paths generated!
--------------Analysis-sqlite3_exec-@sqlite3.c@line: 108689.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3SafetyCheckOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3_column_count()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xCallback()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_column_text()', 'sqlite3_column_type()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xCallback()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3OomFault()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_column_text()', 'sqlite3_column_type()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xCallback()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xCallback()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_column_name()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xCallback()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3Malloc()', 'sqlite3MisuseError()', 'sqlite3OomFault()', 'sqlite3SafetyCheckOk()', 'sqlite3Strlen30()', 'sqlite3VdbeFinalize()', 'sqlite3_column_count()', 'sqlite3_column_name()', 'sqlite3_column_text()', 'sqlite3_column_type()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_prepare_v2()', 'sqlite3_step()', 'xCallback()']
12Paths generated!
--------------Analysis-sqlite3LoadExtension-@sqlite3.c@line: 109810.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlClose()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlClose()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_mprintf()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlClose()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlClose()', 'sqlite3OsDlError()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_snprintf()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlClose()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_strnicmp()', 'xInit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3OsDlClose()', 'sqlite3OsDlError()', 'sqlite3OsDlOpen()', 'sqlite3OsDlSym()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_snprintf()', 'sqlite3_strnicmp()', 'xInit()']
8Paths generated!
--------------Analysis-sqlite3_load_extension-@sqlite3.c@line: 109951.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3LoadExtension()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3CloseExtensions-@sqlite3.c@line: 109969.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3OsDlClose()']
2Paths generated!
--------------Analysis-sqlite3_enable_load_extension-@sqlite3.c@line: 109982.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_auto_extension-@sqlite3.c@line: 110039.....

['f_entry()', 'f_exit()', 'sqlite3_initialize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_realloc64()']
3Paths generated!
--------------Analysis-sqlite3_cancel_auto_extension-@sqlite3.c@line: 110086.....

['f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_reset_auto_extension-@sqlite3.c@line: 110111.....

['f_entry()', 'f_exit()', 'sqlite3_initialize()']
['f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3AutoLoadExtensions-@sqlite3.c@line: 110133.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xInit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3MutexAlloc()', 'sqlite3_free()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xInit()']
3Paths generated!
--------------Analysis-getSafetyLevel-@sqlite3.c@line: 110680.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
['f_entry()', 'f_exit()', 'sqlite3Atoi()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()']
3Paths generated!
--------------Analysis-sqlite3GetBoolean-@sqlite3.c@line: 110705.....

['f_entry()', 'f_exit()', 'getSafetyLevel()']
1Paths generated!
--------------Analysis-getLockingMode-@sqlite3.c@line: 110718.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-getAutoVacuum-@sqlite3.c@line: 110733.....

['f_entry()', 'f_exit()', 'sqlite3Atoi()', 'sqlite3StrICmp()']
1Paths generated!
--------------Analysis-getTempStore-@sqlite3.c@line: 110749.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-invalidateTempStorage-@sqlite3.c@line: 110767.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BtreeClose()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3ResetAllSchemasOfConnection()']
['f_entry()', 'f_exit()', 'sqlite3BtreeClose()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3ErrorMsg()', 'sqlite3ResetAllSchemasOfConnection()']
3Paths generated!
--------------Analysis-changeTempStorage-@sqlite3.c@line: 110789.....

['f_entry()', 'f_exit()', 'getTempStore()', 'invalidateTempStorage()']
1Paths generated!
--------------Analysis-setAllColumnNames-@sqlite3.c@line: 110804.....

['f_entry()', 'f_exit()', 'sqlite3VdbeSetNumCols()']
['f_entry()', 'f_exit()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()']
2Paths generated!
--------------Analysis-setOneColumnName-@sqlite3.c@line: 110815.....

['f_entry()', 'f_exit()', 'setAllColumnNames()']
1Paths generated!
--------------Analysis-returnSingleInt-@sqlite3.c@line: 110822.....

['f_entry()', 'f_exit()', 'setOneColumnName()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Dup8()']
1Paths generated!
--------------Analysis-returnSingleText-@sqlite3.c@line: 110831.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'setOneColumnName()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeLoadString()']
2Paths generated!
--------------Analysis-setAllPagerFlags-@sqlite3.c@line: 110849.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeSetPagerFlags()']
3Paths generated!
--------------Analysis-actionName-@sqlite3.c@line: 110877.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3JournalModename-@sqlite3.c@line: 110897.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Pragma-@sqlite3.c@line: 110931.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenTempDatabase()', 'sqlite3TwoPartName()', 'sqlite3VdbeRunOnlyOnce()', 'sqlite3_file_control()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenTempDatabase()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeRunOnlyOnce()', 'sqlite3_file_control()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenTempDatabase()', 'sqlite3TwoPartName()', 'sqlite3VdbeRunOnlyOnce()', 'sqlite3_file_control()', 'sqlite3_stricmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenTempDatabase()', 'sqlite3TwoPartName()', 'sqlite3VdbeRunOnlyOnce()', 'sqlite3_file_control()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'returnSingleText()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3NameFromToken()', 'sqlite3OpenTempDatabase()', 'sqlite3TwoPartName()', 'sqlite3VdbeRunOnlyOnce()', 'sqlite3_file_control()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'returnSingleText()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3NameFromToken()', 'sqlite3OpenTempDatabase()', 'sqlite3ReadSchema()', 'sqlite3TwoPartName()', 'sqlite3VdbeRunOnlyOnce()', 'sqlite3_file_control()', 'sqlite3_free()', 'sqlite3_stricmp()']
6Paths generated!
--------------Analysis-corruptSchema-@sqlite3.c@line: 112651.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3CorruptError()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3MPrintf()']
['f_entry()', 'f_exit()', 'sqlite3CorruptError()', 'sqlite3DbFree()', 'sqlite3MPrintf()']
4Paths generated!
--------------Analysis-sqlite3InitCallback-@sqlite3.c@line: 112680.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindIndex()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindIndex()', 'sqlite3GetInt32()', 'sqlite3_strnicmp()']
['assert()', 'corruptSchema()', 'f_entry()', 'f_exit()', 'sqlite3FindIndex()', 'sqlite3GetInt32()', 'sqlite3_strnicmp()']
['assert()', 'corruptSchema()', 'f_entry()', 'f_exit()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi()', 'sqlite3_finalize()', 'sqlite3_prepare()', 'sqlite3_strnicmp()']
['assert()', 'corruptSchema()', 'f_entry()', 'f_exit()', 'sqlite3Atoi()', 'sqlite3_finalize()', 'sqlite3_prepare()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Atoi()', 'sqlite3OomFault()', 'sqlite3_finalize()', 'sqlite3_prepare()', 'sqlite3_strnicmp()']
['assert()', 'corruptSchema()', 'f_entry()', 'f_exit()']
8Paths generated!
--------------Analysis-sqlite3InitOne-@sqlite3.c@line: 112762.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCommit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()', 'sqlite3ResetAllSchemasOfConnection()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCommit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3SetString()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AbsInt32()', 'sqlite3BtreeCommit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3BtreeSetCacheSize()', 'sqlite3InitCallback()', 'sqlite3OomFault()', 'sqlite3ResetAllSchemasOfConnection()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCommit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()', 'sqlite3ResetAllSchemasOfConnection()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()', 'sqlite3ResetAllSchemasOfConnection()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3BtreeLeave()', 'sqlite3InitCallback()', 'sqlite3OomFault()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3SetString()']
9Paths generated!
--------------Analysis-sqlite3Init-@sqlite3.c@line: 112982.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CommitInternalChanges()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3InitOne()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3InitOne()', 'sqlite3ResetOneSchema()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CommitInternalChanges()', 'sqlite3InitOne()', 'sqlite3ResetOneSchema()']
5Paths generated!
--------------Analysis-sqlite3ReadSchema-@sqlite3.c@line: 113026.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Init()']
2Paths generated!
--------------Analysis-schemaIsValid-@sqlite3.c@line: 113046.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeIsInReadTrans()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCommit()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeIsInReadTrans()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3ResetOneSchema()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommit()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3ResetOneSchema()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommit()', 'sqlite3BtreeGetMeta()', 'sqlite3BtreeIsInReadTrans()', 'sqlite3OomFault()', 'sqlite3ResetOneSchema()']
6Paths generated!
--------------Analysis-sqlite3SchemaToIndex-@sqlite3.c@line: 113095.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ParserReset-@sqlite3.c@line: 113123.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprListDelete()']
3Paths generated!
--------------Analysis-sqlite3Prepare-@sqlite3.c@line: 113139.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ErrorWithMsg()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeFinalize()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeSetSql()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeSetNumCols()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'schemaIsValid()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3Error()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'schemaIsValid()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrNDup()', 'sqlite3ErrorWithMsg()', 'sqlite3ParserReset()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetSql()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'schemaIsValid()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrNDup()', 'sqlite3ErrorWithMsg()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetSql()', 'sqlite3VtabUnlockList()']
['assert()', 'f_entry()', 'f_exit()', 'schemaIsValid()', 'sqlite3ApiExit()', 'sqlite3BtreeSchemaLocked()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrNDup()', 'sqlite3ErrorWithMsg()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetSql()', 'sqlite3VtabUnlockList()']
10Paths generated!
--------------Analysis-sqlite3LockAndPrepare-@sqlite3.c@line: 113296.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3Prepare()', 'sqlite3SafetyCheckOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3Prepare()', 'sqlite3SafetyCheckOk()', 'sqlite3_finalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3MisuseError()', 'sqlite3Prepare()', 'sqlite3SafetyCheckOk()', 'sqlite3_finalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3Reprepare-@sqlite3.c@line: 113335.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3LockAndPrepare()', 'sqlite3TransferBindings()', 'sqlite3VdbeDb()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeResetStepResult()', 'sqlite3VdbeSwap()', 'sqlite3_sql()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3LockAndPrepare()', 'sqlite3OomFault()', 'sqlite3TransferBindings()', 'sqlite3VdbeDb()', 'sqlite3VdbeFinalize()', 'sqlite3VdbeResetStepResult()', 'sqlite3VdbeSwap()', 'sqlite3_sql()']
2Paths generated!
--------------Analysis-sqlite3_prepare-@sqlite3.c@line: 113372.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3LockAndPrepare()']
1Paths generated!
--------------Analysis-sqlite3_prepare_v2-@sqlite3.c@line: 113384.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3LockAndPrepare()']
1Paths generated!
--------------Analysis-sqlite3Prepare16-@sqlite3.c@line: 113402.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3SafetyCheckOk()', 'sqlite3Utf16to8()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3SafetyCheckOk()', 'sqlite3Utf16ByteLen()', 'sqlite3Utf16to8()', 'sqlite3Utf8CharLen()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3LockAndPrepare()', 'sqlite3SafetyCheckOk()', 'sqlite3Utf16to8()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3LockAndPrepare()', 'sqlite3MisuseError()', 'sqlite3SafetyCheckOk()', 'sqlite3Utf16ByteLen()', 'sqlite3Utf16to8()', 'sqlite3Utf8CharLen()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
4Paths generated!
--------------Analysis-sqlite3_prepare16-@sqlite3.c@line: 113460.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Prepare16()']
1Paths generated!
--------------Analysis-sqlite3_prepare16_v2-@sqlite3.c@line: 113472.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Prepare16()']
1Paths generated!
--------------Analysis-clearSelect-@sqlite3.c@line: 113555.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3SrcListDelete()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3SrcListDelete()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3SrcListDelete()', 'sqlite3WithDelete()']
4Paths generated!
--------------Analysis-sqlite3SelectDestInit-@sqlite3.c@line: 113576.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3SelectNew-@sqlite3.c@line: 113589.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'clearSelect()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()']
['assert()', 'clearSelect()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocZero()']
['assert()', 'clearSelect()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprListAppend()']
4Paths generated!
--------------Analysis-sqlite3SelectDelete-@sqlite3.c@line: 113660.....

['f_entry()', 'f_exit()']
['clearSelect()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-findRightmost-@sqlite3.c@line: 113667.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3JoinType-@sqlite3.c@line: 113689.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
['f_entry()', 'f_exit()', 'sqlite3_strnicmp()']
4Paths generated!
--------------Analysis-columnIndex-@sqlite3.c@line: 113750.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-tableAndColumnIndex-@sqlite3.c@line: 113767.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'columnIndex()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-addWhereTerm-@sqlite3.c@line: 113802.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3CreateColumnExpr()', 'sqlite3ExprAnd()', 'sqlite3PExpr()']
1Paths generated!
--------------Analysis-setJoinExpr-@sqlite3.c@line: 113861.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'setJoinExpr()']
2Paths generated!
--------------Analysis-sqliteProcessJoin-@sqlite3.c@line: 113892.....

['f_entry()', 'f_exit()']
['addWhereTerm()', 'columnIndex()', 'f_entry()', 'f_exit()', 'tableAndColumnIndex()']
['addWhereTerm()', 'columnIndex()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'tableAndColumnIndex()']
['f_entry()', 'f_exit()', 'sqlite3ExprAnd()']
['addWhereTerm()', 'columnIndex()', 'f_entry()', 'f_exit()', 'setJoinExpr()', 'sqlite3ErrorMsg()', 'sqlite3ExprAnd()', 'tableAndColumnIndex()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
['f_entry()', 'f_exit()', 'tableAndColumnIndex()']
['addWhereTerm()', 'f_entry()', 'f_exit()', 'tableAndColumnIndex()']
8Paths generated!
--------------Analysis-pushOntoSorter-@sqlite3.c@line: 113992.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeExprList()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeExprList()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeExprList()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()']
['assert()', 'f_entry()', 'f_exit()', 'keyInfoFromExprList()', 'memset()', 'sqlite3ExprCodeExprList()', 'sqlite3ExprCodeMove()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()']
4Paths generated!
--------------Analysis-codeOffset-@sqlite3.c@line: 114112.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
2Paths generated!
--------------Analysis-codeDistinct-@sqlite3.c@line: 114132.....

['f_entry()', 'f_exit()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()']
1Paths generated!
--------------Analysis-checkForMultiColumnSelectError-@sqlite3.c@line: 114158.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
2Paths generated!
--------------Analysis-selectInnerLoop-@sqlite3.c@line: 114183.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeExprList()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
5Paths generated!
--------------Analysis-sqlite3KeyInfoAlloc-@sqlite3.c@line: 114517.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3OomFault()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRaw()']
2Paths generated!
--------------Analysis-sqlite3KeyInfoUnref-@sqlite3.c@line: 114537.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
3Paths generated!
--------------Analysis-sqlite3KeyInfoRef-@sqlite3.c@line: 114548.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-keyInfoFromExprList-@sqlite3.c@line: 114580.....

['f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()', 'sqlite3KeyInfoAlloc()']
3Paths generated!
--------------Analysis-selectOpName-@sqlite3.c@line: 114610.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-explainTempTable-@sqlite3.c@line: 114632.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3MPrintf()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-explainComposite-@sqlite3.c@line: 114670.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MPrintf()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-generateSortTail-@sqlite3.c@line: 114698.....

['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3CodeOnce()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
8Paths generated!
--------------Analysis-columnTypeImpl-@sqlite3.c@line: 114846.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-generateColumnTypes-@sqlite3.c@line: 114997.....

['f_entry()', 'f_exit()']
['columnTypeImpl()', 'f_entry()', 'f_exit()', 'sqlite3VdbeSetColName()']
2Paths generated!
--------------Analysis-generateColumnNames-@sqlite3.c@line: 115037.....

['assert()', 'f_entry()', 'f_exit()', 'generateColumnTypes()', 'sqlite3VdbeSetNumCols()']
['assert()', 'f_entry()', 'f_exit()', 'generateColumnTypes()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()']
['assert()', 'f_entry()', 'f_exit()', 'generateColumnTypes()', 'sqlite3DbStrDup()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()']
['assert()', 'f_entry()', 'f_exit()', 'generateColumnTypes()', 'sqlite3MPrintf()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()']
4Paths generated!
--------------Analysis-sqlite3ColumnsFromExprList-@sqlite3.c@line: 115116.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3HashClear()', 'sqlite3HashInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3HashClear()', 'sqlite3HashInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprSkipCollate()', 'sqlite3HashClear()', 'sqlite3HashFind()', 'sqlite3HashInit()', 'sqlite3HashInsert()', 'sqlite3MPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprSkipCollate()', 'sqlite3HashClear()', 'sqlite3HashFind()', 'sqlite3HashInit()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprSkipCollate()', 'sqlite3HashClear()', 'sqlite3HashFind()', 'sqlite3HashInit()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprSkipCollate()', 'sqlite3HashClear()', 'sqlite3HashFind()', 'sqlite3HashInit()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3Strlen30()', 'sqlite3_randomness()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprSkipCollate()', 'sqlite3HashClear()', 'sqlite3HashFind()', 'sqlite3HashInit()', 'sqlite3HashInsert()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3Strlen30()', 'sqlite3_randomness()']
7Paths generated!
--------------Analysis-sqlite3SelectAddColumnTypeAndCollation-@sqlite3.c@line: 115217.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3LogEst()']
['assert()', 'columnTypeImpl()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ExprAffinity()', 'sqlite3ExprCollSeq()', 'sqlite3LogEst()', 'sqlite3Strlen30()']
['assert()', 'columnTypeImpl()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbStrDup()', 'sqlite3ExprAffinity()', 'sqlite3ExprCollSeq()', 'sqlite3LogEst()', 'sqlite3Strlen30()']
['assert()', 'columnTypeImpl()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbReallocOrFree()', 'sqlite3DbStrDup()', 'sqlite3ExprAffinity()', 'sqlite3ExprCollSeq()', 'sqlite3LogEst()', 'sqlite3Strlen30()']
['assert()', 'columnTypeImpl()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbReallocOrFree()', 'sqlite3DbStrDup()', 'sqlite3ExprAffinity()', 'sqlite3ExprCollSeq()', 'sqlite3LogEst()', 'sqlite3Strlen30()']
5Paths generated!
--------------Analysis-sqlite3ResultSetOfSelect-@sqlite3.c@line: 115266.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3SelectAddColumnTypeAndCollation()', 'sqlite3SelectPrep()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3DeleteTable()', 'sqlite3SelectAddColumnTypeAndCollation()', 'sqlite3SelectPrep()']
2Paths generated!
--------------Analysis-allocVdbe-@sqlite3.c@line: 115302.....

['f_entry()', 'f_exit()', 'sqlite3VdbeCreate()']
['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeCreate()']
2Paths generated!
--------------Analysis-sqlite3GetVdbe-@sqlite3.c@line: 115312.....

['f_entry()', 'f_exit()']
['allocVdbe()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-computeLimitRegisters-@sqlite3.c@line: 115341.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ExprIsInteger()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ExprIsInteger()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIsInteger()', 'sqlite3GetVdbe()', 'sqlite3LogEst()', 'sqlite3VdbeAddOp2()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIsInteger()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeGoto()']
5Paths generated!
--------------Analysis-multiSelectCollSeq-@sqlite3.c@line: 115396.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()']
['assert()', 'f_entry()', 'f_exit()', 'multiSelectCollSeq()', 'sqlite3ExprCollSeq()']
3Paths generated!
--------------Analysis-multiSelectOrderByKeyInfo-@sqlite3.c@line: 115422.....

['f_entry()', 'f_exit()', 'sqlite3KeyInfoAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'multiSelectCollSeq()', 'sqlite3ExprAddCollateString()', 'sqlite3KeyInfoAlloc()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()', 'sqlite3KeyInfoAlloc()']
3Paths generated!
--------------Analysis-generateWithRecursiveQuery-@sqlite3.c@line: 115488.....

['assert()', 'codeOffset()', 'computeLimitRegisters()', 'f_entry()', 'f_exit()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ExprListDelete()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['codeOffset()', 'computeLimitRegisters()', 'f_entry()', 'f_exit()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['codeOffset()', 'computeLimitRegisters()', 'f_entry()', 'f_exit()', 'multiSelectOrderByKeyInfo()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
3Paths generated!
--------------Analysis-multiSelectValues-@sqlite3.c@line: 115637.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Select()']
2Paths generated!
--------------Analysis-multiSelect-@sqlite3.c@line: 115700.....

['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3SelectDelete()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP4()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'multiSelectCollSeq()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'multiSelectCollSeq()', 'multiSelectOrderBy()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP4()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateWithRecursiveQuery()', 'multiSelectCollSeq()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP4()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateWithRecursiveQuery()', 'multiSelectCollSeq()', 'multiSelectValues()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP4()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateWithRecursiveQuery()', 'multiSelectCollSeq()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP4()']
['assert()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateWithRecursiveQuery()', 'multiSelectCollSeq()', 'multiSelectValues()', 'sqlite3ErrorMsg()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3SelectDelete()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP4()']
9Paths generated!
--------------Analysis-sqlite3SelectWrongNumTermsError-@sqlite3.c@line: 116061.....

['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
1Paths generated!
--------------Analysis-generateOutputSubroutine-@sqlite3.c@line: 116090.....

['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeOffset()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
3Paths generated!
--------------Analysis-multiSelectOrderBy-@sqlite3.c@line: 116301.....

['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateOutputSubroutine()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoUnref()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateOutputSubroutine()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoUnref()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoUnref()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoUnref()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoUnref()', 'sqlite3LogEstAdd()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3LogEstAdd()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'multiSelectCollSeq()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3LogEstAdd()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'multiSelectCollSeq()', 'multiSelectOrderByKeyInfo()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3LogEstAdd()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'computeLimitRegisters()', 'explainComposite()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateOutputSubroutine()', 'multiSelectCollSeq()', 'multiSelectOrderByKeyInfo()', 'sqlite3DbMallocRawNN()', 'sqlite3Expr()', 'sqlite3ExprDelete()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDup()', 'sqlite3KeyInfoAlloc()', 'sqlite3KeyInfoUnref()', 'sqlite3LogEstAdd()', 'sqlite3ResolveOrderGroupBy()', 'sqlite3Select()', 'sqlite3SelectDelete()', 'sqlite3SelectDestInit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
9Paths generated!
--------------Analysis-substExpr-@sqlite3.c@line: 116630.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'substExpr()', 'substExprList()']
['f_entry()', 'f_exit()', 'substExpr()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()']
4Paths generated!
--------------Analysis-substExprList-@sqlite3.c@line: 116659.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'substExpr()']
2Paths generated!
--------------Analysis-substSelect-@sqlite3.c@line: 116671.....

['assert()', 'f_entry()', 'f_exit()', 'substExpr()', 'substExprList()']
['assert()', 'f_entry()', 'f_exit()', 'substExpr()', 'substExprList()', 'substSelect()']
2Paths generated!
--------------Analysis-flattenSubquery-@sqlite3.c@line: 116840.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3SelectDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3Dequote()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3SelectDelete()', 'sqlite3SrcListAppend()', 'sqlite3SrcListEnlarge()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3SelectDelete()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3Dequote()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SrcListEnlarge()', 'substSelect()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3Dequote()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprListDup()', 'sqlite3ExprListFlags()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'sqlite3SrcListEnlarge()', 'substSelect()']
9Paths generated!
--------------Analysis-pushDownWhereTerms-@sqlite3.c@line: 117290.....

['f_entry()', 'f_exit()', 'sqlite3ExprIsTableConstant()']
['f_entry()', 'f_exit()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprIsTableConstant()', 'substExpr()']
['f_entry()', 'f_exit()', 'pushDownWhereTerms()', 'sqlite3ExprAnd()', 'sqlite3ExprDup()', 'sqlite3ExprIsTableConstant()', 'substExpr()']
3Paths generated!
--------------Analysis-minMaxQuery-@sqlite3.c@line: 117344.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-isSimpleCount-@sqlite3.c@line: 117380.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3IndexedByLookup-@sqlite3.c@line: 117411.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3StrICmp()']
3Paths generated!
--------------Analysis-convertCompoundSelectToSubquery-@sqlite3.c@line: 117450.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3ExprListAppend()', 'sqlite3SrcListAppendFromTerm()']
1Paths generated!
--------------Analysis-cannotBeFunction-@sqlite3.c@line: 117505.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
2Paths generated!
--------------Analysis-searchWith-@sqlite3.c@line: 117524.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3WithPush-@sqlite3.c@line: 117555.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-withExpand-@sqlite3.c@line: 117580.....

['assert()', 'f_entry()', 'f_exit()', 'searchWith()']
['assert()', 'cannotBeFunction()', 'f_entry()', 'f_exit()', 'searchWith()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3SelectDup()', 'sqlite3WalkSelect()']
['assert()', 'cannotBeFunction()', 'f_entry()', 'f_exit()', 'searchWith()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3SelectDup()', 'sqlite3WalkSelect()']
['assert()', 'cannotBeFunction()', 'f_entry()', 'f_exit()', 'searchWith()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3SelectDup()', 'sqlite3StrICmp()', 'sqlite3WalkSelect()']
4Paths generated!
--------------Analysis-selectPopWith-@sqlite3.c@line: 117696.....

['f_entry()', 'f_exit()', 'findRightmost()']
['assert()', 'f_entry()', 'f_exit()', 'findRightmost()']
2Paths generated!
--------------Analysis-selectExpander-@sqlite3.c@line: 117732.....

['f_entry()', 'f_exit()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()']
['f_entry()', 'f_exit()', 'sqlite3ExprListDelete()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListSetName()', 'sqlite3MatchSpanName()', 'sqlite3SrcListAssignCursors()', 'sqlite3TokenInit()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListSetName()', 'sqlite3MPrintf()', 'sqlite3MatchSpanName()', 'sqlite3SrcListAssignCursors()', 'sqlite3TokenInit()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListSetName()', 'sqlite3MatchSpanName()', 'sqlite3SrcListAssignCursors()', 'sqlite3TokenInit()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListSetName()', 'sqlite3MatchSpanName()', 'sqlite3PExpr()', 'sqlite3SrcListAssignCursors()', 'sqlite3TokenInit()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListSetName()', 'sqlite3MPrintf()', 'sqlite3MatchSpanName()', 'sqlite3PExpr()', 'sqlite3SrcListAssignCursors()', 'sqlite3TokenInit()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3Expr()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3ExprListSetName()', 'sqlite3IdListIndex()', 'sqlite3MPrintf()', 'sqlite3MatchSpanName()', 'sqlite3PExpr()', 'sqlite3SrcListAssignCursors()', 'sqlite3TokenInit()', 'sqliteProcessJoin()', 'tableAndColumnIndex()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListDelete()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAssignCursors()', 'sqlite3StrICmp()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3IndexedByLookup()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()', 'withExpand()']
['assert()', 'cannotBeFunction()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3IndexedByLookup()', 'sqlite3LocateTableItem()', 'sqlite3SrcListAssignCursors()', 'sqliteProcessJoin()', 'withExpand()']
['assert()', 'cannotBeFunction()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3IndexedByLookup()', 'sqlite3LocateTableItem()', 'sqlite3SelectDup()', 'sqlite3SrcListAssignCursors()', 'sqlite3ViewGetColumnNames()', 'sqlite3WalkSelect()', 'sqliteProcessJoin()', 'withExpand()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3IndexedByLookup()', 'sqlite3MPrintf()', 'sqlite3SrcListAssignCursors()', 'sqlite3WalkSelect()', 'sqliteProcessJoin()', 'withExpand()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnsFromExprList()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListDelete()', 'sqlite3IndexedByLookup()', 'sqlite3MPrintf()', 'sqlite3SrcListAssignCursors()', 'sqlite3WalkSelect()', 'sqlite3WithPush()', 'sqliteProcessJoin()', 'withExpand()']
18Paths generated!
--------------Analysis-sqlite3ExprWalkNoop-@sqlite3.c@line: 118011.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3SelectExpand-@sqlite3.c@line: 118029.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkSelect()']
1Paths generated!
--------------Analysis-selectAddSubqueryTypeInfo-@sqlite3.c@line: 118060.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3SelectAddColumnTypeAndCollation()']
2Paths generated!
--------------Analysis-sqlite3SelectAddTypeInfo-@sqlite3.c@line: 118094.....

['f_entry()', 'f_exit()', 'memset()', 'sqlite3WalkSelect()']
1Paths generated!
--------------Analysis-sqlite3SelectPrep-@sqlite3.c@line: 118118.....

['f_entry()', 'f_exit()', 'sqlite3ResolveSelectNames()', 'sqlite3SelectAddTypeInfo()', 'sqlite3SelectExpand()']
1Paths generated!
--------------Analysis-resetAccumulator-@sqlite3.c@line: 118143.....

['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
['assert()', 'f_entry()', 'f_exit()', 'keyInfoFromExprList()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3VdbeAddOp3()']
3Paths generated!
--------------Analysis-finalizeAggFunctions-@sqlite3.c@line: 118184.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-updateAccumulator-@sqlite3.c@line: 118200.....

['f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()']
['f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeJumpHere()']
['f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3VdbeJumpHere()']
['f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeJumpHere()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ExprCollSeq()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()']
['assert()', 'codeDistinct()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ExprCodeExprList()', 'sqlite3GetTempRange()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()']
10Paths generated!
--------------Analysis-explainSimpleCount-@sqlite3.c@line: 118283.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3MPrintf()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-sqlite3Select-@sqlite3.c@line: 118317.....

['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'isSimpleCount()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'isSimpleCount()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'isSimpleCount()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'minMaxQuery()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainSimpleCount()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SchemaToIndex()', 'sqlite3SelectPrep()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainSimpleCount()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3SchemaToIndex()', 'sqlite3SelectPrep()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainSimpleCount()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoOfIndex()', 'sqlite3SchemaToIndex()', 'sqlite3SelectPrep()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainSimpleCount()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3PrimaryKeyIndex()', 'sqlite3SchemaToIndex()', 'sqlite3SelectPrep()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCode()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeExprList()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeExprList()', 'sqlite3ExprCodeGetColumnToReg()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainSimpleCount()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoOfIndex()', 'sqlite3PrimaryKeyIndex()', 'sqlite3SchemaToIndex()', 'sqlite3SelectPrep()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainSimpleCount()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'isSimpleCount()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprAnalyzeAggregates()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3GetVdbe()', 'sqlite3KeyInfoOfIndex()', 'sqlite3PrimaryKeyIndex()', 'sqlite3SchemaToIndex()', 'sqlite3SelectPrep()', 'sqlite3TableLock()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprAnalyzeAggregates()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeExprList()', 'sqlite3ExprCodeGetColumnToReg()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprAnalyzeAggregates()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeExprList()', 'sqlite3ExprCodeGetColumnToReg()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'finalizeAggFunctions()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'resetAccumulator()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprAnalyzeAggList()', 'sqlite3ExprAnalyzeAggregates()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeExprList()', 'sqlite3ExprCodeGetColumnToReg()', 'sqlite3ExprCodeMove()', 'sqlite3ExprIfFalse()', 'sqlite3ExprListCompare()', 'sqlite3GetTempRange()', 'sqlite3GetTempReg()', 'sqlite3GetVdbe()', 'sqlite3ReleaseTempRange()', 'sqlite3ReleaseTempReg()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereIsSorted()', 'updateAccumulator()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'memset()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3CodeOnce()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'multiSelect()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'flattenSubquery()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'multiSelect()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3DbFree()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'flattenSubquery()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'multiSelect()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
['assert()', 'checkForMultiColumnSelectError()', 'computeLimitRegisters()', 'explainTempTable()', 'f_entry()', 'f_exit()', 'flattenSubquery()', 'generateColumnNames()', 'generateSortTail()', 'keyInfoFromExprList()', 'memset()', 'multiSelect()', 'pushDownWhereTerms()', 'selectInnerLoop()', 'sqlite3AuthCheck()', 'sqlite3ClearTempRegCache()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3ExprListCompare()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'sqlite3GetVdbe()', 'sqlite3Select()', 'sqlite3SelectDestInit()', 'sqlite3SelectExprHeight()', 'sqlite3SelectPrep()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeOpcode()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeEndCoroutine()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereIsDistinct()', 'sqlite3WhereIsOrdered()', 'sqlite3WhereOrderedInnerLoop()', 'sqlite3WhereOutputRowCount()']
38Paths generated!
--------------Analysis-sqlite3_get_table_cb-@sqlite3.c@line: 119241.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3Strlen30()', 'sqlite3_malloc64()']
['f_entry()', 'f_exit()', 'sqlite3_free()', 'sqlite3_mprintf()']
['f_entry()', 'f_exit()', 'sqlite3_mprintf()']
['f_entry()', 'f_exit()', 'sqlite3_realloc64()']
5Paths generated!
--------------Analysis-sqlite3_get_table-@sqlite3.c@line: 119315.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_exec()', 'sqlite3_free()', 'sqlite3_malloc64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_exec()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_exec()', 'sqlite3_free()', 'sqlite3_free_table()', 'sqlite3_malloc64()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_exec()', 'sqlite3_free()', 'sqlite3_free_table()', 'sqlite3_malloc64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_exec()', 'sqlite3_free()', 'sqlite3_free_table()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_realloc64()']
5Paths generated!
--------------Analysis-sqlite3_free_table-@sqlite3.c@line: 119384.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3_free()']
2Paths generated!
--------------Analysis-sqlite3DeleteTriggerStep-@sqlite3.c@line: 119419.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()']
2Paths generated!
--------------Analysis-sqlite3TriggerList-@sqlite3.c@line: 119447.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrICmp()']
3Paths generated!
--------------Analysis-sqlite3BeginTrigger-@sqlite3.c@line: 119480.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashFind()', 'sqlite3IdListDelete()', 'sqlite3IdListDup()', 'sqlite3NameFromToken()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3DeleteTrigger()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashFind()', 'sqlite3IdListDelete()', 'sqlite3IdListDup()', 'sqlite3NameFromToken()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3DeleteTrigger()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashFind()', 'sqlite3IdListDelete()', 'sqlite3IdListDup()', 'sqlite3NameFromToken()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckObjectName()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3DeleteTrigger()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashFind()', 'sqlite3IdListDelete()', 'sqlite3IdListDup()', 'sqlite3NameFromToken()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3_strnicmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CheckObjectName()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3DeleteTrigger()', 'sqlite3ErrorMsg()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3FixInit()', 'sqlite3FixSrcList()', 'sqlite3HashFind()', 'sqlite3IdListDelete()', 'sqlite3IdListDup()', 'sqlite3NameFromToken()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TwoPartName()', 'sqlite3_strnicmp()']
5Paths generated!
--------------Analysis-sqlite3FinishTrigger-@sqlite3.c@line: 119669.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTrigger()', 'sqlite3DeleteTriggerStep()', 'sqlite3FixExpr()', 'sqlite3FixInit()', 'sqlite3FixTriggerStep()', 'sqlite3SchemaToIndex()', 'sqlite3TokenInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTrigger()', 'sqlite3DeleteTriggerStep()', 'sqlite3FixExpr()', 'sqlite3FixInit()', 'sqlite3FixTriggerStep()', 'sqlite3HashInsert()', 'sqlite3SchemaToIndex()', 'sqlite3TokenInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTrigger()', 'sqlite3DeleteTriggerStep()', 'sqlite3FixExpr()', 'sqlite3FixInit()', 'sqlite3FixTriggerStep()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3SchemaToIndex()', 'sqlite3TokenInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTrigger()', 'sqlite3DeleteTriggerStep()', 'sqlite3FixExpr()', 'sqlite3FixInit()', 'sqlite3FixTriggerStep()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3SchemaToIndex()', 'sqlite3TokenInit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginWriteOperation()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3DbStrNDup()', 'sqlite3DeleteTrigger()', 'sqlite3DeleteTriggerStep()', 'sqlite3FixExpr()', 'sqlite3FixInit()', 'sqlite3FixTriggerStep()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3TokenInit()', 'sqlite3VdbeAddParseSchemaOp()']
5Paths generated!
--------------Analysis-sqlite3TriggerSelectStep-@sqlite3.c@line: 119749.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3SelectDelete()']
2Paths generated!
--------------Analysis-triggerStepAllocate-@sqlite3.c@line: 119767.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocZero()', 'sqlite3Dequote()']
2Paths generated!
--------------Analysis-sqlite3TriggerInsertStep-@sqlite3.c@line: 119792.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3IdListDelete()', 'sqlite3SelectDelete()', 'triggerStepAllocate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3SelectDelete()', 'sqlite3SelectDup()', 'triggerStepAllocate()']
2Paths generated!
--------------Analysis-sqlite3TriggerUpdateStep-@sqlite3.c@line: 119821.....

['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'triggerStepAllocate()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprListDelete()', 'sqlite3ExprListDup()', 'triggerStepAllocate()']
2Paths generated!
--------------Analysis-sqlite3TriggerDeleteStep-@sqlite3.c@line: 119846.....

['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'triggerStepAllocate()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'triggerStepAllocate()']
2Paths generated!
--------------Analysis-sqlite3DeleteTrigger-@sqlite3.c@line: 119865.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTriggerStep()', 'sqlite3ExprDelete()', 'sqlite3IdListDelete()']
1Paths generated!
--------------Analysis-sqlite3DropTrigger-@sqlite3.c@line: 119883.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DropTriggerPtr()', 'sqlite3ReadSchema()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3CodeVerifyNamedSchema()', 'sqlite3DropTriggerPtr()', 'sqlite3ReadSchema()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DropTriggerPtr()', 'sqlite3ErrorMsg()', 'sqlite3ReadSchema()', 'sqlite3SrcListDelete()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DropTriggerPtr()', 'sqlite3HashFind()', 'sqlite3ReadSchema()', 'sqlite3SrcListDelete()', 'sqlite3StrICmp()']
4Paths generated!
--------------Analysis-tableOfTrigger-@sqlite3.c@line: 119925.....

['f_entry()', 'f_exit()', 'sqlite3HashFind()']
1Paths generated!
--------------Analysis-sqlite3DropTriggerPtr-@sqlite3.c@line: 119933.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3SchemaToIndex()', 'tableOfTrigger()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3GetVdbe()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4()', 'tableOfTrigger()']
2Paths generated!
--------------Analysis-sqlite3UnlinkAndDeleteTrigger-@sqlite3.c@line: 119973.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTrigger()', 'sqlite3HashInsert()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DeleteTrigger()', 'sqlite3HashInsert()', 'tableOfTrigger()']
3Paths generated!
--------------Analysis-checkColumnOverlap-@sqlite3.c@line: 120001.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3IdListIndex()']
2Paths generated!
--------------Analysis-sqlite3TriggersExist-@sqlite3.c@line: 120016.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'checkColumnOverlap()', 'f_entry()', 'f_exit()']
['assert()', 'checkColumnOverlap()', 'f_entry()', 'f_exit()', 'sqlite3TriggerList()']
3Paths generated!
--------------Analysis-targetSrcList-@sqlite3.c@line: 120052.....

['f_entry()', 'f_exit()', 'sqlite3SrcListAppend()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListAppend()']
2Paths generated!
--------------Analysis-codeTriggerProgram-@sqlite3.c@line: 120077.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp0()']
2Paths generated!
--------------Analysis-transferParseError-@sqlite3.c@line: 120172.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-codeRowTrigger-@sqlite3.c@line: 120188.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3ParserReset()', 'sqlite3VdbeLinkSubProgram()']
['assert()', 'codeTriggerProgram()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3ParserReset()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeDelete()', 'sqlite3VdbeLinkSubProgram()', 'transferParseError()']
['assert()', 'codeTriggerProgram()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3ParserReset()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeDelete()', 'sqlite3VdbeLinkSubProgram()', 'sqlite3VdbeTakeOpArray()', 'transferParseError()']
['assert()', 'codeTriggerProgram()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3GetVdbe()', 'sqlite3ParserReset()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeDelete()', 'sqlite3VdbeLinkSubProgram()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeTakeOpArray()', 'transferParseError()']
['assert()', 'codeTriggerProgram()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3GetVdbe()', 'sqlite3ParserReset()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeDelete()', 'sqlite3VdbeLinkSubProgram()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeTakeOpArray()', 'transferParseError()']
['assert()', 'codeTriggerProgram()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIfFalse()', 'sqlite3GetVdbe()', 'sqlite3ParserReset()', 'sqlite3ResolveExprNames()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeDelete()', 'sqlite3VdbeLinkSubProgram()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeTakeOpArray()', 'transferParseError()']
6Paths generated!
--------------Analysis-getRowTrigger-@sqlite3.c@line: 120302.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'codeRowTrigger()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3CodeRowTriggerDirect-@sqlite3.c@line: 120336.....

['assert()', 'f_entry()', 'f_exit()', 'getRowTrigger()', 'sqlite3GetVdbe()']
['assert()', 'f_entry()', 'f_exit()', 'getRowTrigger()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()']
2Paths generated!
--------------Analysis-sqlite3CodeRowTrigger-@sqlite3.c@line: 120408.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'checkColumnOverlap()', 'f_entry()', 'f_exit()']
['assert()', 'checkColumnOverlap()', 'f_entry()', 'f_exit()', 'sqlite3CodeRowTriggerDirect()']
3Paths generated!
--------------Analysis-sqlite3TriggerColmask-@sqlite3.c@line: 120470.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'checkColumnOverlap()', 'f_entry()', 'f_exit()']
['assert()', 'checkColumnOverlap()', 'f_entry()', 'f_exit()', 'getRowTrigger()']
3Paths generated!
--------------Analysis-sqlite3ColumnDefault-@sqlite3.c@line: 120563.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueFromExpr()', 'sqlite3VdbeDb()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueFromExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeDb()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ValueFromExpr()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeDb()']
4Paths generated!
--------------Analysis-sqlite3Update-@sqlite3.c@line: 120591.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCodeGetColumnToReg()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkRequired()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MaterializeView()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MaterializeView()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3IsRowid()', 'sqlite3MaterializeView()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3IsRowid()', 'sqlite3MaterializeView()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3MaterializeView()', 'sqlite3OpenTableAndIndices()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3StrICmp()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3AuthContextPop()', 'sqlite3AuthContextPush()', 'sqlite3AutoincrementEnd()', 'sqlite3BeginWriteOperation()', 'sqlite3CodeRowTrigger()', 'sqlite3CompleteInsertion()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3ExprCode()', 'sqlite3ExprCodeGetColumnOfTable()', 'sqlite3ExprDelete()', 'sqlite3ExprListDelete()', 'sqlite3FkActions()', 'sqlite3FkCheck()', 'sqlite3FkOldmask()', 'sqlite3FkRequired()', 'sqlite3GenerateConstraintChecks()', 'sqlite3GenerateRowIndexDelete()', 'sqlite3GetVdbe()', 'sqlite3IsReadOnly()', 'sqlite3IsRowid()', 'sqlite3MaterializeView()', 'sqlite3OpenTableAndIndices()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ResolveExprNames()', 'sqlite3SchemaToIndex()', 'sqlite3SrcListDelete()', 'sqlite3SrcListLookup()', 'sqlite3StrICmp()', 'sqlite3TableAffinity()', 'sqlite3TriggerColmask()', 'sqlite3TriggersExist()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCountChanges()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetColName()', 'sqlite3VdbeSetNumCols()', 'sqlite3ViewGetColumnNames()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()', 'updateVirtualTable()']
32Paths generated!
--------------Analysis-updateVirtualTable-@sqlite3.c@line: 121230.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCode()', 'sqlite3GetVTable()', 'sqlite3MayAbort()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeChangeToNoop()', 'sqlite3VdbeJumpHere()', 'sqlite3VtabMakeWritable()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereOkOnePass()']
6Paths generated!
--------------Analysis-vacuumFinalize-@sqlite3.c@line: 121360.....

['f_entry()', 'f_exit()', 'sqlite3VdbeFinalize()']
['f_entry()', 'f_exit()', 'sqlite3SetString()', 'sqlite3VdbeFinalize()']
2Paths generated!
--------------Analysis-execSql-@sqlite3.c@line: 121372.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_prepare()', 'sqlite3_step()', 'vacuumFinalize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3SetString()', 'sqlite3_errcode()', 'sqlite3_prepare()', 'sqlite3_step()', 'vacuumFinalize()']
2Paths generated!
--------------Analysis-execExecSql-@sqlite3.c@line: 121391.....

['f_entry()', 'f_exit()', 'sqlite3_prepare()', 'sqlite3_step()', 'vacuumFinalize()']
['execSql()', 'f_entry()', 'f_exit()', 'sqlite3_prepare()', 'sqlite3_step()', 'vacuumFinalize()']
2Paths generated!
--------------Analysis-sqlite3Vacuum-@sqlite3.c@line: 121439.....

['f_entry()', 'f_exit()', 'sqlite3GetVdbe()']
['f_entry()', 'f_exit()', 'sqlite3GetVdbe()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeUsesBtree()']
2Paths generated!
--------------Analysis-sqlite3RunVacuum-@sqlite3.c@line: 121451.....

['assert()', 'execExecSql()', 'execSql()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeCommit()', 'sqlite3BtreeGetOptimalReserve()', 'sqlite3BtreeSetAutoVacuum()', 'sqlite3BtreeSetCacheSize()', 'sqlite3BtreeSetPageSize()', 'sqlite3BtreeSetSpillSize()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerIsMemdb()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3TempInMemory()']
['assert()', 'execExecSql()', 'execSql()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeClose()', 'sqlite3BtreeCommit()', 'sqlite3BtreeGetOptimalReserve()', 'sqlite3BtreeSetAutoVacuum()', 'sqlite3BtreeSetCacheSize()', 'sqlite3BtreeSetPageSize()', 'sqlite3BtreeSetSpillSize()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerIsMemdb()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3TempInMemory()']
['assert()', 'execExecSql()', 'execSql()', 'f_entry()', 'f_exit()', 'sqlite3BtreeBeginTrans()', 'sqlite3BtreeClose()', 'sqlite3BtreeCommit()', 'sqlite3BtreeGetOptimalReserve()', 'sqlite3BtreeSetAutoVacuum()', 'sqlite3BtreeSetCacheSize()', 'sqlite3BtreeSetPageSize()', 'sqlite3BtreeSetSpillSize()', 'sqlite3PagerGetJournalMode()', 'sqlite3PagerIsMemdb()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3SetString()', 'sqlite3TempInMemory()']
3Paths generated!
--------------Analysis-createModule-@sqlite3.c@line: 121749.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbMallocRawNN()', 'sqlite3HashFind()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbMallocRawNN()', 'sqlite3HashFind()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbMallocRawNN()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3HashFind()', 'sqlite3HashInsert()', 'sqlite3OomFault()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xDestroy()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3HashFind()', 'sqlite3MisuseError()', 'sqlite3Strlen30()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xDestroy()']
5Paths generated!
--------------Analysis-sqlite3_create_module-@sqlite3.c@line: 121794.....

['createModule()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_create_module_v2-@sqlite3.c@line: 121809.....

['createModule()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabLock-@sqlite3.c@line: 121830.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3GetVTable-@sqlite3.c@line: 121840.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabUnlock-@sqlite3.c@line: 121851.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'xDisconnect()']
3Paths generated!
--------------Analysis-vtabDisconnectAll-@sqlite3.c@line: 121875.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabDisconnect-@sqlite3.c@line: 121915.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VtabUnlock()']
2Paths generated!
--------------Analysis-sqlite3VtabUnlockList-@sqlite3.c@line: 121953.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExpirePreparedStatements()', 'sqlite3VtabUnlock()']
2Paths generated!
--------------Analysis-sqlite3VtabClear-@sqlite3.c@line: 121984.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'vtabDisconnectAll()']
3Paths generated!
--------------Analysis-addModuleArgument-@sqlite3.c@line: 122001.....

['f_entry()', 'f_exit()', 'sqlite3DbRealloc()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbRealloc()']
2Paths generated!
--------------Analysis-sqlite3VtabBeginParse-@sqlite3.c@line: 122020.....

['addModuleArgument()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3SchemaToIndex()', 'sqlite3StartTable()']
['addModuleArgument()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3AuthCheck()', 'sqlite3SchemaToIndex()', 'sqlite3StartTable()']
2Paths generated!
--------------Analysis-addArgumentToVtab-@sqlite3.c@line: 122070.....

['f_entry()', 'f_exit()']
['addModuleArgument()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3VtabFinishParse-@sqlite3.c@line: 122083.....

['addArgumentToVtab()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()']
['addArgumentToVtab()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3HashInsert()', 'sqlite3OomFault()']
['addArgumentToVtab()', 'f_entry()', 'f_exit()', 'sqlite3ChangeCookie()', 'sqlite3DbFree()', 'sqlite3GetVdbe()', 'sqlite3MPrintf()', 'sqlite3NestedParse()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddParseSchemaOp()', 'sqlite3VdbeLoadString()']
3Paths generated!
--------------Analysis-sqlite3VtabArgInit-@sqlite3.c@line: 122167.....

['addArgumentToVtab()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabArgExtend-@sqlite3.c@line: 122177.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-vtabCallConstructor-@sqlite3.c@line: 122193.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'xConstruct()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'xConstruct()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ColumnType()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3Strlen30()', 'xConstruct()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ColumnType()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3Strlen30()', 'sqlite3_strnicmp()', 'xConstruct()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3VtabUnlock()', 'xConstruct()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3SchemaToIndex()', 'sqlite3_free()', 'xConstruct()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3SchemaToIndex()', 'xConstruct()']
7Paths generated!
--------------Analysis-sqlite3VtabCallConnect-@sqlite3.c@line: 122322.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3GetVTable()', 'sqlite3HashFind()', 'vtabCallConstructor()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ErrorMsg()', 'sqlite3GetVTable()', 'sqlite3HashFind()', 'vtabCallConstructor()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3GetVTable()', 'sqlite3HashFind()']
3Paths generated!
--------------Analysis-growVTrans-@sqlite3.c@line: 122356.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'memset()', 'sqlite3DbRealloc()']
2Paths generated!
--------------Analysis-addToVTrans-@sqlite3.c@line: 122378.....

['f_entry()', 'f_exit()', 'sqlite3VtabLock()']
1Paths generated!
--------------Analysis-sqlite3VtabCallCreate-@sqlite3.c@line: 122392.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3GetVTable()', 'sqlite3HashFind()', 'vtabCallConstructor()']
['assert()', 'f_entry()', 'f_exit()', 'growVTrans()', 'sqlite3FindTable()', 'sqlite3GetVTable()', 'sqlite3HashFind()', 'vtabCallConstructor()']
['addToVTrans()', 'assert()', 'f_entry()', 'f_exit()', 'growVTrans()', 'sqlite3FindTable()', 'sqlite3GetVTable()', 'sqlite3HashFind()', 'vtabCallConstructor()']
['addToVTrans()', 'assert()', 'f_entry()', 'f_exit()', 'growVTrans()', 'sqlite3FindTable()', 'sqlite3GetVTable()', 'sqlite3HashFind()', 'sqlite3MPrintf()']
4Paths generated!
--------------Analysis-sqlite3_declare_vtab-@sqlite3.c@line: 122433.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbMallocZero()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DeleteTable()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DeleteTable()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DeleteTable()', 'sqlite3ErrorWithMsg()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DeleteTable()', 'sqlite3Error()', 'sqlite3MisuseError()', 'sqlite3ParserReset()', 'sqlite3RunParser()', 'sqlite3VdbeFinalize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
5Paths generated!
--------------Analysis-sqlite3VtabCallDestroy-@sqlite3.c@line: 122518.....

['f_entry()', 'f_exit()', 'sqlite3FindTable()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'vtabDisconnectAll()', 'xDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3FindTable()', 'sqlite3VtabUnlock()', 'vtabDisconnectAll()', 'xDestroy()']
3Paths generated!
--------------Analysis-callFinaliser-@sqlite3.c@line: 122556.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VtabUnlock()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VtabUnlock()', 'x()']
4Paths generated!
--------------Analysis-sqlite3VtabSync-@sqlite3.c@line: 122584.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3VtabImportErrmsg()', 'x()']
2Paths generated!
--------------Analysis-sqlite3VtabRollback-@sqlite3.c@line: 122606.....

['callFinaliser()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabCommit-@sqlite3.c@line: 122615.....

['callFinaliser()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3VtabBegin-@sqlite3.c@line: 122628.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'growVTrans()']
['f_entry()', 'f_exit()', 'growVTrans()', 'xBegin()']
['addToVTrans()', 'f_entry()', 'f_exit()', 'growVTrans()', 'xBegin()']
['addToVTrans()', 'f_entry()', 'f_exit()', 'growVTrans()', 'xBegin()', 'xSavepoint()']
5Paths generated!
--------------Analysis-sqlite3VtabSavepoint-@sqlite3.c@line: 122688.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'xMethod()']
2Paths generated!
--------------Analysis-sqlite3VtabOverloadFunction-@sqlite3.c@line: 122734.....

['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3GetVTable()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3GetVTable()', 'xFindFunction()']
2Paths generated!
--------------Analysis-sqlite3VtabMakeWritable-@sqlite3.c@line: 122800.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3_realloc64()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3OomFault()', 'sqlite3_realloc64()']
2Paths generated!
--------------Analysis-sqlite3VtabEponymousTableInit-@sqlite3.c@line: 122833.....

['addModuleArgument()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'vtabCallConstructor()']
['addModuleArgument()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3DbStrDup()', 'sqlite3ErrorMsg()', 'sqlite3VtabEponymousTableClear()', 'vtabCallConstructor()']
2Paths generated!
--------------Analysis-sqlite3VtabEponymousTableClear-@sqlite3.c@line: 122871.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DeleteTable()']
2Paths generated!
--------------Analysis-sqlite3_vtab_on_conflict-@sqlite3.c@line: 122890.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_vtab_config-@sqlite3.c@line: 122908.....

['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-explainAppendTerm-@sqlite3.c@line: 123526.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumAppendAll()']
1Paths generated!
--------------Analysis-explainIndexColumnName-@sqlite3.c@line: 123541.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-explainIndexRange-@sqlite3.c@line: 123562.....

['f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()']
['explainAppendTerm()', 'explainIndexColumnName()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()']
['explainIndexColumnName()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3XPrintf()']
['explainAppendTerm()', 'explainIndexColumnName()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3XPrintf()']
4Paths generated!
--------------Analysis-sqlite3WhereExplainOneScan-@sqlite3.c@line: 123597.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrAccumAppendAll()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VdbeAddOp4()', 'sqlite3XPrintf()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppendAll()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VdbeAddOp4()', 'sqlite3XPrintf()']
['assert()', 'explainIndexRange()', 'f_entry()', 'f_exit()', 'sqlite3StrAccumAppend()', 'sqlite3StrAccumAppendAll()', 'sqlite3StrAccumFinish()', 'sqlite3StrAccumInit()', 'sqlite3VdbeAddOp4()', 'sqlite3XPrintf()']
4Paths generated!
--------------Analysis-disableTerm-@sqlite3.c@line: 123771.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-codeApplyAffinity-@sqlite3.c@line: 123802.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3VdbeAddOp4()']
2Paths generated!
--------------Analysis-codeEqualityTerm-@sqlite3.c@line: 123841.....

['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()', 'sqlite3FindInIndex()', 'sqlite3VdbeAddOp2()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()', 'sqlite3FindInIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()', 'sqlite3FindInIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbReallocOrFree()', 'sqlite3FindInIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3ExprCodeTarget()']
6Paths generated!
--------------Analysis-codeAllEqualityTerms-@sqlite3.c@line: 123959.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()', 'sqlite3ExprCanBeNull()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3CompareAffinity()', 'sqlite3DbStrDup()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprNeedsNoAffinityChange()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()', 'sqlite3ExprCanBeNull()', 'sqlite3VdbeAddOp2()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()', 'sqlite3VdbeAddOp2()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbStrDup()', 'sqlite3ReleaseTempReg()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3CompareAffinity()', 'sqlite3DbStrDup()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprNeedsNoAffinityChange()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3CompareAffinity()', 'sqlite3DbStrDup()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprNeedsNoAffinityChange()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp0()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeJumpHere()']
9Paths generated!
--------------Analysis-whereLikeOptimizationStringFixup-@sqlite3.c@line: 124073.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeGetOp()']
2Paths generated!
--------------Analysis-codeDeferredSeek-@sqlite3.c@line: 124328.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp3()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3VdbeAddOp3()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP4()']
3Paths generated!
--------------Analysis-sqlite3WhereCodeOneLoopStart-@sqlite3.c@line: 124362.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocRaw()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeGoto()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeGetColumnToReg()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3ReleaseTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeGetColumn()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIfFalse()', 'sqlite3PExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprAnd()', 'sqlite3ExprCacheClear()', 'sqlite3ExprDup()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprAnd()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeGetColumn()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIfFalse()', 'sqlite3PExpr()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprAnd()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeGetColumn()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIfFalse()', 'sqlite3PExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprAnd()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCodeGetColumn()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprIfFalse()', 'sqlite3PExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeChangeP1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3WhereBegin()', 'sqlite3WhereEnd()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'codeDeferredSeek()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3ExprCacheStore()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCacheStore()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'codeAllEqualityTerms()', 'codeApplyAffinity()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3CompareAffinity()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCacheRemove()', 'sqlite3ExprCacheStore()', 'sqlite3ExprCanBeNull()', 'sqlite3ExprCode()', 'sqlite3ExprIfFalse()', 'sqlite3ExprNeedsNoAffinityChange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4Int()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()', 'whereLikeOptimizationStringFixup()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheStore()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCacheStore()', 'sqlite3ExprCode()', 'sqlite3ExprIfFalse()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCacheStore()', 'sqlite3ExprCodeTemp()', 'sqlite3ExprIfFalse()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheStore()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'codeEqualityTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheAffinityChange()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCacheStore()', 'sqlite3ExprIfFalse()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['f_entry()', 'f_exit()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3GetTempRange()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3Expr()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3Expr()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3PExpr()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprCode()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'codeEqualityTerm()', 'disableTerm()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DbMallocRaw()', 'sqlite3ExprCacheClear()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprIfFalse()', 'sqlite3GetTempRange()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['f_entry()', 'f_exit()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereGetMask()']
48Paths generated!
--------------Analysis-whereOrInfoDelete-@sqlite3.c@line: 125370.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3WhereClauseClear()']
1Paths generated!
--------------Analysis-whereAndInfoDelete-@sqlite3.c@line: 125378.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3WhereClauseClear()']
1Paths generated!
--------------Analysis-whereClauseInsert-@sqlite3.c@line: 125402.....

['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()', 'sqlite3LogEst()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocSize()', 'sqlite3ExprSkipCollate()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocSize()', 'sqlite3ExprSkipCollate()', 'sqlite3LogEst()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocSize()', 'sqlite3ExprDelete()', 'sqlite3ExprSkipCollate()', 'sqlite3LogEst()']
5Paths generated!
--------------Analysis-allowedOp-@sqlite3.c@line: 125442.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-exprCommute-@sqlite3.c@line: 125462.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()']
2Paths generated!
--------------Analysis-operatorMask-@sqlite3.c@line: 125493.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-isLikeOrGlob-@sqlite3.c@line: 125531.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAffinity()', 'sqlite3ExprSkipCollate()', 'sqlite3IsLikeFunction()', 'sqlite3ValueFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Expr()', 'sqlite3ExprAffinity()', 'sqlite3ExprSkipCollate()', 'sqlite3IsLikeFunction()', 'sqlite3ValueFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Expr()', 'sqlite3ExprAffinity()', 'sqlite3ExprSkipCollate()', 'sqlite3IsLikeFunction()', 'sqlite3ValueFree()', 'sqlite3VdbeSetVarmask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Expr()', 'sqlite3ExprAffinity()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprSkipCollate()', 'sqlite3GetTempReg()', 'sqlite3IsLikeFunction()', 'sqlite3ReleaseTempReg()', 'sqlite3ValueFree()', 'sqlite3VdbeChangeP3()', 'sqlite3VdbeSetVarmask()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprAffinity()', 'sqlite3ExprSkipCollate()', 'sqlite3IsLikeFunction()', 'sqlite3ValueFree()', 'sqlite3VdbeGetBoundValue()', 'sqlite3VdbeSetVarmask()', 'sqlite3_value_type()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Expr()', 'sqlite3ExprAffinity()', 'sqlite3ExprCodeTarget()', 'sqlite3ExprSkipCollate()', 'sqlite3GetTempReg()', 'sqlite3IsLikeFunction()', 'sqlite3ReleaseTempReg()', 'sqlite3ValueFree()', 'sqlite3VdbeChangeP3()', 'sqlite3VdbeGetBoundValue()', 'sqlite3VdbeSetVarmask()', 'sqlite3_value_text()', 'sqlite3_value_type()']
6Paths generated!
--------------Analysis-isMatchOfColumn-@sqlite3.c@line: 125631.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-transferJoinMarkings-@sqlite3.c@line: 125673.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-markTermAsChild-@sqlite3.c@line: 125683.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereNthSubterm-@sqlite3.c@line: 125694.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereCombineDisjuncts-@sqlite3.c@line: 125724.....

['assert()', 'exprAnalyze()', 'f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprDup()', 'whereClauseInsert()']
1Paths generated!
--------------Analysis-exprAnalyzeOrTerm-@sqlite3.c@line: 125850.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3ExprDup()', 'sqlite3ExprListDelete()', 'sqlite3PExpr()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()']
['assert()', 'exprAnalyze()', 'f_entry()', 'f_exit()', 'markTermAsChild()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3ExprDup()', 'sqlite3PExpr()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'transferJoinMarkings()', 'whereClauseInsert()']
['assert()', 'exprAnalyze()', 'f_entry()', 'f_exit()', 'markTermAsChild()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3ExprDup()', 'sqlite3ExprListAppend()', 'sqlite3PExpr()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'transferJoinMarkings()', 'whereClauseInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3ExprAffinity()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereGetMask()', 'sqlite3WhereSplit()']
['assert()', 'exprAnalyze()', 'f_entry()', 'f_exit()', 'markTermAsChild()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3ExprAffinity()', 'sqlite3ExprDup()', 'sqlite3ExprListAppend()', 'sqlite3PExpr()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereGetMask()', 'sqlite3WhereSplit()', 'transferJoinMarkings()', 'whereClauseInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereNthSubterm()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereCombineDisjuncts()', 'whereNthSubterm()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()']
['allowedOp()', 'assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()']
['allowedOp()', 'assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocRawNN()', 'sqlite3DbMallocZero()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereGetMask()', 'sqlite3WhereSplit()']
12Paths generated!
--------------Analysis-termIsEquivalence-@sqlite3.c@line: 126113.....

['f_entry()', 'f_exit()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3ExprAffinity()', 'sqlite3ExprCollSeq()', 'sqlite3StrICmp()', 'sqlite3_stricmp()']
1Paths generated!
--------------Analysis-exprSelectUsage-@sqlite3.c@line: 126141.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereExprUsage()']
['exprSelectUsage()', 'f_entry()', 'f_exit()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereExprUsage()']
3Paths generated!
--------------Analysis-exprMightBeIndexed-@sqlite3.c@line: 126174.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()']
2Paths generated!
--------------Analysis-exprAnalyze-@sqlite3.c@line: 126225.....

['allowedOp()', 'assert()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'sqlite3WhereExprUsage()']
['allowedOp()', 'assert()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'sqlite3ExprDup()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprAnalyzeOrTerm()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'sqlite3ExprDup()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprMightBeIndexed()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprCommute()', 'exprMightBeIndexed()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'operatorMask()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprCommute()', 'exprMightBeIndexed()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'operatorMask()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'termIsEquivalence()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprCommute()', 'exprMightBeIndexed()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'operatorMask()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'termIsEquivalence()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprCommute()', 'exprMightBeIndexed()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'operatorMask()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'sqlite3WhereGetMask()', 'termIsEquivalence()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprCommute()', 'exprMightBeIndexed()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'operatorMask()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereExprUsage()', 'sqlite3WhereGetMask()', 'termIsEquivalence()', 'transferJoinMarkings()', 'whereClauseInsert()']
['allowedOp()', 'assert()', 'exprAnalyze()', 'exprCommute()', 'exprMightBeIndexed()', 'exprSelectUsage()', 'f_entry()', 'f_exit()', 'isLikeOrGlob()', 'isMatchOfColumn()', 'markTermAsChild()', 'operatorMask()', 'sqlite3ExprDelete()', 'sqlite3ExprDup()', 'sqlite3ExprSkipCollate()', 'sqlite3PExpr()', 'sqlite3WhereExprUsage()', 'sqlite3WhereGetMask()', 'termIsEquivalence()', 'transferJoinMarkings()', 'whereClauseInsert()']
11Paths generated!
--------------Analysis-sqlite3WhereSplit-@sqlite3.c@line: 126563.....

['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()', 'sqlite3WhereSplit()']
['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()', 'whereClauseInsert()']
2Paths generated!
--------------Analysis-sqlite3WhereClauseInit-@sqlite3.c@line: 126578.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereClauseClear-@sqlite3.c@line: 126594.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'whereAndInfoDelete()']
['f_entry()', 'f_exit()', 'whereOrInfoDelete()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()']
5Paths generated!
--------------Analysis-sqlite3WhereExprUsage-@sqlite3.c@line: 126619.....

['f_entry()', 'f_exit()', 'sqlite3WhereExprUsage()']
['f_entry()', 'f_exit()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereExprUsage()']
['exprSelectUsage()', 'f_entry()', 'f_exit()', 'sqlite3WhereExprUsage()']
['exprSelectUsage()', 'f_entry()', 'f_exit()', 'sqlite3WhereExprUsage()', 'sqlite3WhereGetMask()']
4Paths generated!
--------------Analysis-sqlite3WhereExprListUsage-@sqlite3.c@line: 126635.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WhereExprUsage()']
2Paths generated!
--------------Analysis-sqlite3WhereExprAnalyze-@sqlite3.c@line: 126655.....

['f_entry()', 'f_exit()']
['exprAnalyze()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-sqlite3WhereTabFuncArgs-@sqlite3.c@line: 126672.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3PExpr()', 'whereClauseInsert()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3PExpr()', 'whereClauseInsert()']
3Paths generated!
--------------Analysis-sqlite3WhereOutputRowCount-@sqlite3.c@line: 126740.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereIsDistinct-@sqlite3.c@line: 126748.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereIsOrdered-@sqlite3.c@line: 126756.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereOrderedInnerLoop-@sqlite3.c@line: 126768.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereContinueLabel-@sqlite3.c@line: 126776.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereBreakLabel-@sqlite3.c@line: 126785.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereOkOnePass-@sqlite3.c@line: 126806.....

['f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-whereOrMove-@sqlite3.c@line: 126821.....

['f_entry()', 'f_exit()', 'memcpy()']
1Paths generated!
--------------Analysis-whereOrInsert-@sqlite3.c@line: 126833.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3WhereGetMask-@sqlite3.c@line: 126870.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-createMask-@sqlite3.c@line: 126889.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereScanNext-@sqlite3.c@line: 126899.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3ExprCompare()', 'sqlite3ExprSkipCollate()', 'sqlite3IndexAffinityOk()', 'sqlite3StrICmp()']
4Paths generated!
--------------Analysis-whereScanInit-@sqlite3.c@line: 126995.....

['f_entry()', 'f_exit()', 'whereScanNext()']
1Paths generated!
--------------Analysis-sqlite3WhereFindTerm-@sqlite3.c@line: 127056.....

['f_entry()', 'f_exit()', 'whereScanInit()']
['f_entry()', 'f_exit()', 'whereScanInit()', 'whereScanNext()']
2Paths generated!
--------------Analysis-findIndexCol-@sqlite3.c@line: 127090.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
['f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()', 'sqlite3ExprSkipCollate()', 'sqlite3StrICmp()']
3Paths generated!
--------------Analysis-indexColumnNotNull-@sqlite3.c@line: 127119.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-isDistinctRedundant-@sqlite3.c@line: 127142.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3WhereFindTerm()']
['f_entry()', 'f_exit()', 'findIndexCol()', 'indexColumnNotNull()', 'sqlite3WhereFindTerm()']
['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
4Paths generated!
--------------Analysis-estLog-@sqlite3.c@line: 127203.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3LogEst()']
2Paths generated!
--------------Analysis-translateColumnToCopy-@sqlite3.c@line: 127219.....

['f_entry()', 'f_exit()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()']
1Paths generated!
--------------Analysis-termCanDriveIndex-@sqlite3.c@line: 127301.....

['f_entry()', 'f_exit()', 'sqlite3IndexAffinityOk()']
1Paths generated!
--------------Analysis-constructAutomaticIndex-@sqlite3.c@line: 127325.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeSetP4KeyInfo()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'termCanDriveIndex()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'termCanDriveIndex()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsTableConstant()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'termCanDriveIndex()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsTableConstant()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'termCanDriveIndex()', 'translateColumnToCopy()', 'whereLoopResize()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsTableConstant()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_log()', 'termCanDriveIndex()', 'translateColumnToCopy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3AllocateIndexObject()', 'sqlite3BinaryCompareCollSeq()', 'sqlite3CodeOnce()', 'sqlite3ExprAnd()', 'sqlite3ExprCachePop()', 'sqlite3ExprCachePush()', 'sqlite3ExprDelete()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsTableConstant()', 'sqlite3GenerateIndexKey()', 'sqlite3GetTempReg()', 'sqlite3ReleaseTempReg()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP2()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeResolveLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3_log()', 'termCanDriveIndex()', 'translateColumnToCopy()', 'whereLoopResize()']
11Paths generated!
--------------Analysis-allocateIndexInfo-@sqlite3.c@line: 127530.....

['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()']
4Paths generated!
--------------Analysis-vtabBestIndex-@sqlite3.c@line: 127658.....

['f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3_free()', 'xBestIndex()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3GetVTable()', 'sqlite3_free()', 'xBestIndex()']
['f_entry()', 'f_exit()', 'sqlite3GetVTable()', 'sqlite3OomFault()', 'sqlite3_free()', 'xBestIndex()']
3Paths generated!
--------------Analysis-whereRangeAdjust-@sqlite3.c@line: 127899.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-whereRangeScanEst-@sqlite3.c@line: 128074.....

['assert()', 'f_entry()', 'f_exit()', 'whereRangeAdjust()']
1Paths generated!
--------------Analysis-whereLoopInit-@sqlite3.c@line: 128448.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereLoopClearUnion-@sqlite3.c@line: 128458.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
['f_entry()', 'f_exit()', 'sqlite3_free()']
3Paths generated!
--------------Analysis-whereLoopClear-@sqlite3.c@line: 128475.....

['f_entry()', 'f_exit()', 'whereLoopClearUnion()', 'whereLoopInit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'whereLoopClearUnion()', 'whereLoopInit()']
2Paths generated!
--------------Analysis-whereLoopResize-@sqlite3.c@line: 128484.....

['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbMallocRawNN()']
['f_entry()', 'f_exit()', 'memcpy()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()']
2Paths generated!
--------------Analysis-whereLoopXfer-@sqlite3.c@line: 128500.....

['f_entry()', 'f_exit()', 'memcpy()', 'whereLoopClearUnion()', 'whereLoopResize()']
['f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'whereLoopClearUnion()', 'whereLoopResize()']
2Paths generated!
--------------Analysis-whereLoopDelete-@sqlite3.c@line: 128519.....

['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'whereLoopClear()']
1Paths generated!
--------------Analysis-whereInfoFree-@sqlite3.c@line: 128527.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3WhereClauseClear()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3WhereClauseClear()', 'whereLoopDelete()']
3Paths generated!
--------------Analysis-whereLoopCheaperProperSubset-@sqlite3.c@line: 128563.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereLoopAdjustCost-@sqlite3.c@line: 128600.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'whereLoopCheaperProperSubset()']
2Paths generated!
--------------Analysis-whereLoopFindLesser-@sqlite3.c@line: 128636.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
2Paths generated!
--------------Analysis-whereLoopInsert-@sqlite3.c@line: 128724.....

['f_entry()', 'f_exit()', 'whereLoopAdjustCost()', 'whereLoopFindLesser()', 'whereLoopXfer()']
['f_entry()', 'f_exit()', 'whereLoopAdjustCost()', 'whereLoopDelete()', 'whereLoopFindLesser()', 'whereLoopXfer()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'whereLoopAdjustCost()', 'whereLoopFindLesser()', 'whereLoopInit()', 'whereLoopXfer()']
['f_entry()', 'f_exit()', 'sqlite3DbMallocRawNN()', 'whereLoopAdjustCost()', 'whereLoopFindLesser()', 'whereLoopInit()', 'whereLoopXfer()', 'whereOrInsert()']
4Paths generated!
--------------Analysis-whereLoopOutputAdjust-@sqlite3.c@line: 128850.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprIsInteger()']
2Paths generated!
--------------Analysis-whereLoopAddBtreeIndex-@sqlite3.c@line: 128918.....

['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'whereLoopResize()', 'whereScanInit()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'whereLoopAddBtreeIndex()', 'whereLoopResize()', 'whereScanInit()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexColumnNotNull()', 'sqlite3LogEstAdd()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereLoopResize()', 'whereScanInit()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexColumnNotNull()', 'sqlite3LogEstAdd()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereLoopResize()', 'whereRangeScanEst()', 'whereScanInit()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexColumnNotNull()', 'sqlite3LogEst()', 'sqlite3LogEstAdd()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereLoopResize()', 'whereRangeScanEst()', 'whereScanInit()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'whereLoopAddBtreeIndex()', 'whereLoopResize()', 'whereScanInit()', 'whereScanNext()']
6Paths generated!
--------------Analysis-indexMightHelpWithOrderBy-@sqlite3.c@line: 129210.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
['f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprSkipCollate()']
3Paths generated!
--------------Analysis-columnsInIndex-@sqlite3.c@line: 129244.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereUsablePartialIndex-@sqlite3.c@line: 129261.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprImpliesExpr()']
['f_entry()', 'f_exit()', 'whereUsablePartialIndex()']
3Paths generated!
--------------Analysis-whereLoopAddBtree-@sqlite3.c@line: 129315.....

['assert()', 'estLog()', 'f_entry()', 'f_exit()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexMightHelpWithOrderBy()', 'whereLoopAddBtreeIndex()', 'whereUsablePartialIndex()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexMightHelpWithOrderBy()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereUsablePartialIndex()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexMightHelpWithOrderBy()', 'sqlite3LogEstAdd()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereUsablePartialIndex()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexMightHelpWithOrderBy()', 'sqlite3ExprCoveredByIndex()', 'sqlite3LogEstAdd()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereUsablePartialIndex()']
['assert()', 'columnsInIndex()', 'estLog()', 'f_entry()', 'f_exit()', 'indexMightHelpWithOrderBy()', 'whereLoopAddBtreeIndex()', 'whereUsablePartialIndex()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'termCanDriveIndex()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'sqlite3LogEstAdd()', 'termCanDriveIndex()', 'whereLoopInsert()']
['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'indexMightHelpWithOrderBy()', 'memset()', 'sqlite3LogEstAdd()', 'termCanDriveIndex()', 'whereLoopAddBtreeIndex()', 'whereLoopInsert()', 'whereLoopOutputAdjust()', 'whereUsablePartialIndex()']
9Paths generated!
--------------Analysis-whereLoopAddVirtualOne-@sqlite3.c@line: 129557.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3LogEst()', 'sqlite3LogEstFromDouble()', 'vtabBestIndex()', 'whereLoopInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3LogEst()', 'sqlite3LogEstFromDouble()', 'sqlite3_free()', 'vtabBestIndex()', 'whereLoopInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3ErrorMsg()', 'sqlite3LogEst()', 'sqlite3LogEstFromDouble()', 'sqlite3_free()', 'vtabBestIndex()', 'whereLoopInsert()']
3Paths generated!
--------------Analysis-whereLoopAddVirtual-@sqlite3.c@line: 129709.....

['allocateIndexInfo()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'whereLoopAddVirtualOne()', 'whereLoopResize()']
['allocateIndexInfo()', 'assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3_free()', 'whereLoopAddVirtualOne()', 'whereLoopResize()']
2Paths generated!
--------------Analysis-whereLoopAddOr-@sqlite3.c@line: 129824.....

['f_entry()', 'f_exit()', 'memset()']
['f_entry()', 'f_exit()', 'memset()', 'whereLoopInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'whereLoopAddBtree()', 'whereLoopInsert()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'whereLoopAddBtree()', 'whereLoopInsert()', 'whereOrMove()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'whereLoopAddBtree()', 'whereLoopInsert()', 'whereOrInsert()', 'whereOrMove()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'whereLoopAddBtree()', 'whereLoopAddOr()', 'whereLoopInsert()', 'whereOrMove()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'whereLoopAddVirtual()', 'whereLoopInsert()', 'whereOrMove()']
7Paths generated!
--------------Analysis-whereLoopAddAll-@sqlite3.c@line: 129947.....

['f_entry()', 'f_exit()', 'whereLoopClear()', 'whereLoopInit()']
['f_entry()', 'f_exit()', 'sqlite3WhereGetMask()', 'whereLoopAddBtree()', 'whereLoopClear()', 'whereLoopInit()']
['f_entry()', 'f_exit()', 'sqlite3WhereGetMask()', 'whereLoopAddBtree()', 'whereLoopAddOr()', 'whereLoopClear()', 'whereLoopInit()']
['f_entry()', 'f_exit()', 'sqlite3WhereGetMask()', 'whereLoopAddVirtual()', 'whereLoopClear()', 'whereLoopInit()']
['f_entry()', 'f_exit()', 'sqlite3WhereGetMask()', 'whereLoopAddOr()', 'whereLoopAddVirtual()', 'whereLoopClear()', 'whereLoopInit()']
5Paths generated!
--------------Analysis-wherePathSatisfiesOrderBy-@sqlite3.c@line: 130015.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprIsConstant()', 'sqlite3WhereExprUsage()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()', 'sqlite3ExprSkipCollate()', 'sqlite3StrICmp()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCompare()', 'sqlite3ExprSkipCollate()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprSkipCollate()', 'sqlite3WhereFindTerm()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCollSeq()', 'sqlite3ExprSkipCollate()', 'sqlite3StrICmp()', 'sqlite3WhereFindTerm()']
7Paths generated!
--------------Analysis-sqlite3WhereIsSorted-@sqlite3.c@line: 130296.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-whereSortingCost-@sqlite3.c@line: 130319.....

['assert()', 'estLog()', 'f_entry()', 'f_exit()', 'sqlite3LogEst()']
1Paths generated!
--------------Analysis-wherePathSolver-@sqlite3.c@line: 130364.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'wherePathSatisfiesOrderBy()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'wherePathSatisfiesOrderBy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3LogEstAdd()', 'wherePathSatisfiesOrderBy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3LogEstAdd()', 'wherePathSatisfiesOrderBy()']
['assert()', 'f_entry()', 'f_exit()', 'memcpy()', 'memset()', 'sqlite3DbFree()', 'sqlite3DbMallocRawNN()', 'sqlite3ErrorMsg()', 'sqlite3LogEstAdd()', 'wherePathSatisfiesOrderBy()', 'whereSortingCost()']
6Paths generated!
--------------Analysis-whereShortCut-@sqlite3.c@line: 130725.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3WhereFindTerm()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
['assert()', 'columnsInIndex()', 'f_entry()', 'f_exit()', 'sqlite3WhereFindTerm()']
['assert()', 'columnsInIndex()', 'f_entry()', 'f_exit()', 'sqlite3WhereFindTerm()', 'sqlite3WhereGetMask()']
4Paths generated!
--------------Analysis-sqlite3WhereBegin-@sqlite3.c@line: 130891.....

['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3SchemaToIndex()', 'sqlite3TableLock()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3OpenTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeChangeP4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3DbMallocZero()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopInit()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'isDistinctRedundant()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'createMask()', 'f_entry()', 'f_exit()', 'isDistinctRedundant()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'sqlite3WhereTabFuncArgs()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'isDistinctRedundant()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'f_entry()', 'f_exit()', 'isDistinctRedundant()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbMallocZero()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'createMask()', 'f_entry()', 'f_exit()', 'isDistinctRedundant()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'sqlite3WhereTabFuncArgs()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
['assert()', 'constructAutomaticIndex()', 'createMask()', 'f_entry()', 'f_exit()', 'isDistinctRedundant()', 'memset()', 'sqlite3CodeVerifySchema()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3ErrorMsg()', 'sqlite3ExprIfFalse()', 'sqlite3ExprIsConstantNotJoin()', 'sqlite3GetVTable()', 'sqlite3SchemaToIndex()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeAddOp4()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeMakeLabel()', 'sqlite3VdbeSetP4KeyInfo()', 'sqlite3WhereClauseInit()', 'sqlite3WhereCodeOneLoopStart()', 'sqlite3WhereExplainOneScan()', 'sqlite3WhereExprAnalyze()', 'sqlite3WhereExprListUsage()', 'sqlite3WhereSplit()', 'sqlite3WhereTabFuncArgs()', 'whereInfoFree()', 'whereLoopAddAll()', 'whereLoopInit()', 'wherePathSolver()', 'whereShortCut()']
21Paths generated!
--------------Analysis-sqlite3WhereEnd-@sqlite3.c@line: 131350.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeResolveLabel()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeResolveLabel()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeResolveLabel()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeResolveLabel()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeResolveLabel()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ExprCacheClear()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ColumnOfIndex()', 'sqlite3ExprCacheClear()', 'sqlite3PrimaryKeyIndex()', 'sqlite3VdbeAddOp1()', 'sqlite3VdbeAddOp2()', 'sqlite3VdbeAddOp3()', 'sqlite3VdbeChangeP5()', 'sqlite3VdbeCurrentAddr()', 'sqlite3VdbeGetOp()', 'sqlite3VdbeGoto()', 'sqlite3VdbeJumpHere()', 'sqlite3VdbeResolveLabel()', 'translateColumnToCopy()', 'whereInfoFree()']
12Paths generated!
--------------Analysis-disableLookaside-@sqlite3.c@line: 131616.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-parserDoubleLinkSelect-@sqlite3.c@line: 131627.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
2Paths generated!
--------------Analysis-spanSet-@sqlite3.c@line: 131648.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-spanExpr-@sqlite3.c@line: 131657.....

['f_entry()', 'f_exit()', 'sqlite3PExpr()']
1Paths generated!
--------------Analysis-spanBinaryExpr-@sqlite3.c@line: 131666.....

['f_entry()', 'f_exit()', 'sqlite3PExpr()']
1Paths generated!
--------------Analysis-exprNot-@sqlite3.c@line: 131679.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3PExpr()']
2Paths generated!
--------------Analysis-spanUnaryPostfix-@sqlite3.c@line: 131687.....

['f_entry()', 'f_exit()', 'sqlite3PExpr()']
1Paths generated!
--------------Analysis-binaryToUnaryIfNull-@sqlite3.c@line: 131699.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3ExprDelete()']
2Paths generated!
--------------Analysis-spanUnaryPrefix-@sqlite3.c@line: 131710.....

['f_entry()', 'f_exit()', 'sqlite3PExpr()']
1Paths generated!
--------------Analysis-parserAddExprIdListTerm-@sqlite3.c@line: 131727.....

['f_entry()', 'f_exit()', 'sqlite3ExprListAppend()', 'sqlite3ExprListSetName()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'sqlite3ExprListAppend()', 'sqlite3ExprListSetName()']
2Paths generated!
--------------Analysis-sqlite3ParserAlloc-@sqlite3.c@line: 133007.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-yy_destructor-@sqlite3.c@line: 133040.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-yy_pop_parser_stack-@sqlite3.c@line: 133142.....

['assert()', 'f_entry()', 'f_exit()', 'yy_destructor()']
1Paths generated!
--------------Analysis-sqlite3ParserFree-@sqlite3.c@line: 133165.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'yy_pop_parser_stack()']
2Paths generated!
--------------Analysis-yy_find_shift_action-@sqlite3.c@line: 133194.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-yy_find_reduce_action-@sqlite3.c@line: 133260.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-yyStackOverflow-@sqlite3.c@line: 133290.....

['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
['f_entry()', 'f_exit()', 'sqlite3ErrorMsg()', 'yy_pop_parser_stack()']
2Paths generated!
--------------Analysis-yy_shift-@sqlite3.c@line: 133331.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'yyStackOverflow()']
2Paths generated!
--------------Analysis-yy_reduce-@sqlite3.c@line: 133711.....

['assert()', 'f_entry()', 'f_exit()', 'yy_find_reduce_action()']
['assert()', 'f_entry()', 'f_exit()', 'yy_accept()', 'yy_find_reduce_action()']
['assert()', 'f_entry()', 'f_exit()', 'yyStackOverflow()', 'yy_accept()', 'yy_find_reduce_action()']
3Paths generated!
--------------Analysis-yy_syntax_error-@sqlite3.c@line: 135001.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrorMsg()']
1Paths generated!
--------------Analysis-yy_accept-@sqlite3.c@line: 135020.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3Parser-@sqlite3.c@line: 135059.....

['assert()', 'f_entry()', 'f_exit()', 'yy_destructor()', 'yy_find_shift_action()', 'yy_syntax_error()']
['assert()', 'f_entry()', 'f_exit()', 'yy_find_shift_action()', 'yy_reduce()']
['assert()', 'f_entry()', 'f_exit()', 'yy_find_shift_action()', 'yy_shift()']
3Paths generated!
--------------Analysis-keywordCode-@sqlite3.c@line: 135378.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3KeywordCode-@sqlite3.c@line: 135643.....

['f_entry()', 'f_exit()', 'keywordCode()']
1Paths generated!
--------------Analysis-sqlite3IsIdChar-@sqlite3.c@line: 135694.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3GetToken-@sqlite3.c@line: 135702.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3RunParser-@sqlite3.c@line: 135982.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTrigger()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3WithDelete()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3VdbeDelete()', 'sqlite3WithDelete()', 'sqlite3_free()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3WithDelete()', 'sqlite3_free()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3MPrintf()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3VdbeDelete()', 'sqlite3WithDelete()', 'sqlite3_free()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3MPrintf()', 'sqlite3Parser()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3VdbeDelete()', 'sqlite3WithDelete()', 'sqlite3_free()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3GetToken()', 'sqlite3MPrintf()', 'sqlite3Parser()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3VdbeDelete()', 'sqlite3WithDelete()', 'sqlite3_free()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3ErrorMsg()', 'sqlite3GetToken()', 'sqlite3MPrintf()', 'sqlite3Parser()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3VdbeDelete()', 'sqlite3WithDelete()', 'sqlite3_free()', 'sqlite3_log()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3DbFree()', 'sqlite3DeleteTable()', 'sqlite3DeleteTrigger()', 'sqlite3ErrorMsg()', 'sqlite3GetToken()', 'sqlite3MPrintf()', 'sqlite3OomFault()', 'sqlite3Parser()', 'sqlite3ParserAlloc()', 'sqlite3ParserFree()', 'sqlite3VdbeDelete()', 'sqlite3WithDelete()', 'sqlite3_free()', 'sqlite3_log()']
10Paths generated!
--------------Analysis-sqlite3_complete-@sqlite3.c@line: 136215.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_complete16-@sqlite3.c@line: 136380.....

['f_entry()', 'f_exit()', 'sqlite3ValueFree()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()', 'sqlite3ValueText()', 'sqlite3_initialize()']
['f_entry()', 'f_exit()', 'sqlite3ValueFree()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()', 'sqlite3ValueText()', 'sqlite3_complete()', 'sqlite3_initialize()']
2Paths generated!
--------------Analysis-sqlite3_libversion-@sqlite3.c@line: 136540.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_sourceid-@sqlite3.c@line: 136546.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_libversion_number-@sqlite3.c@line: 136551.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_threadsafe-@sqlite3.c@line: 136557.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_initialize-@sqlite3.c@line: 136630.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3RegisterBuiltinFunctions()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3PCacheBufferSetup()', 'sqlite3RegisterBuiltinFunctions()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3OsInit()', 'sqlite3RegisterBuiltinFunctions()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3PcacheInitialize()', 'sqlite3RegisterBuiltinFunctions()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3OsInit()', 'sqlite3PCacheBufferSetup()', 'sqlite3PcacheInitialize()', 'sqlite3RegisterBuiltinFunctions()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'memset()', 'sqlite3MallocInit()', 'sqlite3MutexAlloc()', 'sqlite3MutexInit()', 'sqlite3OsInit()', 'sqlite3PCacheBufferSetup()', 'sqlite3PcacheInitialize()', 'sqlite3RegisterBuiltinFunctions()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
8Paths generated!
--------------Analysis-sqlite3_shutdown-@sqlite3.c@line: 136796.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3MutexEnd()']
['f_entry()', 'f_exit()', 'sqlite3MallocEnd()']
['f_entry()', 'f_exit()', 'sqlite3PcacheShutdown()']
['f_entry()', 'f_exit()', 'sqlite3_os_end()', 'sqlite3_reset_auto_extension()']
5Paths generated!
--------------Analysis-sqlite3_config-@sqlite3.c@line: 136850.....

['__builtin_va_start()', 'f_entry()', 'f_exit()']
['__builtin_va_start()', 'f_entry()', 'f_exit()', 'sqlite3MisuseError()']
2Paths generated!
--------------Analysis-setupLookaside-@sqlite3.c@line: 137156.....

['f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3Malloc()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3Malloc()', 'sqlite3MallocSize()']
['f_entry()', 'f_exit()', 'sqlite3_free()']
5Paths generated!
--------------Analysis-sqlite3_db_mutex-@sqlite3.c@line: 137215.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_db_release_memory-@sqlite3.c@line: 137229.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreePager()', 'sqlite3PagerShrink()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_db_cacheflush-@sqlite3.c@line: 137253.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeIsInTrans()', 'sqlite3BtreeLeaveAll()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeIsInTrans()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreePager()', 'sqlite3PagerFlush()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3_db_config-@sqlite3.c@line: 137282.....

['__builtin_va_start()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-allSpaces-@sqlite3.c@line: 137337.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-binCollFunc-@sqlite3.c@line: 137349.....

['f_entry()', 'f_exit()', 'memcmp()']
['allSpaces()', 'f_entry()', 'f_exit()', 'memcmp()']
2Paths generated!
--------------Analysis-nocaseCollatingFunc-@sqlite3.c@line: 137386.....

['f_entry()', 'f_exit()', 'sqlite3_strnicmp()']
1Paths generated!
--------------Analysis-sqlite3_last_insert_rowid-@sqlite3.c@line: 137403.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_changes-@sqlite3.c@line: 137416.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_total_changes-@sqlite3.c@line: 137429.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3CloseSavepoints-@sqlite3.c@line: 137444.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()']
2Paths generated!
--------------Analysis-functionDestroy-@sqlite3.c@line: 137461.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3DbFree()', 'xDestroy()']
2Paths generated!
--------------Analysis-disconnectAllVtab-@sqlite3.c@line: 137476.....

['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3VtabUnlockList()']
['f_entry()', 'f_exit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3VtabDisconnect()', 'sqlite3VtabUnlockList()']
2Paths generated!
--------------Analysis-connectionIsBusy-@sqlite3.c@line: 137507.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeIsInBackup()']
2Paths generated!
--------------Analysis-sqlite3Close-@sqlite3.c@line: 137521.....

['connectionIsBusy()', 'disconnectAllVtab()', 'f_entry()', 'f_exit()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3VtabRollback()', 'sqlite3_mutex_enter()']
['connectionIsBusy()', 'disconnectAllVtab()', 'f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3VtabRollback()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['connectionIsBusy()', 'disconnectAllVtab()', 'f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3VtabRollback()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xTrace()']
['connectionIsBusy()', 'disconnectAllVtab()', 'f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3LeaveMutexAndCloseZombie()', 'sqlite3MisuseError()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3VtabRollback()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xTrace()']
4Paths generated!
--------------Analysis-sqlite3_close-@sqlite3.c@line: 137580.....

['f_entry()', 'f_exit()', 'sqlite3Close()']
1Paths generated!
--------------Analysis-sqlite3_close_v2-@sqlite3.c@line: 137581.....

['f_entry()', 'f_exit()', 'sqlite3Close()']
1Paths generated!
--------------Analysis-sqlite3LeaveMutexAndCloseZombie-@sqlite3.c@line: 137592.....

['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3ValueFree()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()', 'xDestroy()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()', 'xDel()', 'xDestroy()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()', 'xDel()', 'xDestroy()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3SchemaClear()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()', 'xDel()', 'xDestroy()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3BtreeClose()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()', 'xDel()', 'xDestroy()']
['assert()', 'connectionIsBusy()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3BtreeClose()', 'sqlite3CloseExtensions()', 'sqlite3CloseSavepoints()', 'sqlite3CollapseDatabaseArray()', 'sqlite3DbFree()', 'sqlite3Error()', 'sqlite3HashClear()', 'sqlite3RollbackAll()', 'sqlite3SchemaClear()', 'sqlite3ValueFree()', 'sqlite3VtabEponymousTableClear()', 'sqlite3VtabUnlockList()', 'sqlite3_free()', 'sqlite3_mutex_free()', 'sqlite3_mutex_leave()', 'xDel()', 'xDestroy()']
8Paths generated!
--------------Analysis-sqlite3RollbackAll-@sqlite3.c@line: 137715.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3EndBenignMalloc()', 'sqlite3VtabRollback()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3EndBenignMalloc()', 'sqlite3VtabRollback()', 'xRollbackCallback()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3EndBenignMalloc()', 'sqlite3ExpirePreparedStatements()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3VtabRollback()', 'xRollbackCallback()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeIsInTrans()', 'sqlite3BtreeLeaveAll()', 'sqlite3BtreeRollback()', 'sqlite3EndBenignMalloc()', 'sqlite3ExpirePreparedStatements()', 'sqlite3ResetAllSchemasOfConnection()', 'sqlite3VtabRollback()', 'xRollbackCallback()']
4Paths generated!
--------------Analysis-sqlite3ErrStr-@sqlite3.c@line: 137873.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqliteDefaultBusyCallback-@sqlite3.c@line: 137926.....

['f_entry()', 'f_exit()', 'sqlite3OsSleep()']
1Paths generated!
--------------Analysis-sqlite3InvokeBusyHandler-@sqlite3.c@line: 137972.....

['f_entry()', 'f_exit()', 'xFunc()']
1Paths generated!
--------------Analysis-sqlite3_busy_handler-@sqlite3.c@line: 137988.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_progress_handler-@sqlite3.c@line: 138011.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_busy_timeout-@sqlite3.c@line: 138042.....

['f_entry()', 'f_exit()', 'sqlite3_busy_handler()']
1Paths generated!
--------------Analysis-sqlite3_interrupt-@sqlite3.c@line: 138058.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3CreateFunc-@sqlite3.c@line: 138075.....

['assert()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3FindFunction()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3ExpirePreparedStatements()', 'sqlite3FindFunction()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3ErrorWithMsg()', 'sqlite3FindFunction()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3CreateFunc()', 'sqlite3ErrorWithMsg()', 'sqlite3FindFunction()', 'sqlite3Strlen30()']
['assert()', 'f_entry()', 'f_exit()', 'functionDestroy()', 'sqlite3CreateFunc()', 'sqlite3ErrorWithMsg()', 'sqlite3FindFunction()', 'sqlite3MisuseError()', 'sqlite3Strlen30()']
5Paths generated!
--------------Analysis-sqlite3_create_function-@sqlite3.c@line: 138174.....

['f_entry()', 'f_exit()', 'sqlite3_create_function_v2()']
1Paths generated!
--------------Analysis-sqlite3_create_function_v2-@sqlite3.c@line: 138188.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3CreateFunc()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3CreateFunc()', 'sqlite3DbFree()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xDestroy()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3CreateFunc()', 'sqlite3DbFree()', 'sqlite3DbMallocZero()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'xDestroy()']
3Paths generated!
--------------Analysis-sqlite3_create_function16-@sqlite3.c@line: 138231.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3CreateFunc()', 'sqlite3DbFree()', 'sqlite3Utf16to8()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_overload_function-@sqlite3.c@line: 138271.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3FindFunction()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3CreateFunc()', 'sqlite3FindFunction()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_trace-@sqlite3.c@line: 138303.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_trace_v2-@sqlite3.c@line: 138324.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_profile-@sqlite3.c@line: 138352.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_commit_hook-@sqlite3.c@line: 138380.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_update_hook-@sqlite3.c@line: 138405.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_rollback_hook-@sqlite3.c@line: 138430.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3WalDefaultHook-@sqlite3.c@line: 138479.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3BeginBenignMalloc()', 'sqlite3EndBenignMalloc()', 'sqlite3_wal_checkpoint()']
2Paths generated!
--------------Analysis-sqlite3_wal_autocheckpoint-@sqlite3.c@line: 138505.....

['f_entry()', 'f_exit()', 'sqlite3_wal_hook()']
1Paths generated!
--------------Analysis-sqlite3_wal_hook-@sqlite3.c@line: 138526.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_wal_checkpoint_v2-@sqlite3.c@line: 138553.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Checkpoint()', 'sqlite3Error()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3ErrorWithMsg()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Checkpoint()', 'sqlite3Error()', 'sqlite3FindDbName()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3_wal_checkpoint-@sqlite3.c@line: 138608.....

['f_entry()', 'f_exit()', 'sqlite3_wal_checkpoint_v2()']
1Paths generated!
--------------Analysis-sqlite3Checkpoint-@sqlite3.c@line: 138634.....

['assert()', 'f_entry()', 'f_exit()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeCheckpoint()']
2Paths generated!
--------------Analysis-sqlite3TempInMemory-@sqlite3.c@line: 138678.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_errmsg-@sqlite3.c@line: 138699.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_value_text()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3ErrStr()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_value_text()']
['f_entry()', 'f_exit()', 'sqlite3ErrStr()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
3Paths generated!
--------------Analysis-sqlite3_errmsg16-@sqlite3.c@line: 138727.....

['f_entry()', 'f_exit()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3OomClear()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_value_text16()']
['f_entry()', 'f_exit()', 'sqlite3ErrorWithMsg()', 'sqlite3OomClear()', 'sqlite3SafetyCheckSickOrOk()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_value_text16()']
3Paths generated!
--------------Analysis-sqlite3_errcode-@sqlite3.c@line: 138772.....

['f_entry()', 'f_exit()', 'sqlite3SafetyCheckSickOrOk()']
['f_entry()', 'f_exit()', 'sqlite3MisuseError()', 'sqlite3SafetyCheckSickOrOk()']
2Paths generated!
--------------Analysis-sqlite3_extended_errcode-@sqlite3.c@line: 138781.....

['f_entry()', 'f_exit()', 'sqlite3SafetyCheckSickOrOk()']
['f_entry()', 'f_exit()', 'sqlite3MisuseError()', 'sqlite3SafetyCheckSickOrOk()']
2Paths generated!
--------------Analysis-sqlite3_system_errno-@sqlite3.c@line: 138790.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_errstr-@sqlite3.c@line: 138799.....

['f_entry()', 'f_exit()', 'sqlite3ErrStr()']
1Paths generated!
--------------Analysis-createCollation-@sqlite3.c@line: 138807.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3FindCollSeq()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3ExpirePreparedStatements()', 'sqlite3FindCollSeq()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3ExpirePreparedStatements()', 'sqlite3FindCollSeq()', 'sqlite3HashFind()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3ExpirePreparedStatements()', 'sqlite3FindCollSeq()', 'sqlite3HashFind()', 'xDel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3ErrorWithMsg()', 'sqlite3ExpirePreparedStatements()', 'sqlite3FindCollSeq()', 'sqlite3HashFind()', 'xDel()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3Error()', 'sqlite3ErrorWithMsg()', 'sqlite3ExpirePreparedStatements()', 'sqlite3FindCollSeq()', 'sqlite3HashFind()', 'sqlite3MisuseError()', 'xDel()']
6Paths generated!
--------------Analysis-sqlite3_limit-@sqlite3.c@line: 138947.....

['assert()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3ParseUri-@sqlite3.c@line: 139015.....

['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3Strlen30()', 'sqlite3_malloc64()', 'sqlite3_vfs_find()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_vfs_find()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'memcpy()', 'sqlite3Strlen30()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_vfs_find()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_vfs_find()']
['assert()', 'f_entry()', 'f_exit()', 'memcmp()', 'sqlite3HexToInt()', 'sqlite3Strlen30()', 'sqlite3_free()', 'sqlite3_malloc64()', 'sqlite3_mprintf()', 'sqlite3_vfs_find()']
5Paths generated!
--------------Analysis-openDatabase-@sqlite3.c@line: 139242.....

['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3AutoLoadExtensions()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3AutoLoadExtensions()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3ErrorWithMsg()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3AutoLoadExtensions()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3ErrorWithMsg()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3AutoLoadExtensions()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3ErrorWithMsg()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3MutexAlloc()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_wal_autocheckpoint()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'memcpy()', 'setupLookaside()', 'sqlite3AutoLoadExtensions()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreeOpen()', 'sqlite3Error()', 'sqlite3ErrorWithMsg()', 'sqlite3FindCollSeq()', 'sqlite3HashInit()', 'sqlite3MallocZero()', 'sqlite3MisuseError()', 'sqlite3MutexAlloc()', 'sqlite3OomFault()', 'sqlite3ParseUri()', 'sqlite3RegisterPerConnectionBuiltinFunctions()', 'sqlite3SchemaGet()', 'sqlite3_close()', 'sqlite3_errcode()', 'sqlite3_free()', 'sqlite3_initialize()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()', 'sqlite3_wal_autocheckpoint()']
8Paths generated!
--------------Analysis-sqlite3_open-@sqlite3.c@line: 139571.....

['f_entry()', 'f_exit()', 'openDatabase()']
1Paths generated!
--------------Analysis-sqlite3_open_v2-@sqlite3.c@line: 139578.....

['f_entry()', 'f_exit()', 'openDatabase()']
1Paths generated!
--------------Analysis-sqlite3_open16-@sqlite3.c@line: 139591.....

['f_entry()', 'f_exit()', 'sqlite3ValueFree()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()', 'sqlite3ValueText()', 'sqlite3_initialize()']
['assert()', 'f_entry()', 'f_exit()', 'openDatabase()', 'sqlite3ValueFree()', 'sqlite3ValueNew()', 'sqlite3ValueSetStr()', 'sqlite3ValueText()', 'sqlite3_initialize()']
2Paths generated!
--------------Analysis-sqlite3_create_collation-@sqlite3.c@line: 139630.....

['f_entry()', 'f_exit()', 'sqlite3_create_collation_v2()']
1Paths generated!
--------------Analysis-sqlite3_create_collation_v2-@sqlite3.c@line: 139643.....

['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_create_collation16-@sqlite3.c@line: 139668.....

['assert()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3Utf16to8()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'createCollation()', 'f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3DbFree()', 'sqlite3Utf16to8()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
2Paths generated!
--------------Analysis-sqlite3_collation_needed-@sqlite3.c@line: 139698.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_collation_needed16-@sqlite3.c@line: 139719.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_global_recover-@sqlite3.c@line: 139741.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_get_autocommit-@sqlite3.c@line: 139752.....

['f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-reportError-@sqlite3.c@line: 139773.....

['f_entry()', 'f_exit()', 'sqlite3_log()']
1Paths generated!
--------------Analysis-sqlite3CorruptError-@sqlite3.c@line: 139778.....

['f_entry()', 'f_exit()', 'reportError()']
1Paths generated!
--------------Analysis-sqlite3MisuseError-@sqlite3.c@line: 139782.....

['f_entry()', 'f_exit()', 'reportError()']
1Paths generated!
--------------Analysis-sqlite3CantopenError-@sqlite3.c@line: 139786.....

['f_entry()', 'f_exit()', 'reportError()']
1Paths generated!
--------------Analysis-sqlite3_thread_cleanup-@sqlite3.c@line: 139809.....

--------------Analysis-sqlite3_table_column_metadata-@sqlite3.c@line: 139817.....

['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3FindTable()', 'sqlite3Init()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3FindTable()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3ColumnType()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3FindTable()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3FindTable()', 'sqlite3Init()', 'sqlite3IsRowid()', 'sqlite3MPrintf()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['f_entry()', 'f_exit()', 'sqlite3ApiExit()', 'sqlite3BtreeEnterAll()', 'sqlite3BtreeLeaveAll()', 'sqlite3DbFree()', 'sqlite3ErrorWithMsg()', 'sqlite3FindTable()', 'sqlite3Init()', 'sqlite3MPrintf()', 'sqlite3StrICmp()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
5Paths generated!
--------------Analysis-sqlite3_sleep-@sqlite3.c@line: 139935.....

['f_entry()', 'f_exit()', 'sqlite3OsSleep()', 'sqlite3_vfs_find()']
1Paths generated!
--------------Analysis-sqlite3_extended_result_codes-@sqlite3.c@line: 139951.....

['f_entry()', 'f_exit()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
1Paths generated!
--------------Analysis-sqlite3_file_control-@sqlite3.c@line: 139964.....

['f_entry()', 'f_exit()', 'sqlite3DbNameToBtree()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3DbNameToBtree()', 'sqlite3PagerFile()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3DbNameToBtree()', 'sqlite3OsFileControl()', 'sqlite3PagerFile()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3DbNameToBtree()', 'sqlite3PagerFile()', 'sqlite3PagerJrnlFile()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
['assert()', 'f_entry()', 'f_exit()', 'sqlite3BtreeEnter()', 'sqlite3BtreeLeave()', 'sqlite3BtreePager()', 'sqlite3DbNameToBtree()', 'sqlite3PagerFile()', 'sqlite3PagerVfs()', 'sqlite3_mutex_enter()', 'sqlite3_mutex_leave()']
5Paths generated!
--------------Analysis-sqlite3_test_control-@sqlite3.c@line: 140004.....

['__builtin_va_start()', 'f_entry()', 'f_exit()']
1Paths generated!
--------------Analysis-sqlite3_uri_parameter-@sqlite3.c@line: 140349.....

['f_entry()', 'f_exit()', 'sqlite3Strlen30()']
['f_entry()', 'f_exit()', 'sqlite3Strlen30()', 'strcmp()']
2Paths generated!
--------------Analysis-sqlite3_uri_boolean-@sqlite3.c@line: 140364.....

['f_entry()', 'f_exit()', 'sqlite3_uri_parameter()']
['f_entry()', 'f_exit()', 'sqlite3GetBoolean()', 'sqlite3_uri_parameter()']
2Paths generated!
--------------Analysis-sqlite3_uri_int64-@sqlite3.c@line: 140373.....

['f_entry()', 'f_exit()', 'sqlite3DecOrHexToI64()', 'sqlite3_uri_parameter()']
1Paths generated!
--------------Analysis-sqlite3DbNameToBtree-@sqlite3.c@line: 140389.....

['f_entry()', 'f_exit()']
['f_entry()', 'f_exit()', 'sqlite3StrICmp()']
2Paths generated!
--------------Analysis-sqlite3_db_filename-@sqlite3.c@line: 140405.....

['f_entry()', 'f_exit()', 'sqlite3DbNameToBtree()']
['f_entry()', 'f_exit()', 'sqlite3BtreeGetFilename()', 'sqlite3DbNameToBtree()']
2Paths generated!
--------------Analysis-sqlite3_db_readonly-@sqlite3.c@line: 140421.....

['f_entry()', 'f_exit()', 'sqlite3DbNameToBtree()']
['f_entry()', 'f_exit()', 'sqlite3BtreeIsReadonly()', 'sqlite3DbNameToBtree()']
2Paths generated!
